// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module conv_2d_cl_array_array_ap_fixed_2u_config2_s (
        ap_clk,
        ap_rst,
        ap_start,
        start_full_n,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        start_out,
        start_write,
        data_V_data_V_dout,
        data_V_data_V_empty_n,
        data_V_data_V_read,
        res_V_data_0_V_din,
        res_V_data_0_V_full_n,
        res_V_data_0_V_write,
        res_V_data_1_V_din,
        res_V_data_1_V_full_n,
        res_V_data_1_V_write
);

parameter    ap_ST_fsm_state1 = 3'd1;
parameter    ap_ST_fsm_pp0_stage0 = 3'd2;
parameter    ap_ST_fsm_state8 = 3'd4;

input   ap_clk;
input   ap_rst;
input   ap_start;
input   start_full_n;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output   start_out;
output   start_write;
input  [7:0] data_V_data_V_dout;
input   data_V_data_V_empty_n;
output   data_V_data_V_read;
output  [7:0] res_V_data_0_V_din;
input   res_V_data_0_V_full_n;
output   res_V_data_0_V_write;
output  [7:0] res_V_data_1_V_din;
input   res_V_data_1_V_full_n;
output   res_V_data_1_V_write;

reg ap_done;
reg ap_idle;
reg start_write;
reg data_V_data_V_read;

reg    real_start;
reg    start_once_reg;
reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [2:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    internal_ap_ready;
reg    data_V_data_V_blk_n;
reg    ap_enable_reg_pp0_iter2;
wire    ap_block_pp0_stage0;
reg   [0:0] exitcond_flatten_reg_1523;
reg   [0:0] exitcond_flatten_reg_1523_pp0_iter1_reg;
reg    res_V_data_0_V_blk_n;
reg    ap_enable_reg_pp0_iter5;
reg   [0:0] tmp_1061_reg_1579;
reg   [0:0] tmp_1061_reg_1579_pp0_iter4_reg;
reg    res_V_data_1_V_blk_n;
reg   [6:0] indvar_flatten_reg_524;
reg   [3:0] h_idx_assign_reg_535;
reg   [3:0] wp_idx_reg_546;
wire   [0:0] exitcond_flatten_fu_615_p2;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state3_pp0_stage0_iter1;
wire    data_window_0_V_V_full_n;
reg    data_window_0_V_V_write;
reg   [0:0] tmp_1053_reg_1547;
wire    data_window_1_V_V_full_n;
reg    data_window_1_V_V_write;
reg   [0:0] tmp_1054_reg_1551;
wire    data_window_2_V_V_full_n;
reg    data_window_2_V_V_write;
reg   [0:0] tmp_1055_reg_1555;
wire    data_window_3_V_V_full_n;
reg    data_window_3_V_V_write;
reg   [0:0] tmp_1056_reg_1559;
wire    data_window_4_V_V_full_n;
reg    data_window_4_V_V_write;
reg   [0:0] tmp_1057_reg_1563;
wire    data_window_5_V_V_full_n;
reg    data_window_5_V_V_write;
reg   [0:0] tmp_1058_reg_1567;
wire    data_window_6_V_V_full_n;
reg    data_window_6_V_V_write;
reg   [0:0] tmp_1059_reg_1571;
wire    data_window_7_V_V_full_n;
reg    data_window_7_V_V_write;
reg   [0:0] tmp_1060_reg_1575;
wire    data_window_8_V_V_full_n;
reg    data_window_8_V_V_write;
reg    ap_block_state4_pp0_stage0_iter2;
wire   [7:0] data_window_0_V_V_dout;
wire    data_window_0_V_V_empty_n;
reg    data_window_0_V_V_read;
reg   [0:0] tmp_1061_reg_1579_pp0_iter2_reg;
wire   [7:0] data_window_1_V_V_dout;
wire    data_window_1_V_V_empty_n;
reg    data_window_1_V_V_read;
wire   [7:0] data_window_2_V_V_dout;
wire    data_window_2_V_V_empty_n;
reg    data_window_2_V_V_read;
wire   [7:0] data_window_3_V_V_dout;
wire    data_window_3_V_V_empty_n;
reg    data_window_3_V_V_read;
wire   [7:0] data_window_4_V_V_dout;
wire    data_window_4_V_V_empty_n;
reg    data_window_4_V_V_read;
wire   [7:0] data_window_5_V_V_dout;
wire    data_window_5_V_V_empty_n;
reg    data_window_5_V_V_read;
wire   [7:0] data_window_6_V_V_dout;
wire    data_window_6_V_V_empty_n;
reg    data_window_6_V_V_read;
wire   [7:0] data_window_7_V_V_dout;
wire    data_window_7_V_V_empty_n;
reg    data_window_7_V_V_read;
wire   [7:0] data_window_8_V_V_dout;
wire    data_window_8_V_V_empty_n;
reg    data_window_8_V_V_read;
reg    ap_block_state5_pp0_stage0_iter3;
reg    ap_enable_reg_pp0_iter3;
wire    ap_block_state6_pp0_stage0_iter4;
wire    res_V_data_0_V1_status;
reg    ap_block_state7_pp0_stage0_iter5;
reg    ap_block_pp0_stage0_11001;
wire   [6:0] indvar_flatten_next_fu_621_p2;
reg    ap_enable_reg_pp0_iter0;
wire   [3:0] h_idx_assign_mid2_fu_719_p3;
wire   [4:0] tmp_98_t_i_fu_791_p2;
reg   [4:0] tmp_98_t_i_reg_1537;
wire   [3:0] i_iw_fu_797_p2;
wire   [0:0] tmp_1053_fu_872_p1;
reg   [0:0] tmp_1061_reg_1579_pp0_iter3_reg;
reg  signed [7:0] tmp_V_14_reg_1583;
reg  signed [7:0] tmp_V_15_reg_1589;
reg  signed [7:0] tmp_V_17_reg_1596;
reg   [7:0] tmp_79_0_1_reg_1603;
reg   [6:0] tmp_687_reg_1608;
reg   [6:0] tmp_690_reg_1613;
reg   [7:0] tmp_79_3_reg_1618;
reg   [6:0] tmp_691_reg_1623;
reg   [7:0] tmp_79_6_reg_1628;
reg   [4:0] tmp_701_reg_1633;
wire   [5:0] tmp9_fu_1180_p2;
reg   [5:0] tmp9_reg_1638;
wire   [4:0] tmp16_fu_1186_p2;
reg   [4:0] tmp16_reg_1643;
wire   [7:0] res_0_V_fu_1415_p2;
reg   [7:0] res_0_V_reg_1648;
wire   [7:0] acc_1_V_fu_1463_p2;
reg   [7:0] acc_1_V_reg_1653;
reg    ap_block_state1;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter4;
reg    ap_block_pp0_stage0_01001;
reg    res_V_data_0_V1_update;
wire   [2:0] tmp_1049_fu_561_p4;
wire   [3:0] r_fu_577_p2;
wire   [0:0] tmp_12_i_fu_583_p2;
wire   [3:0] tmp_13_i_fu_589_p2;
wire   [3:0] p_i4_i_fu_595_p3;
wire   [0:0] icmp_fu_571_p2;
wire   [4:0] i_ih_cast_fu_557_p1;
wire  signed [4:0] p_i4_i_cast_fu_603_p1;
wire   [0:0] tmp_117_fu_627_p2;
wire   [3:0] i_ih4_fu_641_p2;
wire   [2:0] tmp_1050_fu_651_p4;
wire   [3:0] r_mid1_fu_667_p2;
wire   [0:0] tmp_12_i_mid1_fu_673_p2;
wire   [3:0] tmp_13_i_mid1_fu_679_p2;
wire   [3:0] p_i4_i_mid1_fu_685_p3;
wire   [0:0] icmp1_fu_661_p2;
wire   [4:0] i_ih_cast_mid1_fu_647_p1;
wire  signed [4:0] p_i4_i_cast_mid1_fu_693_p1;
wire   [4:0] sh_idx_mid1_fu_697_p3;
wire   [4:0] sh_idx_fu_607_p3;
wire   [4:0] sh_idx_mid2_fu_705_p3;
wire   [3:0] w_idx_assign_mid2_fu_633_p3;
wire   [2:0] tmp_1052_fu_731_p4;
wire   [3:0] r_1_fu_747_p2;
wire   [0:0] tmp_16_i_fu_753_p2;
wire   [3:0] tmp_17_i_fu_759_p2;
wire   [3:0] p_i_i_fu_765_p3;
wire   [0:0] icmp2_fu_741_p2;
wire   [4:0] i_iw_cast_fu_727_p1;
wire  signed [4:0] p_i_i_cast_fu_773_p1;
wire   [4:0] tmp_1051_fu_713_p2;
wire   [4:0] sel_tmp_fu_777_p3;
wire   [4:0] tmp_fu_785_p2;
wire   [8:0] p_Val2_s_fu_803_p34;
wire  signed [7:0] OP1_V_0_cast_fu_940_p0;
wire  signed [7:0] tmp_686_fu_944_p1;
wire   [3:0] tmp_686_fu_944_p4;
wire  signed [7:0] p_shl21_fu_958_p1;
wire   [10:0] p_shl21_fu_958_p3;
wire  signed [11:0] p_shl21_cast_fu_966_p1;
wire  signed [11:0] OP1_V_0_cast_fu_940_p1;
wire   [11:0] p_Val2_10_0_1_fu_970_p2;
wire   [9:0] p_shl20_fu_986_p3;
wire  signed [10:0] p_shl20_cast_fu_994_p1;
wire   [10:0] p_Val2_10_1_fu_998_p2;
wire   [3:0] tmp_689_fu_1014_p4;
wire  signed [7:0] OP1_V_3_cast_fu_1038_p0;
wire  signed [7:0] p_shl18_fu_1042_p1;
wire   [10:0] p_shl18_fu_1042_p3;
wire  signed [7:0] p_shl19_fu_1054_p1;
wire   [8:0] p_shl19_fu_1054_p3;
wire  signed [11:0] p_shl18_cast_fu_1050_p1;
wire  signed [11:0] p_shl19_cast_fu_1062_p1;
wire   [11:0] p_Val2_10_3_fu_1066_p2;
wire  signed [7:0] p_shl17_fu_1082_p1;
wire   [9:0] p_shl17_fu_1082_p3;
wire  signed [10:0] p_shl17_cast_fu_1090_p1;
wire  signed [10:0] OP1_V_3_cast_fu_1038_p1;
wire   [10:0] p_Val2_10_3_1_fu_1094_p2;
wire  signed [7:0] OP1_V_6_cast5_fu_1110_p0;
wire  signed [7:0] p_shl12_fu_1114_p1;
wire   [10:0] p_shl12_fu_1114_p3;
wire  signed [11:0] p_shl12_cast_fu_1122_p1;
wire  signed [11:0] OP1_V_6_cast5_fu_1110_p1;
wire   [11:0] p_Val2_10_6_fu_1126_p2;
wire  signed [7:0] tmp_701_fu_1142_p1;
wire   [4:0] tmp_703_fu_1152_p4;
wire   [3:0] tmp_704_fu_1166_p4;
wire  signed [5:0] tmp_79_cast_fu_954_p1;
wire  signed [5:0] tmp_79_8_cast_fu_1162_p1;
wire  signed [4:0] tmp_79_8_1_cast_fu_1176_p1;
wire  signed [4:0] tmp_79_1_1_cast_fu_1024_p1;
wire   [9:0] p_shl16_fu_1204_p3;
wire  signed [10:0] p_shl16_cast_fu_1211_p1;
wire   [10:0] p_Val2_10_4_fu_1215_p2;
wire   [6:0] tmp_693_fu_1221_p4;
wire  signed [10:0] OP1_V_4_cast8_fu_1201_p1;
wire   [10:0] p_Val2_10_4_1_fu_1235_p2;
wire   [6:0] tmp_695_fu_1241_p4;
wire   [8:0] p_shl14_fu_1258_p3;
wire  signed [9:0] p_shl14_cast_fu_1265_p1;
wire   [9:0] p_Val2_10_5_fu_1269_p2;
wire   [5:0] tmp_697_fu_1275_p4;
wire   [9:0] p_shl13_fu_1289_p3;
wire  signed [10:0] p_shl13_cast_fu_1296_p1;
wire  signed [10:0] OP1_V_5_cast7_fu_1255_p1;
wire   [10:0] p_Val2_10_5_1_fu_1300_p2;
wire   [6:0] tmp_699_fu_1306_p4;
wire   [10:0] p_shl_fu_1326_p3;
wire   [8:0] p_shl11_fu_1337_p3;
wire  signed [11:0] p_shl_cast_fu_1333_p1;
wire  signed [11:0] p_shl11_cast_fu_1344_p1;
wire   [11:0] p_Val2_10_7_fu_1348_p2;
wire  signed [8:0] OP1_V_7_cast4_fu_1323_p1;
wire   [8:0] p_Val2_10_7_1_fu_1364_p2;
wire   [4:0] tmp_702_fu_1370_p4;
wire  signed [7:0] tmp_688_fu_1192_p1;
wire   [7:0] tmp_79_7_fu_1354_p4;
wire   [7:0] tmp5_fu_1384_p2;
wire   [7:0] tmp6_fu_1388_p2;
wire  signed [7:0] tmp_698_fu_1285_p1;
wire  signed [7:0] tmp_694_fu_1231_p1;
wire   [7:0] tmp8_fu_1400_p2;
wire  signed [7:0] tmp9_cast_fu_1406_p1;
wire   [7:0] tmp4_fu_1394_p2;
wire   [7:0] tmp7_fu_1409_p2;
wire  signed [7:0] tmp_79_2_1_fu_1195_p1;
wire  signed [7:0] tmp_696_fu_1251_p1;
wire  signed [7:0] tmp_692_fu_1198_p1;
wire   [7:0] tmp11_fu_1421_p2;
wire   [7:0] tmp12_fu_1426_p2;
wire  signed [7:0] tmp_79_6_1_fu_1320_p1;
wire  signed [7:0] tmp_700_fu_1316_p1;
wire  signed [5:0] p_cast_fu_1380_p1;
wire  signed [5:0] tmp16_cast_fu_1444_p1;
wire   [5:0] tmp15_fu_1447_p2;
wire   [7:0] tmp14_fu_1438_p2;
wire  signed [7:0] tmp15_cast_fu_1453_p1;
wire   [7:0] tmp10_fu_1432_p2;
wire   [7:0] tmp13_fu_1457_p2;
wire    ap_CS_fsm_state8;
reg   [2:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;

// power-on initialization
initial begin
#0 start_once_reg = 1'b0;
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 3'd1;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
end

myproject_mux_325_9_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 9 ),
    .din2_WIDTH( 9 ),
    .din3_WIDTH( 9 ),
    .din4_WIDTH( 9 ),
    .din5_WIDTH( 9 ),
    .din6_WIDTH( 9 ),
    .din7_WIDTH( 9 ),
    .din8_WIDTH( 9 ),
    .din9_WIDTH( 9 ),
    .din10_WIDTH( 9 ),
    .din11_WIDTH( 9 ),
    .din12_WIDTH( 9 ),
    .din13_WIDTH( 9 ),
    .din14_WIDTH( 9 ),
    .din15_WIDTH( 9 ),
    .din16_WIDTH( 9 ),
    .din17_WIDTH( 9 ),
    .din18_WIDTH( 9 ),
    .din19_WIDTH( 9 ),
    .din20_WIDTH( 9 ),
    .din21_WIDTH( 9 ),
    .din22_WIDTH( 9 ),
    .din23_WIDTH( 9 ),
    .din24_WIDTH( 9 ),
    .din25_WIDTH( 9 ),
    .din26_WIDTH( 9 ),
    .din27_WIDTH( 9 ),
    .din28_WIDTH( 9 ),
    .din29_WIDTH( 9 ),
    .din30_WIDTH( 9 ),
    .din31_WIDTH( 9 ),
    .din32_WIDTH( 5 ),
    .dout_WIDTH( 9 ))
myproject_mux_325_9_1_1_U5(
    .din0(9'd1),
    .din1(9'd3),
    .din2(9'd7),
    .din3(9'd6),
    .din4(9'd4),
    .din5(9'd9),
    .din6(9'd27),
    .din7(9'd63),
    .din8(9'd54),
    .din9(9'd36),
    .din10(9'd73),
    .din11(9'd219),
    .din12(9'd511),
    .din13(9'd438),
    .din14(9'd292),
    .din15(9'd72),
    .din16(9'd216),
    .din17(9'd504),
    .din18(9'd432),
    .din19(9'd288),
    .din20(9'd64),
    .din21(9'd192),
    .din22(9'd448),
    .din23(9'd384),
    .din24(9'd256),
    .din25(9'd256),
    .din26(9'd256),
    .din27(9'd256),
    .din28(9'd256),
    .din29(9'd256),
    .din30(9'd256),
    .din31(9'd256),
    .din32(tmp_98_t_i_reg_1537),
    .dout(p_Val2_s_fu_803_p34)
);

fifo_w8_d24_A data_window_0_V_V_fifo_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(data_V_data_V_dout),
    .if_full_n(data_window_0_V_V_full_n),
    .if_write(data_window_0_V_V_write),
    .if_dout(data_window_0_V_V_dout),
    .if_empty_n(data_window_0_V_V_empty_n),
    .if_read(data_window_0_V_V_read)
);

fifo_w8_d24_A data_window_1_V_V_fifo_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(data_V_data_V_dout),
    .if_full_n(data_window_1_V_V_full_n),
    .if_write(data_window_1_V_V_write),
    .if_dout(data_window_1_V_V_dout),
    .if_empty_n(data_window_1_V_V_empty_n),
    .if_read(data_window_1_V_V_read)
);

fifo_w8_d24_A data_window_2_V_V_fifo_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(data_V_data_V_dout),
    .if_full_n(data_window_2_V_V_full_n),
    .if_write(data_window_2_V_V_write),
    .if_dout(data_window_2_V_V_dout),
    .if_empty_n(data_window_2_V_V_empty_n),
    .if_read(data_window_2_V_V_read)
);

fifo_w8_d24_A data_window_3_V_V_fifo_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(data_V_data_V_dout),
    .if_full_n(data_window_3_V_V_full_n),
    .if_write(data_window_3_V_V_write),
    .if_dout(data_window_3_V_V_dout),
    .if_empty_n(data_window_3_V_V_empty_n),
    .if_read(data_window_3_V_V_read)
);

fifo_w8_d24_A data_window_4_V_V_fifo_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(data_V_data_V_dout),
    .if_full_n(data_window_4_V_V_full_n),
    .if_write(data_window_4_V_V_write),
    .if_dout(data_window_4_V_V_dout),
    .if_empty_n(data_window_4_V_V_empty_n),
    .if_read(data_window_4_V_V_read)
);

fifo_w8_d24_A data_window_5_V_V_fifo_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(data_V_data_V_dout),
    .if_full_n(data_window_5_V_V_full_n),
    .if_write(data_window_5_V_V_write),
    .if_dout(data_window_5_V_V_dout),
    .if_empty_n(data_window_5_V_V_empty_n),
    .if_read(data_window_5_V_V_read)
);

fifo_w8_d24_A data_window_6_V_V_fifo_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(data_V_data_V_dout),
    .if_full_n(data_window_6_V_V_full_n),
    .if_write(data_window_6_V_V_write),
    .if_dout(data_window_6_V_V_dout),
    .if_empty_n(data_window_6_V_V_empty_n),
    .if_read(data_window_6_V_V_read)
);

fifo_w8_d24_A data_window_7_V_V_fifo_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(data_V_data_V_dout),
    .if_full_n(data_window_7_V_V_full_n),
    .if_write(data_window_7_V_V_write),
    .if_dout(data_window_7_V_V_dout),
    .if_empty_n(data_window_7_V_V_empty_n),
    .if_read(data_window_7_V_V_read)
);

fifo_w8_d24_A data_window_8_V_V_fifo_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(data_V_data_V_dout),
    .if_full_n(data_window_8_V_V_full_n),
    .if_write(data_window_8_V_V_write),
    .if_dout(data_window_8_V_V_dout),
    .if_empty_n(data_window_8_V_V_empty_n),
    .if_read(data_window_8_V_V_read)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state8)) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_condition_pp0_exit_iter0_state2))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state2)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state2);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter5 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if (((internal_ap_ready == 1'b0) & (real_start == 1'b1))) begin
            start_once_reg <= 1'b1;
        end else if ((internal_ap_ready == 1'b1)) begin
            start_once_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_fu_615_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        h_idx_assign_reg_535 <= h_idx_assign_mid2_fu_719_p3;
    end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        h_idx_assign_reg_535 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_fu_615_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        indvar_flatten_reg_524 <= indvar_flatten_next_fu_621_p2;
    end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        indvar_flatten_reg_524 <= 7'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_fu_615_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        wp_idx_reg_546 <= i_iw_fu_797_p2;
    end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        wp_idx_reg_546 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_1061_reg_1579_pp0_iter3_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        acc_1_V_reg_1653 <= acc_1_V_fu_1463_p2;
        res_0_V_reg_1648 <= res_0_V_fu_1415_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        exitcond_flatten_reg_1523 <= exitcond_flatten_fu_615_p2;
        exitcond_flatten_reg_1523_pp0_iter1_reg <= exitcond_flatten_reg_1523;
        tmp_1054_reg_1551 <= p_Val2_s_fu_803_p34[32'd1];
        tmp_1055_reg_1555 <= p_Val2_s_fu_803_p34[32'd2];
        tmp_1056_reg_1559 <= p_Val2_s_fu_803_p34[32'd3];
        tmp_1057_reg_1563 <= p_Val2_s_fu_803_p34[32'd4];
        tmp_1058_reg_1567 <= p_Val2_s_fu_803_p34[32'd5];
        tmp_1059_reg_1571 <= p_Val2_s_fu_803_p34[32'd6];
        tmp_1060_reg_1575 <= p_Val2_s_fu_803_p34[32'd7];
        tmp_1061_reg_1579 <= p_Val2_s_fu_803_p34[32'd8];
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_1061_reg_1579_pp0_iter2_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp16_reg_1643 <= tmp16_fu_1186_p2;
        tmp9_reg_1638 <= tmp9_fu_1180_p2;
        tmp_687_reg_1608 <= {{p_Val2_10_1_fu_998_p2[10:4]}};
        tmp_690_reg_1613 <= {{data_window_2_V_V_dout[7:1]}};
        tmp_691_reg_1623 <= {{p_Val2_10_3_1_fu_1094_p2[10:4]}};
        tmp_701_reg_1633 <= {{tmp_701_fu_1142_p1[7:3]}};
        tmp_79_0_1_reg_1603 <= {{p_Val2_10_0_1_fu_970_p2[11:4]}};
        tmp_79_3_reg_1618 <= {{p_Val2_10_3_fu_1066_p2[11:4]}};
        tmp_79_6_reg_1628 <= {{p_Val2_10_6_fu_1126_p2[11:4]}};
        tmp_V_14_reg_1583 <= data_window_4_V_V_dout;
        tmp_V_15_reg_1589 <= data_window_5_V_V_dout;
        tmp_V_17_reg_1596 <= data_window_7_V_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_1523 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_1053_reg_1547 <= tmp_1053_fu_872_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        tmp_1061_reg_1579_pp0_iter2_reg <= tmp_1061_reg_1579;
        tmp_1061_reg_1579_pp0_iter3_reg <= tmp_1061_reg_1579_pp0_iter2_reg;
        tmp_1061_reg_1579_pp0_iter4_reg <= tmp_1061_reg_1579_pp0_iter3_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_fu_615_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_98_t_i_reg_1537 <= tmp_98_t_i_fu_791_p2;
    end
end

always @ (*) begin
    if ((exitcond_flatten_fu_615_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((real_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_flatten_reg_1523_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        data_V_data_V_blk_n = data_V_data_V_empty_n;
    end else begin
        data_V_data_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((exitcond_flatten_reg_1523_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        data_V_data_V_read = 1'b1;
    end else begin
        data_V_data_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_1061_reg_1579_pp0_iter2_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        data_window_0_V_V_read = 1'b1;
    end else begin
        data_window_0_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_1053_reg_1547 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        data_window_0_V_V_write = 1'b1;
    end else begin
        data_window_0_V_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_1061_reg_1579_pp0_iter2_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        data_window_1_V_V_read = 1'b1;
    end else begin
        data_window_1_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_1054_reg_1551 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        data_window_1_V_V_write = 1'b1;
    end else begin
        data_window_1_V_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_1061_reg_1579_pp0_iter2_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        data_window_2_V_V_read = 1'b1;
    end else begin
        data_window_2_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_1055_reg_1555 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        data_window_2_V_V_write = 1'b1;
    end else begin
        data_window_2_V_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_1061_reg_1579_pp0_iter2_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        data_window_3_V_V_read = 1'b1;
    end else begin
        data_window_3_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_1056_reg_1559 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        data_window_3_V_V_write = 1'b1;
    end else begin
        data_window_3_V_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_1061_reg_1579_pp0_iter2_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        data_window_4_V_V_read = 1'b1;
    end else begin
        data_window_4_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_1057_reg_1563 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        data_window_4_V_V_write = 1'b1;
    end else begin
        data_window_4_V_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_1061_reg_1579_pp0_iter2_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        data_window_5_V_V_read = 1'b1;
    end else begin
        data_window_5_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_1058_reg_1567 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        data_window_5_V_V_write = 1'b1;
    end else begin
        data_window_5_V_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_1061_reg_1579_pp0_iter2_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        data_window_6_V_V_read = 1'b1;
    end else begin
        data_window_6_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_1059_reg_1571 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        data_window_6_V_V_write = 1'b1;
    end else begin
        data_window_6_V_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_1061_reg_1579_pp0_iter2_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        data_window_7_V_V_read = 1'b1;
    end else begin
        data_window_7_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_1060_reg_1575 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        data_window_7_V_V_write = 1'b1;
    end else begin
        data_window_7_V_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_1061_reg_1579_pp0_iter2_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        data_window_8_V_V_read = 1'b1;
    end else begin
        data_window_8_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_1061_reg_1579 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        data_window_8_V_V_write = 1'b1;
    end else begin
        data_window_8_V_V_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        internal_ap_ready = 1'b1;
    end else begin
        internal_ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (start_full_n == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if (((tmp_1061_reg_1579_pp0_iter4_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
        res_V_data_0_V1_update = 1'b1;
    end else begin
        res_V_data_0_V1_update = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_1061_reg_1579_pp0_iter4_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
        res_V_data_0_V_blk_n = res_V_data_0_V_full_n;
    end else begin
        res_V_data_0_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((tmp_1061_reg_1579_pp0_iter4_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
        res_V_data_1_V_blk_n = res_V_data_1_V_full_n;
    end else begin
        res_V_data_1_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (real_start == 1'b1))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((exitcond_flatten_fu_615_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1)) & ~((ap_enable_reg_pp0_iter4 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter5 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((ap_enable_reg_pp0_iter4 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter5 == 1'b1)) | ((exitcond_flatten_fu_615_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign OP1_V_0_cast_fu_940_p0 = data_window_0_V_V_dout;

assign OP1_V_0_cast_fu_940_p1 = OP1_V_0_cast_fu_940_p0;

assign OP1_V_3_cast_fu_1038_p0 = data_window_3_V_V_dout;

assign OP1_V_3_cast_fu_1038_p1 = OP1_V_3_cast_fu_1038_p0;

assign OP1_V_4_cast8_fu_1201_p1 = tmp_V_14_reg_1583;

assign OP1_V_5_cast7_fu_1255_p1 = tmp_V_15_reg_1589;

assign OP1_V_6_cast5_fu_1110_p0 = data_window_6_V_V_dout;

assign OP1_V_6_cast5_fu_1110_p1 = OP1_V_6_cast5_fu_1110_p0;

assign OP1_V_7_cast4_fu_1323_p1 = tmp_V_17_reg_1596;

assign acc_1_V_fu_1463_p2 = (tmp10_fu_1432_p2 + tmp13_fu_1457_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd2];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((tmp_1061_reg_1579_pp0_iter4_reg == 1'd1) & (res_V_data_0_V1_status == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b1)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (((tmp_1053_reg_1547 == 1'd1) & (data_window_0_V_V_full_n == 1'b0)) | ((exitcond_flatten_reg_1523_pp0_iter1_reg == 1'd0) & (data_V_data_V_empty_n == 1'b0)) | ((tmp_1061_reg_1579 == 1'd1) & (data_window_8_V_V_full_n == 1'b0)) | ((tmp_1060_reg_1575 == 1'd1) & (data_window_7_V_V_full_n == 1'b0)) | ((tmp_1059_reg_1571 == 1'd1) & (data_window_6_V_V_full_n == 1'b0)) | ((tmp_1058_reg_1567 == 1'd1) & (data_window_5_V_V_full_n == 1'b0)) | ((tmp_1057_reg_1563 == 1'd1) & (data_window_4_V_V_full_n == 1'b0)) | ((tmp_1056_reg_1559 == 1'd1) & (data_window_3_V_V_full_n == 1'b0)) | ((tmp_1055_reg_1555 == 1'd1) & (data_window_2_V_V_full_n == 1'b0)) | ((tmp_1054_reg_1551 == 1'd1) & (data_window_1_V_V_full_n == 1'b0)))) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (((tmp_1061_reg_1579_pp0_iter2_reg == 1'd1) & (data_window_8_V_V_empty_n == 1'b0)) | ((tmp_1061_reg_1579_pp0_iter2_reg == 1'd1) & (data_window_7_V_V_empty_n == 1'b0)) | ((tmp_1061_reg_1579_pp0_iter2_reg == 1'd1) & (data_window_6_V_V_empty_n == 1'b0)) | ((tmp_1061_reg_1579_pp0_iter2_reg == 1'd1) & (data_window_5_V_V_empty_n == 1'b0)) | ((tmp_1061_reg_1579_pp0_iter2_reg == 1'd1) & (data_window_4_V_V_empty_n == 1'b0)) | ((tmp_1061_reg_1579_pp0_iter2_reg == 1'd1) & (data_window_3_V_V_empty_n == 1'b0)) | ((tmp_1061_reg_1579_pp0_iter2_reg == 1'd1) & (data_window_2_V_V_empty_n == 1'b0)) | ((tmp_1061_reg_1579_pp0_iter2_reg == 1'd1) & (data_window_1_V_V_empty_n == 1'b0)) | ((tmp_1061_reg_1579_pp0_iter2_reg == 1'd1) & (data_window_0_V_V_empty_n == 1'b0)))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((tmp_1061_reg_1579_pp0_iter4_reg == 1'd1) & (res_V_data_0_V1_status == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b1)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (((tmp_1053_reg_1547 == 1'd1) & (data_window_0_V_V_full_n == 1'b0)) | ((exitcond_flatten_reg_1523_pp0_iter1_reg == 1'd0) & (data_V_data_V_empty_n == 1'b0)) | ((tmp_1061_reg_1579 == 1'd1) & (data_window_8_V_V_full_n == 1'b0)) | ((tmp_1060_reg_1575 == 1'd1) & (data_window_7_V_V_full_n == 1'b0)) | ((tmp_1059_reg_1571 == 1'd1) & (data_window_6_V_V_full_n == 1'b0)) | ((tmp_1058_reg_1567 == 1'd1) & (data_window_5_V_V_full_n == 1'b0)) | ((tmp_1057_reg_1563 == 1'd1) & (data_window_4_V_V_full_n == 1'b0)) | ((tmp_1056_reg_1559 == 1'd1) & (data_window_3_V_V_full_n == 1'b0)) | ((tmp_1055_reg_1555 == 1'd1) & (data_window_2_V_V_full_n == 1'b0)) | ((tmp_1054_reg_1551 == 1'd1) & (data_window_1_V_V_full_n == 1'b0)))) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (((tmp_1061_reg_1579_pp0_iter2_reg == 1'd1) & (data_window_8_V_V_empty_n == 1'b0)) | ((tmp_1061_reg_1579_pp0_iter2_reg == 1'd1) & (data_window_7_V_V_empty_n == 1'b0)) | ((tmp_1061_reg_1579_pp0_iter2_reg == 1'd1) & (data_window_6_V_V_empty_n == 1'b0)) | ((tmp_1061_reg_1579_pp0_iter2_reg == 1'd1) & (data_window_5_V_V_empty_n == 1'b0)) | ((tmp_1061_reg_1579_pp0_iter2_reg == 1'd1) & (data_window_4_V_V_empty_n == 1'b0)) | ((tmp_1061_reg_1579_pp0_iter2_reg == 1'd1) & (data_window_3_V_V_empty_n == 1'b0)) | ((tmp_1061_reg_1579_pp0_iter2_reg == 1'd1) & (data_window_2_V_V_empty_n == 1'b0)) | ((tmp_1061_reg_1579_pp0_iter2_reg == 1'd1) & (data_window_1_V_V_empty_n == 1'b0)) | ((tmp_1061_reg_1579_pp0_iter2_reg == 1'd1) & (data_window_0_V_V_empty_n == 1'b0)))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((tmp_1061_reg_1579_pp0_iter4_reg == 1'd1) & (res_V_data_0_V1_status == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b1)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (((tmp_1053_reg_1547 == 1'd1) & (data_window_0_V_V_full_n == 1'b0)) | ((exitcond_flatten_reg_1523_pp0_iter1_reg == 1'd0) & (data_V_data_V_empty_n == 1'b0)) | ((tmp_1061_reg_1579 == 1'd1) & (data_window_8_V_V_full_n == 1'b0)) | ((tmp_1060_reg_1575 == 1'd1) & (data_window_7_V_V_full_n == 1'b0)) | ((tmp_1059_reg_1571 == 1'd1) & (data_window_6_V_V_full_n == 1'b0)) | ((tmp_1058_reg_1567 == 1'd1) & (data_window_5_V_V_full_n == 1'b0)) | ((tmp_1057_reg_1563 == 1'd1) & (data_window_4_V_V_full_n == 1'b0)) | ((tmp_1056_reg_1559 == 1'd1) & (data_window_3_V_V_full_n == 1'b0)) | ((tmp_1055_reg_1555 == 1'd1) & (data_window_2_V_V_full_n == 1'b0)) | ((tmp_1054_reg_1551 == 1'd1) & (data_window_1_V_V_full_n == 1'b0)))) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (((tmp_1061_reg_1579_pp0_iter2_reg == 1'd1) & (data_window_8_V_V_empty_n == 1'b0)) | ((tmp_1061_reg_1579_pp0_iter2_reg == 1'd1) & (data_window_7_V_V_empty_n == 1'b0)) | ((tmp_1061_reg_1579_pp0_iter2_reg == 1'd1) & (data_window_6_V_V_empty_n == 1'b0)) | ((tmp_1061_reg_1579_pp0_iter2_reg == 1'd1) & (data_window_5_V_V_empty_n == 1'b0)) | ((tmp_1061_reg_1579_pp0_iter2_reg == 1'd1) & (data_window_4_V_V_empty_n == 1'b0)) | ((tmp_1061_reg_1579_pp0_iter2_reg == 1'd1) & (data_window_3_V_V_empty_n == 1'b0)) | ((tmp_1061_reg_1579_pp0_iter2_reg == 1'd1) & (data_window_2_V_V_empty_n == 1'b0)) | ((tmp_1061_reg_1579_pp0_iter2_reg == 1'd1) & (data_window_1_V_V_empty_n == 1'b0)) | ((tmp_1061_reg_1579_pp0_iter2_reg == 1'd1) & (data_window_0_V_V_empty_n == 1'b0)))));
end

always @ (*) begin
    ap_block_state1 = ((real_start == 1'b0) | (ap_done_reg == 1'b1));
end

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state4_pp0_stage0_iter2 = (((tmp_1053_reg_1547 == 1'd1) & (data_window_0_V_V_full_n == 1'b0)) | ((exitcond_flatten_reg_1523_pp0_iter1_reg == 1'd0) & (data_V_data_V_empty_n == 1'b0)) | ((tmp_1061_reg_1579 == 1'd1) & (data_window_8_V_V_full_n == 1'b0)) | ((tmp_1060_reg_1575 == 1'd1) & (data_window_7_V_V_full_n == 1'b0)) | ((tmp_1059_reg_1571 == 1'd1) & (data_window_6_V_V_full_n == 1'b0)) | ((tmp_1058_reg_1567 == 1'd1) & (data_window_5_V_V_full_n == 1'b0)) | ((tmp_1057_reg_1563 == 1'd1) & (data_window_4_V_V_full_n == 1'b0)) | ((tmp_1056_reg_1559 == 1'd1) & (data_window_3_V_V_full_n == 1'b0)) | ((tmp_1055_reg_1555 == 1'd1) & (data_window_2_V_V_full_n == 1'b0)) | ((tmp_1054_reg_1551 == 1'd1) & (data_window_1_V_V_full_n == 1'b0)));
end

always @ (*) begin
    ap_block_state5_pp0_stage0_iter3 = (((tmp_1061_reg_1579_pp0_iter2_reg == 1'd1) & (data_window_8_V_V_empty_n == 1'b0)) | ((tmp_1061_reg_1579_pp0_iter2_reg == 1'd1) & (data_window_7_V_V_empty_n == 1'b0)) | ((tmp_1061_reg_1579_pp0_iter2_reg == 1'd1) & (data_window_6_V_V_empty_n == 1'b0)) | ((tmp_1061_reg_1579_pp0_iter2_reg == 1'd1) & (data_window_5_V_V_empty_n == 1'b0)) | ((tmp_1061_reg_1579_pp0_iter2_reg == 1'd1) & (data_window_4_V_V_empty_n == 1'b0)) | ((tmp_1061_reg_1579_pp0_iter2_reg == 1'd1) & (data_window_3_V_V_empty_n == 1'b0)) | ((tmp_1061_reg_1579_pp0_iter2_reg == 1'd1) & (data_window_2_V_V_empty_n == 1'b0)) | ((tmp_1061_reg_1579_pp0_iter2_reg == 1'd1) & (data_window_1_V_V_empty_n == 1'b0)) | ((tmp_1061_reg_1579_pp0_iter2_reg == 1'd1) & (data_window_0_V_V_empty_n == 1'b0)));
end

assign ap_block_state6_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state7_pp0_stage0_iter5 = ((tmp_1061_reg_1579_pp0_iter4_reg == 1'd1) & (res_V_data_0_V1_status == 1'b0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_ready = internal_ap_ready;

assign exitcond_flatten_fu_615_p2 = ((indvar_flatten_reg_524 == 7'd100) ? 1'b1 : 1'b0);

assign h_idx_assign_mid2_fu_719_p3 = ((tmp_117_fu_627_p2[0:0] === 1'b1) ? i_ih4_fu_641_p2 : h_idx_assign_reg_535);

assign i_ih4_fu_641_p2 = (4'd1 + h_idx_assign_reg_535);

assign i_ih_cast_fu_557_p1 = h_idx_assign_reg_535;

assign i_ih_cast_mid1_fu_647_p1 = i_ih4_fu_641_p2;

assign i_iw_cast_fu_727_p1 = w_idx_assign_mid2_fu_633_p3;

assign i_iw_fu_797_p2 = (w_idx_assign_mid2_fu_633_p3 + 4'd1);

assign icmp1_fu_661_p2 = ((tmp_1050_fu_651_p4 == 3'd0) ? 1'b1 : 1'b0);

assign icmp2_fu_741_p2 = ((tmp_1052_fu_731_p4 == 3'd0) ? 1'b1 : 1'b0);

assign icmp_fu_571_p2 = ((tmp_1049_fu_561_p4 == 3'd0) ? 1'b1 : 1'b0);

assign indvar_flatten_next_fu_621_p2 = (indvar_flatten_reg_524 + 7'd1);

assign p_Val2_10_0_1_fu_970_p2 = ($signed(p_shl21_cast_fu_966_p1) - $signed(OP1_V_0_cast_fu_940_p1));

assign p_Val2_10_1_fu_998_p2 = ($signed(11'd0) - $signed(p_shl20_cast_fu_994_p1));

assign p_Val2_10_3_1_fu_1094_p2 = ($signed(p_shl17_cast_fu_1090_p1) - $signed(OP1_V_3_cast_fu_1038_p1));

assign p_Val2_10_3_fu_1066_p2 = ($signed(p_shl18_cast_fu_1050_p1) - $signed(p_shl19_cast_fu_1062_p1));

assign p_Val2_10_4_1_fu_1235_p2 = ($signed(OP1_V_4_cast8_fu_1201_p1) + $signed(p_shl16_cast_fu_1211_p1));

assign p_Val2_10_4_fu_1215_p2 = ($signed(11'd0) - $signed(p_shl16_cast_fu_1211_p1));

assign p_Val2_10_5_1_fu_1300_p2 = ($signed(p_shl13_cast_fu_1296_p1) - $signed(OP1_V_5_cast7_fu_1255_p1));

assign p_Val2_10_5_fu_1269_p2 = ($signed(10'd0) - $signed(p_shl14_cast_fu_1265_p1));

assign p_Val2_10_6_fu_1126_p2 = ($signed(p_shl12_cast_fu_1122_p1) - $signed(OP1_V_6_cast5_fu_1110_p1));

assign p_Val2_10_7_1_fu_1364_p2 = ($signed(9'd0) - $signed(OP1_V_7_cast4_fu_1323_p1));

assign p_Val2_10_7_fu_1348_p2 = ($signed(p_shl_cast_fu_1333_p1) - $signed(p_shl11_cast_fu_1344_p1));

assign p_cast_fu_1380_p1 = $signed(tmp_702_fu_1370_p4);

assign p_i4_i_cast_fu_603_p1 = $signed(p_i4_i_fu_595_p3);

assign p_i4_i_cast_mid1_fu_693_p1 = $signed(p_i4_i_mid1_fu_685_p3);

assign p_i4_i_fu_595_p3 = ((tmp_12_i_fu_583_p2[0:0] === 1'b1) ? tmp_13_i_fu_589_p2 : 4'd2);

assign p_i4_i_mid1_fu_685_p3 = ((tmp_12_i_mid1_fu_673_p2[0:0] === 1'b1) ? tmp_13_i_mid1_fu_679_p2 : 4'd2);

assign p_i_i_cast_fu_773_p1 = $signed(p_i_i_fu_765_p3);

assign p_i_i_fu_765_p3 = ((tmp_16_i_fu_753_p2[0:0] === 1'b1) ? tmp_17_i_fu_759_p2 : 4'd2);

assign p_shl11_cast_fu_1344_p1 = $signed(p_shl11_fu_1337_p3);

assign p_shl11_fu_1337_p3 = {{tmp_V_17_reg_1596}, {1'd0}};

assign p_shl12_cast_fu_1122_p1 = $signed(p_shl12_fu_1114_p3);

assign p_shl12_fu_1114_p1 = data_window_6_V_V_dout;

assign p_shl12_fu_1114_p3 = {{p_shl12_fu_1114_p1}, {3'd0}};

assign p_shl13_cast_fu_1296_p1 = $signed(p_shl13_fu_1289_p3);

assign p_shl13_fu_1289_p3 = {{tmp_V_15_reg_1589}, {2'd0}};

assign p_shl14_cast_fu_1265_p1 = $signed(p_shl14_fu_1258_p3);

assign p_shl14_fu_1258_p3 = {{tmp_V_15_reg_1589}, {1'd0}};

assign p_shl16_cast_fu_1211_p1 = $signed(p_shl16_fu_1204_p3);

assign p_shl16_fu_1204_p3 = {{tmp_V_14_reg_1583}, {2'd0}};

assign p_shl17_cast_fu_1090_p1 = $signed(p_shl17_fu_1082_p3);

assign p_shl17_fu_1082_p1 = data_window_3_V_V_dout;

assign p_shl17_fu_1082_p3 = {{p_shl17_fu_1082_p1}, {2'd0}};

assign p_shl18_cast_fu_1050_p1 = $signed(p_shl18_fu_1042_p3);

assign p_shl18_fu_1042_p1 = data_window_3_V_V_dout;

assign p_shl18_fu_1042_p3 = {{p_shl18_fu_1042_p1}, {3'd0}};

assign p_shl19_cast_fu_1062_p1 = $signed(p_shl19_fu_1054_p3);

assign p_shl19_fu_1054_p1 = data_window_3_V_V_dout;

assign p_shl19_fu_1054_p3 = {{p_shl19_fu_1054_p1}, {1'd0}};

assign p_shl20_cast_fu_994_p1 = $signed(p_shl20_fu_986_p3);

assign p_shl20_fu_986_p3 = {{data_window_1_V_V_dout}, {2'd0}};

assign p_shl21_cast_fu_966_p1 = $signed(p_shl21_fu_958_p3);

assign p_shl21_fu_958_p1 = data_window_0_V_V_dout;

assign p_shl21_fu_958_p3 = {{p_shl21_fu_958_p1}, {3'd0}};

assign p_shl_cast_fu_1333_p1 = $signed(p_shl_fu_1326_p3);

assign p_shl_fu_1326_p3 = {{tmp_V_17_reg_1596}, {3'd0}};

assign r_1_fu_747_p2 = ($signed(4'd10) - $signed(w_idx_assign_mid2_fu_633_p3));

assign r_fu_577_p2 = ($signed(4'd10) - $signed(h_idx_assign_reg_535));

assign r_mid1_fu_667_p2 = ($signed(4'd9) - $signed(h_idx_assign_reg_535));

assign res_0_V_fu_1415_p2 = (tmp4_fu_1394_p2 + tmp7_fu_1409_p2);

assign res_V_data_0_V1_status = (res_V_data_1_V_full_n & res_V_data_0_V_full_n);

assign res_V_data_0_V_din = res_0_V_reg_1648;

assign res_V_data_0_V_write = res_V_data_0_V1_update;

assign res_V_data_1_V_din = acc_1_V_reg_1653;

assign res_V_data_1_V_write = res_V_data_0_V1_update;

assign sel_tmp_fu_777_p3 = ((icmp2_fu_741_p2[0:0] === 1'b1) ? i_iw_cast_fu_727_p1 : p_i_i_cast_fu_773_p1);

assign sh_idx_fu_607_p3 = ((icmp_fu_571_p2[0:0] === 1'b1) ? i_ih_cast_fu_557_p1 : p_i4_i_cast_fu_603_p1);

assign sh_idx_mid1_fu_697_p3 = ((icmp1_fu_661_p2[0:0] === 1'b1) ? i_ih_cast_mid1_fu_647_p1 : p_i4_i_cast_mid1_fu_693_p1);

assign sh_idx_mid2_fu_705_p3 = ((tmp_117_fu_627_p2[0:0] === 1'b1) ? sh_idx_mid1_fu_697_p3 : sh_idx_fu_607_p3);

assign start_out = real_start;

assign tmp10_fu_1432_p2 = (tmp11_fu_1421_p2 + tmp12_fu_1426_p2);

assign tmp11_fu_1421_p2 = ($signed(tmp_79_2_1_fu_1195_p1) + $signed(tmp_79_0_1_reg_1603));

assign tmp12_fu_1426_p2 = ($signed(tmp_696_fu_1251_p1) + $signed(tmp_692_fu_1198_p1));

assign tmp13_fu_1457_p2 = ($signed(tmp14_fu_1438_p2) + $signed(tmp15_cast_fu_1453_p1));

assign tmp14_fu_1438_p2 = ($signed(tmp_79_6_1_fu_1320_p1) + $signed(tmp_700_fu_1316_p1));

assign tmp15_cast_fu_1453_p1 = $signed(tmp15_fu_1447_p2);

assign tmp15_fu_1447_p2 = ($signed(p_cast_fu_1380_p1) + $signed(tmp16_cast_fu_1444_p1));

assign tmp16_cast_fu_1444_p1 = $signed(tmp16_reg_1643);

assign tmp16_fu_1186_p2 = ($signed(tmp_79_8_1_cast_fu_1176_p1) + $signed(tmp_79_1_1_cast_fu_1024_p1));

assign tmp4_fu_1394_p2 = (tmp5_fu_1384_p2 + tmp6_fu_1388_p2);

assign tmp5_fu_1384_p2 = (tmp_79_6_reg_1628 + tmp_79_3_reg_1618);

assign tmp6_fu_1388_p2 = ($signed(tmp_688_fu_1192_p1) + $signed(tmp_79_7_fu_1354_p4));

assign tmp7_fu_1409_p2 = ($signed(tmp8_fu_1400_p2) + $signed(tmp9_cast_fu_1406_p1));

assign tmp8_fu_1400_p2 = ($signed(tmp_698_fu_1285_p1) + $signed(tmp_694_fu_1231_p1));

assign tmp9_cast_fu_1406_p1 = $signed(tmp9_reg_1638);

assign tmp9_fu_1180_p2 = ($signed(tmp_79_cast_fu_954_p1) + $signed(tmp_79_8_cast_fu_1162_p1));

assign tmp_1049_fu_561_p4 = {{h_idx_assign_reg_535[3:1]}};

assign tmp_1050_fu_651_p4 = {{i_ih4_fu_641_p2[3:1]}};

assign tmp_1051_fu_713_p2 = sh_idx_mid2_fu_705_p3 << 5'd2;

assign tmp_1052_fu_731_p4 = {{w_idx_assign_mid2_fu_633_p3[3:1]}};

assign tmp_1053_fu_872_p1 = p_Val2_s_fu_803_p34[0:0];

assign tmp_117_fu_627_p2 = ((wp_idx_reg_546 == 4'd10) ? 1'b1 : 1'b0);

assign tmp_12_i_fu_583_p2 = ((r_fu_577_p2 < 4'd3) ? 1'b1 : 1'b0);

assign tmp_12_i_mid1_fu_673_p2 = ((r_mid1_fu_667_p2 < 4'd3) ? 1'b1 : 1'b0);

assign tmp_13_i_fu_589_p2 = (4'd5 - r_fu_577_p2);

assign tmp_13_i_mid1_fu_679_p2 = (4'd5 - r_mid1_fu_667_p2);

assign tmp_16_i_fu_753_p2 = ((r_1_fu_747_p2 < 4'd3) ? 1'b1 : 1'b0);

assign tmp_17_i_fu_759_p2 = (4'd5 - r_1_fu_747_p2);

assign tmp_686_fu_944_p1 = data_window_0_V_V_dout;

assign tmp_686_fu_944_p4 = {{tmp_686_fu_944_p1[7:4]}};

assign tmp_688_fu_1192_p1 = $signed(tmp_687_reg_1608);

assign tmp_689_fu_1014_p4 = {{data_window_1_V_V_dout[7:4]}};

assign tmp_692_fu_1198_p1 = $signed(tmp_691_reg_1623);

assign tmp_693_fu_1221_p4 = {{p_Val2_10_4_fu_1215_p2[10:4]}};

assign tmp_694_fu_1231_p1 = $signed(tmp_693_fu_1221_p4);

assign tmp_695_fu_1241_p4 = {{p_Val2_10_4_1_fu_1235_p2[10:4]}};

assign tmp_696_fu_1251_p1 = $signed(tmp_695_fu_1241_p4);

assign tmp_697_fu_1275_p4 = {{p_Val2_10_5_fu_1269_p2[9:4]}};

assign tmp_698_fu_1285_p1 = $signed(tmp_697_fu_1275_p4);

assign tmp_699_fu_1306_p4 = {{p_Val2_10_5_1_fu_1300_p2[10:4]}};

assign tmp_700_fu_1316_p1 = $signed(tmp_699_fu_1306_p4);

assign tmp_701_fu_1142_p1 = data_window_6_V_V_dout;

assign tmp_702_fu_1370_p4 = {{p_Val2_10_7_1_fu_1364_p2[8:4]}};

assign tmp_703_fu_1152_p4 = {{data_window_8_V_V_dout[7:3]}};

assign tmp_704_fu_1166_p4 = {{data_window_8_V_V_dout[7:4]}};

assign tmp_79_1_1_cast_fu_1024_p1 = $signed(tmp_689_fu_1014_p4);

assign tmp_79_2_1_fu_1195_p1 = $signed(tmp_690_reg_1613);

assign tmp_79_6_1_fu_1320_p1 = $signed(tmp_701_reg_1633);

assign tmp_79_7_fu_1354_p4 = {{p_Val2_10_7_fu_1348_p2[11:4]}};

assign tmp_79_8_1_cast_fu_1176_p1 = $signed(tmp_704_fu_1166_p4);

assign tmp_79_8_cast_fu_1162_p1 = $signed(tmp_703_fu_1152_p4);

assign tmp_79_cast_fu_954_p1 = $signed(tmp_686_fu_944_p4);

assign tmp_98_t_i_fu_791_p2 = (tmp_fu_785_p2 + sh_idx_mid2_fu_705_p3);

assign tmp_fu_785_p2 = (tmp_1051_fu_713_p2 + sel_tmp_fu_777_p3);

assign w_idx_assign_mid2_fu_633_p3 = ((tmp_117_fu_627_p2[0:0] === 1'b1) ? 4'd0 : wp_idx_reg_546);

endmodule //conv_2d_cl_array_array_ap_fixed_2u_config2_s
