// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module relu (
        ap_ready,
        data_0_V_read,
        data_1_V_read,
        data_2_V_read,
        data_3_V_read,
        data_4_V_read,
        data_5_V_read,
        data_6_V_read,
        data_7_V_read,
        data_8_V_read,
        data_9_V_read,
        data_10_V_read,
        data_11_V_read,
        data_12_V_read,
        data_13_V_read,
        data_14_V_read,
        data_15_V_read,
        ap_return_0,
        ap_return_1,
        ap_return_2,
        ap_return_3,
        ap_return_4,
        ap_return_5,
        ap_return_6,
        ap_return_7,
        ap_return_8,
        ap_return_9,
        ap_return_10,
        ap_return_11,
        ap_return_12,
        ap_return_13,
        ap_return_14,
        ap_return_15
);


output   ap_ready;
input  [15:0] data_0_V_read;
input  [15:0] data_1_V_read;
input  [15:0] data_2_V_read;
input  [15:0] data_3_V_read;
input  [15:0] data_4_V_read;
input  [15:0] data_5_V_read;
input  [15:0] data_6_V_read;
input  [15:0] data_7_V_read;
input  [15:0] data_8_V_read;
input  [15:0] data_9_V_read;
input  [15:0] data_10_V_read;
input  [15:0] data_11_V_read;
input  [15:0] data_12_V_read;
input  [15:0] data_13_V_read;
input  [15:0] data_14_V_read;
input  [15:0] data_15_V_read;
output  [15:0] ap_return_0;
output  [15:0] ap_return_1;
output  [15:0] ap_return_2;
output  [15:0] ap_return_3;
output  [15:0] ap_return_4;
output  [15:0] ap_return_5;
output  [15:0] ap_return_6;
output  [15:0] ap_return_7;
output  [15:0] ap_return_8;
output  [15:0] ap_return_9;
output  [15:0] ap_return_10;
output  [15:0] ap_return_11;
output  [15:0] ap_return_12;
output  [15:0] ap_return_13;
output  [15:0] ap_return_14;
output  [15:0] ap_return_15;

wire   [0:0] tmp_36_fu_152_p2;
wire   [14:0] tmp_466_fu_158_p1;
wire   [14:0] res_0_V_write_assig_fu_162_p3;
wire   [0:0] tmp_36_1_fu_174_p2;
wire   [14:0] tmp_467_fu_180_p1;
wire   [14:0] res_1_V_write_assig_fu_184_p3;
wire   [0:0] tmp_36_2_fu_196_p2;
wire   [14:0] tmp_468_fu_202_p1;
wire   [14:0] res_2_V_write_assig_fu_206_p3;
wire   [0:0] tmp_36_3_fu_218_p2;
wire   [14:0] tmp_469_fu_224_p1;
wire   [14:0] res_3_V_write_assig_fu_228_p3;
wire   [0:0] tmp_36_4_fu_240_p2;
wire   [14:0] tmp_470_fu_246_p1;
wire   [14:0] res_4_V_write_assig_fu_250_p3;
wire   [0:0] tmp_36_5_fu_262_p2;
wire   [14:0] tmp_471_fu_268_p1;
wire   [14:0] res_5_V_write_assig_fu_272_p3;
wire   [0:0] tmp_36_6_fu_284_p2;
wire   [14:0] tmp_472_fu_290_p1;
wire   [14:0] res_6_V_write_assig_fu_294_p3;
wire   [0:0] tmp_36_7_fu_306_p2;
wire   [14:0] tmp_473_fu_312_p1;
wire   [14:0] res_7_V_write_assig_fu_316_p3;
wire   [0:0] tmp_36_8_fu_328_p2;
wire   [14:0] tmp_474_fu_334_p1;
wire   [14:0] res_8_V_write_assig_fu_338_p3;
wire   [0:0] tmp_36_9_fu_350_p2;
wire   [14:0] tmp_475_fu_356_p1;
wire   [14:0] res_9_V_write_assig_fu_360_p3;
wire   [0:0] tmp_36_s_fu_372_p2;
wire   [14:0] tmp_476_fu_378_p1;
wire   [14:0] res_10_V_write_assi_fu_382_p3;
wire   [0:0] tmp_36_10_fu_394_p2;
wire   [14:0] tmp_477_fu_400_p1;
wire   [14:0] res_11_V_write_assi_fu_404_p3;
wire   [0:0] tmp_36_11_fu_416_p2;
wire   [14:0] tmp_478_fu_422_p1;
wire   [14:0] res_12_V_write_assi_fu_426_p3;
wire   [0:0] tmp_36_12_fu_438_p2;
wire   [14:0] tmp_479_fu_444_p1;
wire   [14:0] res_13_V_write_assi_fu_448_p3;
wire   [0:0] tmp_36_13_fu_460_p2;
wire   [14:0] tmp_480_fu_466_p1;
wire   [14:0] res_14_V_write_assi_fu_470_p3;
wire   [0:0] tmp_36_14_fu_482_p2;
wire   [14:0] tmp_481_fu_488_p1;
wire   [14:0] res_15_V_write_assi_fu_492_p3;
wire   [15:0] res_0_V_write_assig_1_fu_170_p1;
wire   [15:0] res_1_V_write_assig_1_fu_192_p1;
wire   [15:0] res_2_V_write_assig_1_fu_214_p1;
wire   [15:0] res_3_V_write_assig_1_fu_236_p1;
wire   [15:0] res_4_V_write_assig_1_fu_258_p1;
wire   [15:0] res_5_V_write_assig_1_fu_280_p1;
wire   [15:0] res_6_V_write_assig_1_fu_302_p1;
wire   [15:0] res_7_V_write_assig_1_fu_324_p1;
wire   [15:0] res_8_V_write_assig_1_fu_346_p1;
wire   [15:0] res_9_V_write_assig_1_fu_368_p1;
wire   [15:0] res_10_V_write_assi_1_fu_390_p1;
wire   [15:0] res_11_V_write_assi_1_fu_412_p1;
wire   [15:0] res_12_V_write_assi_1_fu_434_p1;
wire   [15:0] res_13_V_write_assi_1_fu_456_p1;
wire   [15:0] res_14_V_write_assi_1_fu_478_p1;
wire   [15:0] res_15_V_write_assi_1_fu_500_p1;

assign ap_ready = 1'b1;

assign ap_return_0 = res_0_V_write_assig_1_fu_170_p1;

assign ap_return_1 = res_1_V_write_assig_1_fu_192_p1;

assign ap_return_10 = res_10_V_write_assi_1_fu_390_p1;

assign ap_return_11 = res_11_V_write_assi_1_fu_412_p1;

assign ap_return_12 = res_12_V_write_assi_1_fu_434_p1;

assign ap_return_13 = res_13_V_write_assi_1_fu_456_p1;

assign ap_return_14 = res_14_V_write_assi_1_fu_478_p1;

assign ap_return_15 = res_15_V_write_assi_1_fu_500_p1;

assign ap_return_2 = res_2_V_write_assig_1_fu_214_p1;

assign ap_return_3 = res_3_V_write_assig_1_fu_236_p1;

assign ap_return_4 = res_4_V_write_assig_1_fu_258_p1;

assign ap_return_5 = res_5_V_write_assig_1_fu_280_p1;

assign ap_return_6 = res_6_V_write_assig_1_fu_302_p1;

assign ap_return_7 = res_7_V_write_assig_1_fu_324_p1;

assign ap_return_8 = res_8_V_write_assig_1_fu_346_p1;

assign ap_return_9 = res_9_V_write_assig_1_fu_368_p1;

assign res_0_V_write_assig_1_fu_170_p1 = res_0_V_write_assig_fu_162_p3;

assign res_0_V_write_assig_fu_162_p3 = ((tmp_36_fu_152_p2[0:0] === 1'b1) ? tmp_466_fu_158_p1 : 15'd0);

assign res_10_V_write_assi_1_fu_390_p1 = res_10_V_write_assi_fu_382_p3;

assign res_10_V_write_assi_fu_382_p3 = ((tmp_36_s_fu_372_p2[0:0] === 1'b1) ? tmp_476_fu_378_p1 : 15'd0);

assign res_11_V_write_assi_1_fu_412_p1 = res_11_V_write_assi_fu_404_p3;

assign res_11_V_write_assi_fu_404_p3 = ((tmp_36_10_fu_394_p2[0:0] === 1'b1) ? tmp_477_fu_400_p1 : 15'd0);

assign res_12_V_write_assi_1_fu_434_p1 = res_12_V_write_assi_fu_426_p3;

assign res_12_V_write_assi_fu_426_p3 = ((tmp_36_11_fu_416_p2[0:0] === 1'b1) ? tmp_478_fu_422_p1 : 15'd0);

assign res_13_V_write_assi_1_fu_456_p1 = res_13_V_write_assi_fu_448_p3;

assign res_13_V_write_assi_fu_448_p3 = ((tmp_36_12_fu_438_p2[0:0] === 1'b1) ? tmp_479_fu_444_p1 : 15'd0);

assign res_14_V_write_assi_1_fu_478_p1 = res_14_V_write_assi_fu_470_p3;

assign res_14_V_write_assi_fu_470_p3 = ((tmp_36_13_fu_460_p2[0:0] === 1'b1) ? tmp_480_fu_466_p1 : 15'd0);

assign res_15_V_write_assi_1_fu_500_p1 = res_15_V_write_assi_fu_492_p3;

assign res_15_V_write_assi_fu_492_p3 = ((tmp_36_14_fu_482_p2[0:0] === 1'b1) ? tmp_481_fu_488_p1 : 15'd0);

assign res_1_V_write_assig_1_fu_192_p1 = res_1_V_write_assig_fu_184_p3;

assign res_1_V_write_assig_fu_184_p3 = ((tmp_36_1_fu_174_p2[0:0] === 1'b1) ? tmp_467_fu_180_p1 : 15'd0);

assign res_2_V_write_assig_1_fu_214_p1 = res_2_V_write_assig_fu_206_p3;

assign res_2_V_write_assig_fu_206_p3 = ((tmp_36_2_fu_196_p2[0:0] === 1'b1) ? tmp_468_fu_202_p1 : 15'd0);

assign res_3_V_write_assig_1_fu_236_p1 = res_3_V_write_assig_fu_228_p3;

assign res_3_V_write_assig_fu_228_p3 = ((tmp_36_3_fu_218_p2[0:0] === 1'b1) ? tmp_469_fu_224_p1 : 15'd0);

assign res_4_V_write_assig_1_fu_258_p1 = res_4_V_write_assig_fu_250_p3;

assign res_4_V_write_assig_fu_250_p3 = ((tmp_36_4_fu_240_p2[0:0] === 1'b1) ? tmp_470_fu_246_p1 : 15'd0);

assign res_5_V_write_assig_1_fu_280_p1 = res_5_V_write_assig_fu_272_p3;

assign res_5_V_write_assig_fu_272_p3 = ((tmp_36_5_fu_262_p2[0:0] === 1'b1) ? tmp_471_fu_268_p1 : 15'd0);

assign res_6_V_write_assig_1_fu_302_p1 = res_6_V_write_assig_fu_294_p3;

assign res_6_V_write_assig_fu_294_p3 = ((tmp_36_6_fu_284_p2[0:0] === 1'b1) ? tmp_472_fu_290_p1 : 15'd0);

assign res_7_V_write_assig_1_fu_324_p1 = res_7_V_write_assig_fu_316_p3;

assign res_7_V_write_assig_fu_316_p3 = ((tmp_36_7_fu_306_p2[0:0] === 1'b1) ? tmp_473_fu_312_p1 : 15'd0);

assign res_8_V_write_assig_1_fu_346_p1 = res_8_V_write_assig_fu_338_p3;

assign res_8_V_write_assig_fu_338_p3 = ((tmp_36_8_fu_328_p2[0:0] === 1'b1) ? tmp_474_fu_334_p1 : 15'd0);

assign res_9_V_write_assig_1_fu_368_p1 = res_9_V_write_assig_fu_360_p3;

assign res_9_V_write_assig_fu_360_p3 = ((tmp_36_9_fu_350_p2[0:0] === 1'b1) ? tmp_475_fu_356_p1 : 15'd0);

assign tmp_36_10_fu_394_p2 = (($signed(data_11_V_read) > $signed(16'd0)) ? 1'b1 : 1'b0);

assign tmp_36_11_fu_416_p2 = (($signed(data_12_V_read) > $signed(16'd0)) ? 1'b1 : 1'b0);

assign tmp_36_12_fu_438_p2 = (($signed(data_13_V_read) > $signed(16'd0)) ? 1'b1 : 1'b0);

assign tmp_36_13_fu_460_p2 = (($signed(data_14_V_read) > $signed(16'd0)) ? 1'b1 : 1'b0);

assign tmp_36_14_fu_482_p2 = (($signed(data_15_V_read) > $signed(16'd0)) ? 1'b1 : 1'b0);

assign tmp_36_1_fu_174_p2 = (($signed(data_1_V_read) > $signed(16'd0)) ? 1'b1 : 1'b0);

assign tmp_36_2_fu_196_p2 = (($signed(data_2_V_read) > $signed(16'd0)) ? 1'b1 : 1'b0);

assign tmp_36_3_fu_218_p2 = (($signed(data_3_V_read) > $signed(16'd0)) ? 1'b1 : 1'b0);

assign tmp_36_4_fu_240_p2 = (($signed(data_4_V_read) > $signed(16'd0)) ? 1'b1 : 1'b0);

assign tmp_36_5_fu_262_p2 = (($signed(data_5_V_read) > $signed(16'd0)) ? 1'b1 : 1'b0);

assign tmp_36_6_fu_284_p2 = (($signed(data_6_V_read) > $signed(16'd0)) ? 1'b1 : 1'b0);

assign tmp_36_7_fu_306_p2 = (($signed(data_7_V_read) > $signed(16'd0)) ? 1'b1 : 1'b0);

assign tmp_36_8_fu_328_p2 = (($signed(data_8_V_read) > $signed(16'd0)) ? 1'b1 : 1'b0);

assign tmp_36_9_fu_350_p2 = (($signed(data_9_V_read) > $signed(16'd0)) ? 1'b1 : 1'b0);

assign tmp_36_fu_152_p2 = (($signed(data_0_V_read) > $signed(16'd0)) ? 1'b1 : 1'b0);

assign tmp_36_s_fu_372_p2 = (($signed(data_10_V_read) > $signed(16'd0)) ? 1'b1 : 1'b0);

assign tmp_466_fu_158_p1 = data_0_V_read[14:0];

assign tmp_467_fu_180_p1 = data_1_V_read[14:0];

assign tmp_468_fu_202_p1 = data_2_V_read[14:0];

assign tmp_469_fu_224_p1 = data_3_V_read[14:0];

assign tmp_470_fu_246_p1 = data_4_V_read[14:0];

assign tmp_471_fu_268_p1 = data_5_V_read[14:0];

assign tmp_472_fu_290_p1 = data_6_V_read[14:0];

assign tmp_473_fu_312_p1 = data_7_V_read[14:0];

assign tmp_474_fu_334_p1 = data_8_V_read[14:0];

assign tmp_475_fu_356_p1 = data_9_V_read[14:0];

assign tmp_476_fu_378_p1 = data_10_V_read[14:0];

assign tmp_477_fu_400_p1 = data_11_V_read[14:0];

assign tmp_478_fu_422_p1 = data_12_V_read[14:0];

assign tmp_479_fu_444_p1 = data_13_V_read[14:0];

assign tmp_480_fu_466_p1 = data_14_V_read[14:0];

assign tmp_481_fu_488_p1 = data_15_V_read[14:0];

endmodule //relu
