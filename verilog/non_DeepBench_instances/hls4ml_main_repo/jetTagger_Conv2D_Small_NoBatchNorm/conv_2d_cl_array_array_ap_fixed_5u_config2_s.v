// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module conv_2d_cl_array_array_ap_fixed_5u_config2_s (
        ap_clk,
        ap_rst,
        ap_start,
        start_full_n,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        start_out,
        start_write,
        data_V_data_V_dout,
        data_V_data_V_empty_n,
        data_V_data_V_read,
        res_V_data_0_V_din,
        res_V_data_0_V_full_n,
        res_V_data_0_V_write,
        res_V_data_1_V_din,
        res_V_data_1_V_full_n,
        res_V_data_1_V_write,
        res_V_data_2_V_din,
        res_V_data_2_V_full_n,
        res_V_data_2_V_write,
        res_V_data_3_V_din,
        res_V_data_3_V_full_n,
        res_V_data_3_V_write,
        res_V_data_4_V_din,
        res_V_data_4_V_full_n,
        res_V_data_4_V_write
);

parameter    ap_ST_fsm_state1 = 3'd1;
parameter    ap_ST_fsm_pp0_stage0 = 3'd2;
parameter    ap_ST_fsm_state16 = 3'd4;

input   ap_clk;
input   ap_rst;
input   ap_start;
input   start_full_n;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output   start_out;
output   start_write;
input  [7:0] data_V_data_V_dout;
input   data_V_data_V_empty_n;
output   data_V_data_V_read;
output  [7:0] res_V_data_0_V_din;
input   res_V_data_0_V_full_n;
output   res_V_data_0_V_write;
output  [7:0] res_V_data_1_V_din;
input   res_V_data_1_V_full_n;
output   res_V_data_1_V_write;
output  [7:0] res_V_data_2_V_din;
input   res_V_data_2_V_full_n;
output   res_V_data_2_V_write;
output  [7:0] res_V_data_3_V_din;
input   res_V_data_3_V_full_n;
output   res_V_data_3_V_write;
output  [7:0] res_V_data_4_V_din;
input   res_V_data_4_V_full_n;
output   res_V_data_4_V_write;

reg ap_done;
reg ap_idle;
reg start_write;
reg data_V_data_V_read;

reg    real_start;
reg    start_once_reg;
reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [2:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    internal_ap_ready;
reg    data_V_data_V_blk_n;
reg    ap_enable_reg_pp0_iter9;
wire    ap_block_pp0_stage0;
reg   [0:0] exitcond_flatten_reg_5578;
reg   [0:0] exitcond_flatten_reg_5578_pp0_iter8_reg;
reg    res_V_data_0_V_blk_n;
reg    ap_enable_reg_pp0_iter13;
reg   [0:0] tmp_649_reg_5644;
reg   [0:0] tmp_649_reg_5644_pp0_iter12_reg;
reg    res_V_data_1_V_blk_n;
reg    res_V_data_2_V_blk_n;
reg    res_V_data_3_V_blk_n;
reg    res_V_data_4_V_blk_n;
reg   [9:0] indvar_flatten_reg_563;
reg   [4:0] h_idx_assign_reg_574;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state3_pp0_stage0_iter1;
wire    ap_block_state4_pp0_stage0_iter2;
wire    ap_block_state5_pp0_stage0_iter3;
wire    ap_block_state6_pp0_stage0_iter4;
wire    ap_block_state7_pp0_stage0_iter5;
wire    ap_block_state8_pp0_stage0_iter6;
wire    ap_block_state9_pp0_stage0_iter7;
wire    ap_block_state10_pp0_stage0_iter8;
wire    data_window_0_V_V_full_n;
reg    data_window_0_V_V_write;
reg   [0:0] tmp_641_reg_5612;
wire    data_window_1_V_V_full_n;
reg    data_window_1_V_V_write;
reg   [0:0] tmp_642_reg_5616;
wire    data_window_2_V_V_full_n;
reg    data_window_2_V_V_write;
reg   [0:0] tmp_643_reg_5620;
wire    data_window_3_V_V_full_n;
reg    data_window_3_V_V_write;
reg   [0:0] tmp_644_reg_5624;
wire    data_window_4_V_V_full_n;
reg    data_window_4_V_V_write;
reg   [0:0] tmp_645_reg_5628;
wire    data_window_5_V_V_full_n;
reg    data_window_5_V_V_write;
reg   [0:0] tmp_646_reg_5632;
wire    data_window_6_V_V_full_n;
reg    data_window_6_V_V_write;
reg   [0:0] tmp_647_reg_5636;
wire    data_window_7_V_V_full_n;
reg    data_window_7_V_V_write;
reg   [0:0] tmp_648_reg_5640;
wire    data_window_8_V_V_full_n;
reg    data_window_8_V_V_write;
reg    ap_block_state11_pp0_stage0_iter9;
wire   [7:0] data_window_0_V_V_dout;
wire    data_window_0_V_V_empty_n;
reg    data_window_0_V_V_read;
reg   [0:0] tmp_649_reg_5644_pp0_iter9_reg;
wire   [7:0] data_window_1_V_V_dout;
wire    data_window_1_V_V_empty_n;
reg    data_window_1_V_V_read;
wire   [7:0] data_window_2_V_V_dout;
wire    data_window_2_V_V_empty_n;
reg    data_window_2_V_V_read;
wire   [7:0] data_window_3_V_V_dout;
wire    data_window_3_V_V_empty_n;
reg    data_window_3_V_V_read;
wire   [7:0] data_window_4_V_V_dout;
wire    data_window_4_V_V_empty_n;
reg    data_window_4_V_V_read;
wire   [7:0] data_window_5_V_V_dout;
wire    data_window_5_V_V_empty_n;
reg    data_window_5_V_V_read;
wire   [7:0] data_window_6_V_V_dout;
wire    data_window_6_V_V_empty_n;
reg    data_window_6_V_V_read;
wire   [7:0] data_window_7_V_V_dout;
wire    data_window_7_V_V_empty_n;
reg    data_window_7_V_V_read;
wire   [7:0] data_window_8_V_V_dout;
wire    data_window_8_V_V_empty_n;
reg    data_window_8_V_V_read;
reg    ap_block_state12_pp0_stage0_iter10;
reg    ap_enable_reg_pp0_iter10;
wire    ap_block_state13_pp0_stage0_iter11;
wire    ap_block_state14_pp0_stage0_iter12;
wire    res_V_data_0_V1_status;
reg    ap_block_state15_pp0_stage0_iter13;
reg    ap_block_pp0_stage0_11001;
reg   [4:0] wp_idx_reg_586;
wire   [0:0] exitcond_flatten_fu_4202_p2;
reg   [0:0] exitcond_flatten_reg_5578_pp0_iter1_reg;
reg   [0:0] exitcond_flatten_reg_5578_pp0_iter2_reg;
reg   [0:0] exitcond_flatten_reg_5578_pp0_iter3_reg;
reg   [0:0] exitcond_flatten_reg_5578_pp0_iter4_reg;
reg   [0:0] exitcond_flatten_reg_5578_pp0_iter5_reg;
reg   [0:0] exitcond_flatten_reg_5578_pp0_iter6_reg;
reg   [0:0] exitcond_flatten_reg_5578_pp0_iter7_reg;
wire   [9:0] indvar_flatten_next_fu_4208_p2;
reg    ap_enable_reg_pp0_iter0;
wire   [0:0] tmp_106_fu_4214_p2;
reg   [0:0] tmp_106_reg_5587;
reg   [0:0] tmp_106_reg_5587_pp0_iter1_reg;
reg   [0:0] tmp_106_reg_5587_pp0_iter2_reg;
reg   [0:0] tmp_106_reg_5587_pp0_iter3_reg;
reg   [0:0] tmp_106_reg_5587_pp0_iter4_reg;
reg   [0:0] tmp_106_reg_5587_pp0_iter5_reg;
reg   [0:0] tmp_106_reg_5587_pp0_iter6_reg;
reg   [0:0] tmp_106_reg_5587_pp0_iter7_reg;
wire   [4:0] w_idx_assign_mid2_fu_4220_p3;
wire   [4:0] i_ih3_fu_4228_p2;
wire   [4:0] h_idx_assign_mid2_fu_4240_p3;
reg   [4:0] h_idx_assign_mid2_reg_5602;
wire   [4:0] i_iw_fu_4254_p2;
wire   [0:0] tmp_641_fu_4363_p1;
reg   [0:0] tmp_649_reg_5644_pp0_iter10_reg;
reg   [0:0] tmp_649_reg_5644_pp0_iter11_reg;
reg  signed [7:0] tmp_V_10_reg_5648;
reg  signed [7:0] tmp_V_11_reg_5655;
reg  signed [7:0] tmp_V_12_reg_5662;
reg  signed [7:0] tmp_V_13_reg_5669;
reg  signed [7:0] tmp_V_14_reg_5677;
reg  signed [7:0] tmp_V_15_reg_5684;
reg  signed [7:0] tmp_V_16_reg_5691;
reg  signed [7:0] tmp_V_17_reg_5699;
reg  signed [7:0] tmp_V_18_reg_5708;
wire   [6:0] tmp_650_fu_4445_p1;
reg   [6:0] tmp_650_reg_5716;
wire   [6:0] tmp_651_fu_4449_p1;
reg   [6:0] tmp_651_reg_5721;
wire   [6:0] tmp_652_fu_4467_p1;
reg   [6:0] tmp_652_reg_5726;
reg   [6:0] tmp_211_reg_5731;
wire   [6:0] tmp_653_fu_4481_p1;
reg   [6:0] tmp_653_reg_5736;
wire   [6:0] tmp_654_fu_4485_p1;
reg   [6:0] tmp_654_reg_5741;
wire   [5:0] tmp19_fu_4523_p2;
reg   [5:0] tmp19_reg_5746;
reg   [7:0] tmp_142_4_reg_5751;
reg   [7:0] tmp_142_5_reg_5756;
reg   [7:0] tmp_142_5_1_reg_5761;
reg   [7:0] tmp_142_5_4_reg_5766;
reg   [7:0] tmp_142_6_1_reg_5771;
reg   [7:0] tmp_142_6_4_reg_5776;
wire   [7:0] tmp1_fu_5316_p2;
reg   [7:0] tmp1_reg_5781;
wire   [7:0] tmp2_fu_5321_p2;
reg   [7:0] tmp2_reg_5786;
wire   [7:0] tmp5_fu_5333_p2;
reg   [7:0] tmp5_reg_5791;
wire   [7:0] tmp8_fu_5339_p2;
reg   [7:0] tmp8_reg_5796;
wire   [7:0] tmp9_fu_5345_p2;
reg   [7:0] tmp9_reg_5801;
wire   [7:0] tmp12_fu_5357_p2;
reg   [7:0] tmp12_reg_5806;
wire   [7:0] tmp15_fu_5363_p2;
reg   [7:0] tmp15_reg_5811;
wire   [7:0] tmp16_fu_5369_p2;
reg   [7:0] tmp16_reg_5816;
wire   [7:0] tmp17_fu_5384_p2;
reg   [7:0] tmp17_reg_5821;
wire   [7:0] tmp22_fu_5390_p2;
reg   [7:0] tmp22_reg_5826;
wire   [7:0] tmp23_fu_5395_p2;
reg   [7:0] tmp23_reg_5831;
wire   [7:0] tmp24_fu_5419_p2;
reg   [7:0] tmp24_reg_5836;
wire   [7:0] tmp29_fu_5425_p2;
reg   [7:0] tmp29_reg_5841;
wire   [7:0] tmp30_fu_5431_p2;
reg   [7:0] tmp30_reg_5846;
wire   [7:0] tmp33_fu_5443_p2;
reg   [7:0] tmp33_reg_5851;
wire   [7:0] tmp_data_0_V_fu_5462_p2;
reg   [7:0] tmp_data_0_V_reg_5856;
wire   [7:0] acc_1_V_2_fu_5481_p2;
reg   [7:0] acc_1_V_2_reg_5861;
wire   [7:0] acc_2_V_3_fu_5491_p2;
reg   [7:0] acc_2_V_3_reg_5866;
wire   [7:0] acc_3_V_3_fu_5500_p2;
reg   [7:0] acc_3_V_3_reg_5871;
wire   [7:0] acc_4_V_2_fu_5518_p2;
reg   [7:0] acc_4_V_2_reg_5876;
reg    ap_block_state1;
reg    ap_block_pp0_stage0_subdone;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_condition_pp0_exit_iter8_state10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg   [4:0] ap_phi_mux_h_idx_assign_phi_fu_578_p4;
reg    ap_block_pp0_stage0_01001;
reg    res_V_data_0_V1_update;
wire  signed [7:0] p_Val2_18_8_fu_597_p1;
wire  signed [11:0] OP1_V_8_cast8_fu_5230_p1;
wire  signed [7:0] p_Val2_18_5_3_fu_602_p1;
wire  signed [11:0] OP1_V_5_cast_fu_4915_p1;
wire  signed [7:0] p_Val2_18_5_4_fu_604_p1;
wire  signed [7:0] p_Val2_18_6_1_fu_605_p1;
wire  signed [11:0] OP1_V_6_cast6_fu_4996_p1;
wire  signed [7:0] p_Val2_18_1_4_fu_606_p1;
wire  signed [11:0] OP1_V_1_cast_fu_4604_p1;
wire  signed [7:0] p_Val2_18_1_1_fu_610_p1;
wire  signed [7:0] p_Val2_18_7_4_fu_611_p1;
wire  signed [11:0] OP1_V_7_cast_fu_5110_p1;
wire  signed [7:0] p_Val2_18_5_1_fu_612_p1;
wire  signed [7:0] p_Val2_18_1_fu_620_p1;
wire  signed [7:0] p_Val2_18_2_4_fu_622_p1;
wire  signed [11:0] OP1_V_2_cast_fu_4697_p1;
wire  signed [7:0] p_Val2_18_fu_623_p1;
wire  signed [11:0] OP1_V_0_cast_fu_4529_p1;
wire  signed [7:0] p_Val2_18_5_fu_624_p1;
wire  signed [7:0] p_Val2_18_0_3_fu_625_p1;
wire  signed [7:0] p_Val2_18_4_fu_628_p1;
wire  signed [11:0] OP1_V_4_cast_fu_4836_p1;
wire  signed [7:0] p_Val2_18_8_1_fu_629_p1;
wire  signed [7:0] p_Val2_18_2_1_fu_630_p1;
wire  signed [7:0] p_Val2_18_4_2_fu_633_p1;
wire  signed [7:0] p_Val2_18_7_1_fu_637_p1;
wire  signed [7:0] p_Val2_18_3_3_fu_639_p1;
wire   [2:0] grp_fu_4196_p1;
wire   [2:0] grp_fu_4234_p1;
wire   [2:0] grp_fu_4248_p1;
wire   [3:0] grp_fu_4196_p2;
wire   [1:0] tmp_637_fu_4264_p1;
wire   [3:0] p_shl_i_fu_4268_p3;
wire   [3:0] tmp_636_fu_4260_p1;
wire   [3:0] grp_fu_4234_p2;
wire   [1:0] tmp_639_fu_4286_p1;
wire   [3:0] p_shl_i_mid1_fu_4290_p3;
wire   [3:0] tmp_638_fu_4282_p1;
wire   [3:0] phitmp_mid1_fu_4298_p2;
wire   [3:0] phitmp_fu_4276_p2;
wire   [1:0] grp_fu_4248_p2;
wire   [1:0] tmp_640_fu_4311_p1;
wire   [3:0] p_0_i_i_cast_fu_4315_p1;
wire   [3:0] phitmp_mid2_fu_4304_p3;
wire   [3:0] p_Val2_s_fu_4325_p17;
wire   [8:0] p_Val2_s_fu_4325_p18;
wire  signed [7:0] tmp_207_fu_4431_p1;
wire   [3:0] tmp_207_fu_4431_p4;
wire  signed [7:0] tmp_650_fu_4445_p0;
wire  signed [7:0] tmp_651_fu_4449_p0;
wire  signed [7:0] tmp_210_fu_4453_p1;
wire   [3:0] tmp_210_fu_4453_p4;
wire  signed [7:0] tmp_652_fu_4467_p0;
wire  signed [7:0] tmp_211_fu_4471_p1;
wire  signed [7:0] tmp_653_fu_4481_p0;
wire  signed [7:0] tmp_654_fu_4485_p0;
wire  signed [7:0] tmp_218_fu_4489_p1;
wire   [3:0] tmp_218_fu_4489_p4;
wire  signed [4:0] tmp_142_0_2_cast_fu_4441_p1;
wire   [4:0] acc_2_V_fu_4503_p2;
wire  signed [4:0] tmp_142_2_2_cast_fu_4463_p1;
wire  signed [4:0] tmp_142_8_2_cast_fu_4499_p1;
wire   [4:0] tmp20_fu_4513_p2;
wire  signed [5:0] tmp20_cast_fu_4519_p1;
wire  signed [5:0] acc_2_V_cast_cast_fu_4509_p1;
wire   [11:0] p_Val2_18_fu_623_p2;
wire   [11:0] p_shl43_fu_4544_p3;
wire   [11:0] p_Val2_18_0_1_fu_4551_p2;
wire   [11:0] p_Val2_18_0_3_fu_625_p2;
wire   [9:0] p_shl42_fu_4577_p3;
wire  signed [11:0] p_shl42_cast_fu_4584_p1;
wire   [11:0] p_Val2_18_0_4_fu_4588_p2;
wire   [11:0] p_Val2_18_1_fu_620_p2;
wire   [11:0] p_Val2_18_1_1_fu_610_p2;
wire   [9:0] p_shl40_fu_4633_p3;
wire  signed [10:0] p_shl40_cast_fu_4640_p1;
wire  signed [10:0] OP1_V_1_cast8_fu_4610_p1;
wire   [10:0] p_Val2_18_1_2_fu_4644_p2;
wire   [6:0] tmp_208_fu_4650_p4;
wire   [11:0] p_shl39_fu_4664_p3;
wire   [11:0] p_Val2_18_1_3_fu_4671_p2;
wire   [11:0] p_Val2_18_1_4_fu_606_p2;
wire   [10:0] p_shl38_fu_4709_p3;
wire   [11:0] p_shl37_fu_4702_p3;
wire  signed [11:0] p_shl38_cast_fu_4716_p1;
wire   [11:0] p_Val2_18_2_fu_4720_p2;
wire   [11:0] p_Val2_18_2_1_fu_630_p2;
wire   [11:0] p_Val2_18_2_4_fu_622_p2;
wire   [11:0] p_shl35_fu_4760_p3;
wire   [9:0] p_shl36_fu_4773_p3;
wire   [11:0] p_neg_fu_4767_p2;
wire  signed [11:0] p_shl36_cast_fu_4780_p1;
wire   [11:0] p_Val2_18_3_1_fu_4784_p2;
wire   [11:0] p_Val2_18_3_3_fu_639_p2;
wire   [11:0] p_shl33_fu_4813_p3;
wire   [11:0] p_Val2_18_3_4_fu_4820_p2;
wire   [11:0] p_Val2_18_4_fu_628_p2;
wire   [9:0] p_shl32_fu_4854_p3;
wire  signed [10:0] p_shl32_cast_fu_4861_p1;
wire   [10:0] p_Val2_18_4_1_fu_4865_p2;
wire   [6:0] tmp_212_fu_4871_p4;
wire   [11:0] p_Val2_18_4_2_fu_633_p2;
wire  signed [8:0] OP1_V_4_cast8_fu_4841_p1;
wire   [8:0] p_Val2_18_4_3_fu_4895_p2;
wire   [4:0] tmp_214_fu_4901_p4;
wire   [11:0] p_Val2_18_5_fu_624_p2;
wire   [11:0] p_Val2_18_5_1_fu_612_p2;
wire   [9:0] p_shl31_fu_4945_p3;
wire  signed [10:0] p_shl31_cast_fu_4952_p1;
wire  signed [10:0] OP1_V_5_cast6_fu_4922_p1;
wire   [10:0] p_Val2_18_5_2_fu_4956_p2;
wire   [6:0] tmp_216_fu_4962_p4;
wire   [11:0] p_Val2_18_5_3_fu_602_p2;
wire   [11:0] p_Val2_18_5_4_fu_604_p2;
wire   [10:0] p_shl30_fu_5000_p3;
wire  signed [11:0] p_shl30_cast_fu_5007_p1;
wire   [11:0] p_Val2_18_6_fu_5011_p2;
wire   [11:0] p_Val2_18_6_1_fu_605_p2;
wire   [8:0] p_shl29_fu_5037_p3;
wire  signed [11:0] p_shl29_cast_fu_5044_p1;
wire   [11:0] p_Val2_18_6_2_fu_5048_p2;
wire   [11:0] p_shl27_fu_5064_p3;
wire   [11:0] p_Val2_18_6_3_fu_5071_p2;
wire   [11:0] p_shl25_fu_5087_p3;
wire   [11:0] p_Val2_18_6_4_fu_5094_p2;
wire   [9:0] p_shl24_fu_5122_p3;
wire   [11:0] p_shl23_fu_5115_p3;
wire  signed [11:0] p_shl24_cast_fu_5129_p1;
wire   [11:0] p_Val2_18_7_fu_5133_p2;
wire   [11:0] p_Val2_18_7_1_fu_637_p2;
wire   [10:0] p_shl22_fu_5159_p3;
wire  signed [11:0] p_shl22_cast_fu_5166_p1;
wire   [11:0] p_Val2_18_7_2_fu_5170_p2;
wire   [8:0] p_shl21_fu_5193_p3;
wire   [11:0] p_shl20_fu_5186_p3;
wire  signed [11:0] p_shl21_cast_fu_5200_p1;
wire   [11:0] p_Val2_18_7_3_fu_5204_p2;
wire   [11:0] p_Val2_18_7_4_fu_611_p2;
wire   [11:0] p_Val2_18_8_fu_597_p2;
wire   [11:0] p_Val2_18_8_1_fu_629_p2;
wire   [10:0] p_shl19_fu_5255_p3;
wire  signed [11:0] p_shl19_cast_fu_5262_p1;
wire   [11:0] p_Val2_18_8_3_fu_5266_p2;
wire   [9:0] p_shl18_fu_5289_p3;
wire   [11:0] p_shl_fu_5282_p3;
wire  signed [11:0] p_shl18_cast_fu_5296_p1;
wire   [11:0] p_Val2_18_8_4_fu_5300_p2;
wire   [7:0] tmp_142_1_fu_4613_p4;
wire   [7:0] tmp_142_fu_4534_p4;
wire   [7:0] tmp_142_2_fu_4726_p4;
wire   [7:0] tmp_142_7_fu_5139_p4;
wire   [7:0] tmp_142_8_fu_5235_p4;
wire   [7:0] tmp6_fu_5327_p2;
wire   [7:0] tmp_142_6_fu_5017_p4;
wire   [7:0] tmp_142_1_1_fu_4623_p4;
wire   [7:0] acc_1_V_fu_4557_p4;
wire   [7:0] tmp_142_2_1_fu_4736_p4;
wire   [7:0] tmp_142_3_1_fu_4790_p4;
wire   [7:0] tmp_142_8_1_fu_5245_p4;
wire  signed [7:0] tmp_213_fu_4881_p1;
wire   [7:0] tmp13_fu_5351_p2;
wire   [7:0] tmp_142_7_1_fu_5149_p4;
wire   [7:0] tmp_142_4_2_fu_4885_p4;
wire   [7:0] tmp_142_6_2_fu_5054_p4;
wire   [7:0] tmp_142_7_2_fu_5176_p4;
wire  signed [7:0] tmp_209_fu_4660_p1;
wire  signed [7:0] tmp_142_3_2_fu_4800_p1;
wire  signed [7:0] tmp_217_fu_4972_p1;
wire  signed [7:0] tmp19_cast_fu_5381_p1;
wire   [7:0] tmp18_fu_5375_p2;
wire   [7:0] tmp_142_1_3_fu_4677_p4;
wire   [7:0] acc_3_V_fu_4567_p4;
wire   [7:0] tmp_142_3_3_fu_4803_p4;
wire   [7:0] tmp_142_5_3_fu_4976_p4;
wire   [7:0] tmp_142_6_3_fu_5077_p4;
wire   [7:0] tmp_142_8_3_fu_5272_p4;
wire  signed [7:0] tmp_215_fu_4911_p1;
wire   [7:0] tmp27_fu_5407_p2;
wire   [7:0] tmp_142_7_3_fu_5210_p4;
wire   [7:0] tmp26_fu_5413_p2;
wire   [7:0] tmp25_fu_5401_p2;
wire   [7:0] tmp_142_1_4_fu_4687_p4;
wire   [7:0] acc_4_V_fu_4594_p4;
wire   [7:0] tmp_142_2_4_fu_4746_p4;
wire   [7:0] tmp_142_3_4_fu_4826_p4;
wire   [7:0] tmp_142_8_4_fu_5306_p4;
wire   [7:0] tmp34_fu_5437_p2;
wire   [7:0] tmp_142_7_4_fu_5220_p4;
wire   [7:0] tmp4_fu_5453_p2;
wire   [7:0] tmp3_fu_5457_p2;
wire   [7:0] tmp_fu_5449_p2;
wire   [7:0] tmp11_fu_5472_p2;
wire   [7:0] tmp10_fu_5476_p2;
wire   [7:0] tmp7_fu_5468_p2;
wire   [7:0] tmp14_fu_5487_p2;
wire   [7:0] tmp21_fu_5496_p2;
wire   [7:0] tmp32_fu_5509_p2;
wire   [7:0] tmp31_fu_5513_p2;
wire   [7:0] tmp28_fu_5505_p2;
reg    grp_fu_4196_ce;
reg    grp_fu_4234_ce;
reg    grp_fu_4248_ce;
wire    ap_CS_fsm_state16;
reg   [2:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;

// power-on initialization
initial begin
#0 start_once_reg = 1'b0;
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 3'd1;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
end

myproject_urem_5ns_3ns_4_9_1 #(
    .ID( 1 ),
    .NUM_STAGE( 9 ),
    .din0_WIDTH( 5 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 4 ))
myproject_urem_5ns_3ns_4_9_1_U5(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(ap_phi_mux_h_idx_assign_phi_fu_578_p4),
    .din1(grp_fu_4196_p1),
    .ce(grp_fu_4196_ce),
    .dout(grp_fu_4196_p2)
);

myproject_urem_5ns_3ns_4_9_1 #(
    .ID( 1 ),
    .NUM_STAGE( 9 ),
    .din0_WIDTH( 5 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 4 ))
myproject_urem_5ns_3ns_4_9_1_U6(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(i_ih3_fu_4228_p2),
    .din1(grp_fu_4234_p1),
    .ce(grp_fu_4234_ce),
    .dout(grp_fu_4234_p2)
);

myproject_urem_5ns_3ns_2_9_1 #(
    .ID( 1 ),
    .NUM_STAGE( 9 ),
    .din0_WIDTH( 5 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 2 ))
myproject_urem_5ns_3ns_2_9_1_U7(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(w_idx_assign_mid2_fu_4220_p3),
    .din1(grp_fu_4248_p1),
    .ce(grp_fu_4248_ce),
    .dout(grp_fu_4248_p2)
);

myproject_mux_164_9_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 9 ),
    .din2_WIDTH( 9 ),
    .din3_WIDTH( 9 ),
    .din4_WIDTH( 9 ),
    .din5_WIDTH( 9 ),
    .din6_WIDTH( 9 ),
    .din7_WIDTH( 9 ),
    .din8_WIDTH( 9 ),
    .din9_WIDTH( 9 ),
    .din10_WIDTH( 9 ),
    .din11_WIDTH( 9 ),
    .din12_WIDTH( 9 ),
    .din13_WIDTH( 9 ),
    .din14_WIDTH( 9 ),
    .din15_WIDTH( 9 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 9 ))
myproject_mux_164_9_1_1_U8(
    .din0(9'd1),
    .din1(9'd2),
    .din2(9'd4),
    .din3(9'd8),
    .din4(9'd16),
    .din5(9'd32),
    .din6(9'd64),
    .din7(9'd128),
    .din8(9'd256),
    .din9(9'd256),
    .din10(9'd256),
    .din11(9'd256),
    .din12(9'd256),
    .din13(9'd256),
    .din14(9'd256),
    .din15(9'd256),
    .din16(p_Val2_s_fu_4325_p17),
    .dout(p_Val2_s_fu_4325_p18)
);

fifo_w8_d27_A data_window_0_V_V_fifo_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(data_V_data_V_dout),
    .if_full_n(data_window_0_V_V_full_n),
    .if_write(data_window_0_V_V_write),
    .if_dout(data_window_0_V_V_dout),
    .if_empty_n(data_window_0_V_V_empty_n),
    .if_read(data_window_0_V_V_read)
);

fifo_w8_d27_A data_window_1_V_V_fifo_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(data_V_data_V_dout),
    .if_full_n(data_window_1_V_V_full_n),
    .if_write(data_window_1_V_V_write),
    .if_dout(data_window_1_V_V_dout),
    .if_empty_n(data_window_1_V_V_empty_n),
    .if_read(data_window_1_V_V_read)
);

fifo_w8_d27_A data_window_2_V_V_fifo_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(data_V_data_V_dout),
    .if_full_n(data_window_2_V_V_full_n),
    .if_write(data_window_2_V_V_write),
    .if_dout(data_window_2_V_V_dout),
    .if_empty_n(data_window_2_V_V_empty_n),
    .if_read(data_window_2_V_V_read)
);

fifo_w8_d27_A data_window_3_V_V_fifo_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(data_V_data_V_dout),
    .if_full_n(data_window_3_V_V_full_n),
    .if_write(data_window_3_V_V_write),
    .if_dout(data_window_3_V_V_dout),
    .if_empty_n(data_window_3_V_V_empty_n),
    .if_read(data_window_3_V_V_read)
);

fifo_w8_d27_A data_window_4_V_V_fifo_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(data_V_data_V_dout),
    .if_full_n(data_window_4_V_V_full_n),
    .if_write(data_window_4_V_V_write),
    .if_dout(data_window_4_V_V_dout),
    .if_empty_n(data_window_4_V_V_empty_n),
    .if_read(data_window_4_V_V_read)
);

fifo_w8_d27_A data_window_5_V_V_fifo_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(data_V_data_V_dout),
    .if_full_n(data_window_5_V_V_full_n),
    .if_write(data_window_5_V_V_write),
    .if_dout(data_window_5_V_V_dout),
    .if_empty_n(data_window_5_V_V_empty_n),
    .if_read(data_window_5_V_V_read)
);

fifo_w8_d27_A data_window_6_V_V_fifo_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(data_V_data_V_dout),
    .if_full_n(data_window_6_V_V_full_n),
    .if_write(data_window_6_V_V_write),
    .if_dout(data_window_6_V_V_dout),
    .if_empty_n(data_window_6_V_V_empty_n),
    .if_read(data_window_6_V_V_read)
);

fifo_w8_d27_A data_window_7_V_V_fifo_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(data_V_data_V_dout),
    .if_full_n(data_window_7_V_V_full_n),
    .if_write(data_window_7_V_V_write),
    .if_dout(data_window_7_V_V_dout),
    .if_empty_n(data_window_7_V_V_empty_n),
    .if_read(data_window_7_V_V_read)
);

fifo_w8_d27_A data_window_8_V_V_fifo_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(data_V_data_V_dout),
    .if_full_n(data_window_8_V_V_full_n),
    .if_write(data_window_8_V_V_write),
    .if_dout(data_window_8_V_V_dout),
    .if_empty_n(data_window_8_V_V_empty_n),
    .if_read(data_window_8_V_V_read)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state16)) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((exitcond_flatten_fu_4202_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter13 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter8_state10)) begin
                ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter7;
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if (((internal_ap_ready == 1'b0) & (real_start == 1'b1))) begin
            start_once_reg <= 1'b1;
        end else if ((internal_ap_ready == 1'b1)) begin
            start_once_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_5578 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        h_idx_assign_reg_574 <= h_idx_assign_mid2_reg_5602;
    end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        h_idx_assign_reg_574 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_fu_4202_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        indvar_flatten_reg_563 <= indvar_flatten_next_fu_4208_p2;
    end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        indvar_flatten_reg_563 <= 10'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_fu_4202_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        wp_idx_reg_586 <= i_iw_fu_4254_p2;
    end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        wp_idx_reg_586 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_649_reg_5644_pp0_iter11_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        acc_1_V_2_reg_5861 <= acc_1_V_2_fu_5481_p2;
        acc_2_V_3_reg_5866 <= acc_2_V_3_fu_5491_p2;
        acc_3_V_3_reg_5871 <= acc_3_V_3_fu_5500_p2;
        acc_4_V_2_reg_5876 <= acc_4_V_2_fu_5518_p2;
        tmp_data_0_V_reg_5856 <= tmp_data_0_V_fu_5462_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        exitcond_flatten_reg_5578 <= exitcond_flatten_fu_4202_p2;
        exitcond_flatten_reg_5578_pp0_iter1_reg <= exitcond_flatten_reg_5578;
        tmp_106_reg_5587_pp0_iter1_reg <= tmp_106_reg_5587;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        exitcond_flatten_reg_5578_pp0_iter2_reg <= exitcond_flatten_reg_5578_pp0_iter1_reg;
        exitcond_flatten_reg_5578_pp0_iter3_reg <= exitcond_flatten_reg_5578_pp0_iter2_reg;
        exitcond_flatten_reg_5578_pp0_iter4_reg <= exitcond_flatten_reg_5578_pp0_iter3_reg;
        exitcond_flatten_reg_5578_pp0_iter5_reg <= exitcond_flatten_reg_5578_pp0_iter4_reg;
        exitcond_flatten_reg_5578_pp0_iter6_reg <= exitcond_flatten_reg_5578_pp0_iter5_reg;
        exitcond_flatten_reg_5578_pp0_iter7_reg <= exitcond_flatten_reg_5578_pp0_iter6_reg;
        exitcond_flatten_reg_5578_pp0_iter8_reg <= exitcond_flatten_reg_5578_pp0_iter7_reg;
        tmp_106_reg_5587_pp0_iter2_reg <= tmp_106_reg_5587_pp0_iter1_reg;
        tmp_106_reg_5587_pp0_iter3_reg <= tmp_106_reg_5587_pp0_iter2_reg;
        tmp_106_reg_5587_pp0_iter4_reg <= tmp_106_reg_5587_pp0_iter3_reg;
        tmp_106_reg_5587_pp0_iter5_reg <= tmp_106_reg_5587_pp0_iter4_reg;
        tmp_106_reg_5587_pp0_iter6_reg <= tmp_106_reg_5587_pp0_iter5_reg;
        tmp_106_reg_5587_pp0_iter7_reg <= tmp_106_reg_5587_pp0_iter6_reg;
        tmp_649_reg_5644_pp0_iter10_reg <= tmp_649_reg_5644_pp0_iter9_reg;
        tmp_649_reg_5644_pp0_iter11_reg <= tmp_649_reg_5644_pp0_iter10_reg;
        tmp_649_reg_5644_pp0_iter12_reg <= tmp_649_reg_5644_pp0_iter11_reg;
        tmp_649_reg_5644_pp0_iter9_reg <= tmp_649_reg_5644;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_fu_4202_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        h_idx_assign_mid2_reg_5602 <= h_idx_assign_mid2_fu_4240_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_649_reg_5644_pp0_iter10_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp12_reg_5806 <= tmp12_fu_5357_p2;
        tmp15_reg_5811 <= tmp15_fu_5363_p2;
        tmp16_reg_5816 <= tmp16_fu_5369_p2;
        tmp17_reg_5821 <= tmp17_fu_5384_p2;
        tmp1_reg_5781 <= tmp1_fu_5316_p2;
        tmp22_reg_5826 <= tmp22_fu_5390_p2;
        tmp23_reg_5831 <= tmp23_fu_5395_p2;
        tmp24_reg_5836 <= tmp24_fu_5419_p2;
        tmp29_reg_5841 <= tmp29_fu_5425_p2;
        tmp2_reg_5786 <= tmp2_fu_5321_p2;
        tmp30_reg_5846 <= tmp30_fu_5431_p2;
        tmp33_reg_5851 <= tmp33_fu_5443_p2;
        tmp5_reg_5791 <= tmp5_fu_5333_p2;
        tmp8_reg_5796 <= tmp8_fu_5339_p2;
        tmp9_reg_5801 <= tmp9_fu_5345_p2;
        tmp_142_4_reg_5751 <= {{p_Val2_18_4_fu_628_p2[11:4]}};
        tmp_142_5_1_reg_5761 <= {{p_Val2_18_5_1_fu_612_p2[11:4]}};
        tmp_142_5_4_reg_5766 <= {{p_Val2_18_5_4_fu_604_p2[11:4]}};
        tmp_142_5_reg_5756 <= {{p_Val2_18_5_fu_624_p2[11:4]}};
        tmp_142_6_1_reg_5771 <= {{p_Val2_18_6_1_fu_605_p2[11:4]}};
        tmp_142_6_4_reg_5776 <= {{p_Val2_18_6_4_fu_5094_p2[11:4]}};
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_649_reg_5644_pp0_iter9_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp19_reg_5746 <= tmp19_fu_4523_p2;
        tmp_211_reg_5731 <= {{tmp_211_fu_4471_p1[7:1]}};
        tmp_650_reg_5716 <= tmp_650_fu_4445_p1;
        tmp_651_reg_5721 <= tmp_651_fu_4449_p1;
        tmp_652_reg_5726 <= tmp_652_fu_4467_p1;
        tmp_653_reg_5736 <= tmp_653_fu_4481_p1;
        tmp_654_reg_5741 <= tmp_654_fu_4485_p1;
        tmp_V_10_reg_5648 <= data_window_0_V_V_dout;
        tmp_V_11_reg_5655 <= data_window_1_V_V_dout;
        tmp_V_12_reg_5662 <= data_window_2_V_V_dout;
        tmp_V_13_reg_5669 <= data_window_3_V_V_dout;
        tmp_V_14_reg_5677 <= data_window_4_V_V_dout;
        tmp_V_15_reg_5684 <= data_window_5_V_V_dout;
        tmp_V_16_reg_5691 <= data_window_6_V_V_dout;
        tmp_V_17_reg_5699 <= data_window_7_V_V_dout;
        tmp_V_18_reg_5708 <= data_window_8_V_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_fu_4202_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_106_reg_5587 <= tmp_106_fu_4214_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_5578_pp0_iter7_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_641_reg_5612 <= tmp_641_fu_4363_p1;
        tmp_642_reg_5616 <= p_Val2_s_fu_4325_p18[32'd1];
        tmp_643_reg_5620 <= p_Val2_s_fu_4325_p18[32'd2];
        tmp_644_reg_5624 <= p_Val2_s_fu_4325_p18[32'd3];
        tmp_645_reg_5628 <= p_Val2_s_fu_4325_p18[32'd4];
        tmp_646_reg_5632 <= p_Val2_s_fu_4325_p18[32'd5];
        tmp_647_reg_5636 <= p_Val2_s_fu_4325_p18[32'd6];
        tmp_648_reg_5640 <= p_Val2_s_fu_4325_p18[32'd7];
        tmp_649_reg_5644 <= p_Val2_s_fu_4325_p18[32'd8];
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter8 == 1'b1) & (ap_enable_reg_pp0_iter7 == 1'b0))) begin
        ap_condition_pp0_exit_iter8_state10 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter8_state10 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((real_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_flatten_reg_5578 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        ap_phi_mux_h_idx_assign_phi_fu_578_p4 = h_idx_assign_mid2_reg_5602;
    end else begin
        ap_phi_mux_h_idx_assign_phi_fu_578_p4 = h_idx_assign_reg_574;
    end
end

always @ (*) begin
    if (((exitcond_flatten_reg_5578_pp0_iter8_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter9 == 1'b1))) begin
        data_V_data_V_blk_n = data_V_data_V_empty_n;
    end else begin
        data_V_data_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((exitcond_flatten_reg_5578_pp0_iter8_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter9 == 1'b1))) begin
        data_V_data_V_read = 1'b1;
    end else begin
        data_V_data_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_649_reg_5644_pp0_iter9_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter10 == 1'b1))) begin
        data_window_0_V_V_read = 1'b1;
    end else begin
        data_window_0_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_641_reg_5612 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter9 == 1'b1))) begin
        data_window_0_V_V_write = 1'b1;
    end else begin
        data_window_0_V_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_649_reg_5644_pp0_iter9_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter10 == 1'b1))) begin
        data_window_1_V_V_read = 1'b1;
    end else begin
        data_window_1_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_642_reg_5616 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter9 == 1'b1))) begin
        data_window_1_V_V_write = 1'b1;
    end else begin
        data_window_1_V_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_649_reg_5644_pp0_iter9_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter10 == 1'b1))) begin
        data_window_2_V_V_read = 1'b1;
    end else begin
        data_window_2_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_643_reg_5620 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter9 == 1'b1))) begin
        data_window_2_V_V_write = 1'b1;
    end else begin
        data_window_2_V_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_649_reg_5644_pp0_iter9_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter10 == 1'b1))) begin
        data_window_3_V_V_read = 1'b1;
    end else begin
        data_window_3_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_644_reg_5624 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter9 == 1'b1))) begin
        data_window_3_V_V_write = 1'b1;
    end else begin
        data_window_3_V_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_649_reg_5644_pp0_iter9_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter10 == 1'b1))) begin
        data_window_4_V_V_read = 1'b1;
    end else begin
        data_window_4_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_645_reg_5628 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter9 == 1'b1))) begin
        data_window_4_V_V_write = 1'b1;
    end else begin
        data_window_4_V_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_649_reg_5644_pp0_iter9_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter10 == 1'b1))) begin
        data_window_5_V_V_read = 1'b1;
    end else begin
        data_window_5_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_646_reg_5632 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter9 == 1'b1))) begin
        data_window_5_V_V_write = 1'b1;
    end else begin
        data_window_5_V_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_649_reg_5644_pp0_iter9_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter10 == 1'b1))) begin
        data_window_6_V_V_read = 1'b1;
    end else begin
        data_window_6_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_647_reg_5636 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter9 == 1'b1))) begin
        data_window_6_V_V_write = 1'b1;
    end else begin
        data_window_6_V_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_649_reg_5644_pp0_iter9_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter10 == 1'b1))) begin
        data_window_7_V_V_read = 1'b1;
    end else begin
        data_window_7_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_648_reg_5640 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter9 == 1'b1))) begin
        data_window_7_V_V_write = 1'b1;
    end else begin
        data_window_7_V_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_649_reg_5644_pp0_iter9_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter10 == 1'b1))) begin
        data_window_8_V_V_read = 1'b1;
    end else begin
        data_window_8_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_649_reg_5644 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter9 == 1'b1))) begin
        data_window_8_V_V_write = 1'b1;
    end else begin
        data_window_8_V_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_4196_ce = 1'b1;
    end else begin
        grp_fu_4196_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_4234_ce = 1'b1;
    end else begin
        grp_fu_4234_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_4248_ce = 1'b1;
    end else begin
        grp_fu_4248_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        internal_ap_ready = 1'b1;
    end else begin
        internal_ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (start_full_n == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if (((tmp_649_reg_5644_pp0_iter12_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter13 == 1'b1))) begin
        res_V_data_0_V1_update = 1'b1;
    end else begin
        res_V_data_0_V1_update = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_649_reg_5644_pp0_iter12_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter13 == 1'b1))) begin
        res_V_data_0_V_blk_n = res_V_data_0_V_full_n;
    end else begin
        res_V_data_0_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((tmp_649_reg_5644_pp0_iter12_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter13 == 1'b1))) begin
        res_V_data_1_V_blk_n = res_V_data_1_V_full_n;
    end else begin
        res_V_data_1_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((tmp_649_reg_5644_pp0_iter12_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter13 == 1'b1))) begin
        res_V_data_2_V_blk_n = res_V_data_2_V_full_n;
    end else begin
        res_V_data_2_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((tmp_649_reg_5644_pp0_iter12_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter13 == 1'b1))) begin
        res_V_data_3_V_blk_n = res_V_data_3_V_full_n;
    end else begin
        res_V_data_3_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((tmp_649_reg_5644_pp0_iter12_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter13 == 1'b1))) begin
        res_V_data_4_V_blk_n = res_V_data_4_V_full_n;
    end else begin
        res_V_data_4_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (real_start == 1'b1))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter8 == 1'b1)) & ~((ap_enable_reg_pp0_iter12 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter13 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((ap_enable_reg_pp0_iter12 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter13 == 1'b1)) | ((ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter8 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign OP1_V_0_cast_fu_4529_p1 = tmp_V_10_reg_5648;

assign OP1_V_1_cast8_fu_4610_p1 = tmp_V_11_reg_5655;

assign OP1_V_1_cast_fu_4604_p1 = tmp_V_11_reg_5655;

assign OP1_V_2_cast_fu_4697_p1 = tmp_V_12_reg_5662;

assign OP1_V_4_cast8_fu_4841_p1 = tmp_V_14_reg_5677;

assign OP1_V_4_cast_fu_4836_p1 = tmp_V_14_reg_5677;

assign OP1_V_5_cast6_fu_4922_p1 = tmp_V_15_reg_5684;

assign OP1_V_5_cast_fu_4915_p1 = tmp_V_15_reg_5684;

assign OP1_V_6_cast6_fu_4996_p1 = tmp_V_16_reg_5691;

assign OP1_V_7_cast_fu_5110_p1 = tmp_V_17_reg_5699;

assign OP1_V_8_cast8_fu_5230_p1 = tmp_V_18_reg_5708;

assign acc_1_V_2_fu_5481_p2 = (tmp10_fu_5476_p2 + tmp7_fu_5468_p2);

assign acc_1_V_fu_4557_p4 = {{p_Val2_18_0_1_fu_4551_p2[11:4]}};

assign acc_2_V_3_fu_5491_p2 = (tmp17_reg_5821 + tmp14_fu_5487_p2);

assign acc_2_V_cast_cast_fu_4509_p1 = $signed(acc_2_V_fu_4503_p2);

assign acc_2_V_fu_4503_p2 = ($signed(5'd31) + $signed(tmp_142_0_2_cast_fu_4441_p1));

assign acc_3_V_3_fu_5500_p2 = (tmp24_reg_5836 + tmp21_fu_5496_p2);

assign acc_3_V_fu_4567_p4 = {{p_Val2_18_0_3_fu_625_p2[11:4]}};

assign acc_4_V_2_fu_5518_p2 = (tmp31_fu_5513_p2 + tmp28_fu_5505_p2);

assign acc_4_V_fu_4594_p4 = {{p_Val2_18_0_4_fu_4588_p2[11:4]}};

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd2];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((tmp_649_reg_5644_pp0_iter12_reg == 1'd1) & (res_V_data_0_V1_status == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b1)) | ((ap_enable_reg_pp0_iter9 == 1'b1) & (((exitcond_flatten_reg_5578_pp0_iter8_reg == 1'd0) & (data_V_data_V_empty_n == 1'b0)) | ((tmp_649_reg_5644 == 1'd1) & (data_window_8_V_V_full_n == 1'b0)) | ((tmp_648_reg_5640 == 1'd1) & (data_window_7_V_V_full_n == 1'b0)) | ((tmp_647_reg_5636 == 1'd1) & (data_window_6_V_V_full_n == 1'b0)) | ((tmp_646_reg_5632 == 1'd1) & (data_window_5_V_V_full_n == 1'b0)) | ((tmp_645_reg_5628 == 1'd1) & (data_window_4_V_V_full_n == 1'b0)) | ((tmp_644_reg_5624 == 1'd1) & (data_window_3_V_V_full_n == 1'b0)) | ((tmp_643_reg_5620 == 1'd1) & (data_window_2_V_V_full_n == 1'b0)) | ((tmp_642_reg_5616 == 1'd1) & (data_window_1_V_V_full_n == 1'b0)) | ((tmp_641_reg_5612 == 1'd1) & (data_window_0_V_V_full_n == 1'b0)))) | ((ap_enable_reg_pp0_iter10 == 1'b1) & (((tmp_649_reg_5644_pp0_iter9_reg == 1'd1) & (data_window_8_V_V_empty_n == 1'b0)) | ((tmp_649_reg_5644_pp0_iter9_reg == 1'd1) & (data_window_7_V_V_empty_n == 1'b0)) | ((tmp_649_reg_5644_pp0_iter9_reg == 1'd1) & (data_window_6_V_V_empty_n == 1'b0)) | ((tmp_649_reg_5644_pp0_iter9_reg == 1'd1) & (data_window_5_V_V_empty_n == 1'b0)) | ((tmp_649_reg_5644_pp0_iter9_reg == 1'd1) & (data_window_4_V_V_empty_n == 1'b0)) | ((tmp_649_reg_5644_pp0_iter9_reg == 1'd1) & (data_window_3_V_V_empty_n == 1'b0)) | ((tmp_649_reg_5644_pp0_iter9_reg == 1'd1) & (data_window_2_V_V_empty_n == 1'b0)) | ((tmp_649_reg_5644_pp0_iter9_reg == 1'd1) & (data_window_1_V_V_empty_n == 1'b0)) | ((tmp_649_reg_5644_pp0_iter9_reg == 1'd1) & (data_window_0_V_V_empty_n == 1'b0)))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((tmp_649_reg_5644_pp0_iter12_reg == 1'd1) & (res_V_data_0_V1_status == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b1)) | ((ap_enable_reg_pp0_iter9 == 1'b1) & (((exitcond_flatten_reg_5578_pp0_iter8_reg == 1'd0) & (data_V_data_V_empty_n == 1'b0)) | ((tmp_649_reg_5644 == 1'd1) & (data_window_8_V_V_full_n == 1'b0)) | ((tmp_648_reg_5640 == 1'd1) & (data_window_7_V_V_full_n == 1'b0)) | ((tmp_647_reg_5636 == 1'd1) & (data_window_6_V_V_full_n == 1'b0)) | ((tmp_646_reg_5632 == 1'd1) & (data_window_5_V_V_full_n == 1'b0)) | ((tmp_645_reg_5628 == 1'd1) & (data_window_4_V_V_full_n == 1'b0)) | ((tmp_644_reg_5624 == 1'd1) & (data_window_3_V_V_full_n == 1'b0)) | ((tmp_643_reg_5620 == 1'd1) & (data_window_2_V_V_full_n == 1'b0)) | ((tmp_642_reg_5616 == 1'd1) & (data_window_1_V_V_full_n == 1'b0)) | ((tmp_641_reg_5612 == 1'd1) & (data_window_0_V_V_full_n == 1'b0)))) | ((ap_enable_reg_pp0_iter10 == 1'b1) & (((tmp_649_reg_5644_pp0_iter9_reg == 1'd1) & (data_window_8_V_V_empty_n == 1'b0)) | ((tmp_649_reg_5644_pp0_iter9_reg == 1'd1) & (data_window_7_V_V_empty_n == 1'b0)) | ((tmp_649_reg_5644_pp0_iter9_reg == 1'd1) & (data_window_6_V_V_empty_n == 1'b0)) | ((tmp_649_reg_5644_pp0_iter9_reg == 1'd1) & (data_window_5_V_V_empty_n == 1'b0)) | ((tmp_649_reg_5644_pp0_iter9_reg == 1'd1) & (data_window_4_V_V_empty_n == 1'b0)) | ((tmp_649_reg_5644_pp0_iter9_reg == 1'd1) & (data_window_3_V_V_empty_n == 1'b0)) | ((tmp_649_reg_5644_pp0_iter9_reg == 1'd1) & (data_window_2_V_V_empty_n == 1'b0)) | ((tmp_649_reg_5644_pp0_iter9_reg == 1'd1) & (data_window_1_V_V_empty_n == 1'b0)) | ((tmp_649_reg_5644_pp0_iter9_reg == 1'd1) & (data_window_0_V_V_empty_n == 1'b0)))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((tmp_649_reg_5644_pp0_iter12_reg == 1'd1) & (res_V_data_0_V1_status == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b1)) | ((ap_enable_reg_pp0_iter9 == 1'b1) & (((exitcond_flatten_reg_5578_pp0_iter8_reg == 1'd0) & (data_V_data_V_empty_n == 1'b0)) | ((tmp_649_reg_5644 == 1'd1) & (data_window_8_V_V_full_n == 1'b0)) | ((tmp_648_reg_5640 == 1'd1) & (data_window_7_V_V_full_n == 1'b0)) | ((tmp_647_reg_5636 == 1'd1) & (data_window_6_V_V_full_n == 1'b0)) | ((tmp_646_reg_5632 == 1'd1) & (data_window_5_V_V_full_n == 1'b0)) | ((tmp_645_reg_5628 == 1'd1) & (data_window_4_V_V_full_n == 1'b0)) | ((tmp_644_reg_5624 == 1'd1) & (data_window_3_V_V_full_n == 1'b0)) | ((tmp_643_reg_5620 == 1'd1) & (data_window_2_V_V_full_n == 1'b0)) | ((tmp_642_reg_5616 == 1'd1) & (data_window_1_V_V_full_n == 1'b0)) | ((tmp_641_reg_5612 == 1'd1) & (data_window_0_V_V_full_n == 1'b0)))) | ((ap_enable_reg_pp0_iter10 == 1'b1) & (((tmp_649_reg_5644_pp0_iter9_reg == 1'd1) & (data_window_8_V_V_empty_n == 1'b0)) | ((tmp_649_reg_5644_pp0_iter9_reg == 1'd1) & (data_window_7_V_V_empty_n == 1'b0)) | ((tmp_649_reg_5644_pp0_iter9_reg == 1'd1) & (data_window_6_V_V_empty_n == 1'b0)) | ((tmp_649_reg_5644_pp0_iter9_reg == 1'd1) & (data_window_5_V_V_empty_n == 1'b0)) | ((tmp_649_reg_5644_pp0_iter9_reg == 1'd1) & (data_window_4_V_V_empty_n == 1'b0)) | ((tmp_649_reg_5644_pp0_iter9_reg == 1'd1) & (data_window_3_V_V_empty_n == 1'b0)) | ((tmp_649_reg_5644_pp0_iter9_reg == 1'd1) & (data_window_2_V_V_empty_n == 1'b0)) | ((tmp_649_reg_5644_pp0_iter9_reg == 1'd1) & (data_window_1_V_V_empty_n == 1'b0)) | ((tmp_649_reg_5644_pp0_iter9_reg == 1'd1) & (data_window_0_V_V_empty_n == 1'b0)))));
end

always @ (*) begin
    ap_block_state1 = ((real_start == 1'b0) | (ap_done_reg == 1'b1));
end

assign ap_block_state10_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state11_pp0_stage0_iter9 = (((exitcond_flatten_reg_5578_pp0_iter8_reg == 1'd0) & (data_V_data_V_empty_n == 1'b0)) | ((tmp_649_reg_5644 == 1'd1) & (data_window_8_V_V_full_n == 1'b0)) | ((tmp_648_reg_5640 == 1'd1) & (data_window_7_V_V_full_n == 1'b0)) | ((tmp_647_reg_5636 == 1'd1) & (data_window_6_V_V_full_n == 1'b0)) | ((tmp_646_reg_5632 == 1'd1) & (data_window_5_V_V_full_n == 1'b0)) | ((tmp_645_reg_5628 == 1'd1) & (data_window_4_V_V_full_n == 1'b0)) | ((tmp_644_reg_5624 == 1'd1) & (data_window_3_V_V_full_n == 1'b0)) | ((tmp_643_reg_5620 == 1'd1) & (data_window_2_V_V_full_n == 1'b0)) | ((tmp_642_reg_5616 == 1'd1) & (data_window_1_V_V_full_n == 1'b0)) | ((tmp_641_reg_5612 == 1'd1) & (data_window_0_V_V_full_n == 1'b0)));
end

always @ (*) begin
    ap_block_state12_pp0_stage0_iter10 = (((tmp_649_reg_5644_pp0_iter9_reg == 1'd1) & (data_window_8_V_V_empty_n == 1'b0)) | ((tmp_649_reg_5644_pp0_iter9_reg == 1'd1) & (data_window_7_V_V_empty_n == 1'b0)) | ((tmp_649_reg_5644_pp0_iter9_reg == 1'd1) & (data_window_6_V_V_empty_n == 1'b0)) | ((tmp_649_reg_5644_pp0_iter9_reg == 1'd1) & (data_window_5_V_V_empty_n == 1'b0)) | ((tmp_649_reg_5644_pp0_iter9_reg == 1'd1) & (data_window_4_V_V_empty_n == 1'b0)) | ((tmp_649_reg_5644_pp0_iter9_reg == 1'd1) & (data_window_3_V_V_empty_n == 1'b0)) | ((tmp_649_reg_5644_pp0_iter9_reg == 1'd1) & (data_window_2_V_V_empty_n == 1'b0)) | ((tmp_649_reg_5644_pp0_iter9_reg == 1'd1) & (data_window_1_V_V_empty_n == 1'b0)) | ((tmp_649_reg_5644_pp0_iter9_reg == 1'd1) & (data_window_0_V_V_empty_n == 1'b0)));
end

assign ap_block_state13_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter12 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state15_pp0_stage0_iter13 = ((tmp_649_reg_5644_pp0_iter12_reg == 1'd1) & (res_V_data_0_V1_status == 1'b0));
end

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_ready = internal_ap_ready;

assign exitcond_flatten_fu_4202_p2 = ((indvar_flatten_reg_563 == 10'd729) ? 1'b1 : 1'b0);

assign grp_fu_4196_p1 = 5'd3;

assign grp_fu_4234_p1 = 5'd3;

assign grp_fu_4248_p1 = 5'd3;

assign h_idx_assign_mid2_fu_4240_p3 = ((tmp_106_fu_4214_p2[0:0] === 1'b1) ? i_ih3_fu_4228_p2 : ap_phi_mux_h_idx_assign_phi_fu_578_p4);

assign i_ih3_fu_4228_p2 = (5'd1 + ap_phi_mux_h_idx_assign_phi_fu_578_p4);

assign i_iw_fu_4254_p2 = (w_idx_assign_mid2_fu_4220_p3 + 5'd1);

assign indvar_flatten_next_fu_4208_p2 = (10'd1 + indvar_flatten_reg_563);

assign p_0_i_i_cast_fu_4315_p1 = tmp_640_fu_4311_p1;

assign p_Val2_18_0_1_fu_4551_p2 = ($signed(p_shl43_fu_4544_p3) - $signed(OP1_V_0_cast_fu_4529_p1));

assign p_Val2_18_0_3_fu_625_p1 = OP1_V_0_cast_fu_4529_p1;

assign p_Val2_18_0_3_fu_625_p2 = ($signed({{1'b0}, {12'd25}}) * $signed(p_Val2_18_0_3_fu_625_p1));

assign p_Val2_18_0_4_fu_4588_p2 = ($signed(p_shl43_fu_4544_p3) - $signed(p_shl42_cast_fu_4584_p1));

assign p_Val2_18_1_1_fu_610_p1 = OP1_V_1_cast_fu_4604_p1;

assign p_Val2_18_1_1_fu_610_p2 = ($signed({{1'b0}, {12'd23}}) * $signed(p_Val2_18_1_1_fu_610_p1));

assign p_Val2_18_1_2_fu_4644_p2 = ($signed(p_shl40_cast_fu_4640_p1) - $signed(OP1_V_1_cast8_fu_4610_p1));

assign p_Val2_18_1_3_fu_4671_p2 = ($signed(p_shl39_fu_4664_p3) + $signed(OP1_V_1_cast_fu_4604_p1));

assign p_Val2_18_1_4_fu_606_p1 = OP1_V_1_cast_fu_4604_p1;

assign p_Val2_18_1_4_fu_606_p2 = ($signed(12'd4059) * $signed(p_Val2_18_1_4_fu_606_p1));

assign p_Val2_18_1_fu_620_p1 = OP1_V_1_cast_fu_4604_p1;

assign p_Val2_18_1_fu_620_p2 = ($signed({{1'b0}, {12'd22}}) * $signed(p_Val2_18_1_fu_620_p1));

assign p_Val2_18_2_1_fu_630_p1 = OP1_V_2_cast_fu_4697_p1;

assign p_Val2_18_2_1_fu_630_p2 = ($signed({{1'b0}, {12'd29}}) * $signed(p_Val2_18_2_1_fu_630_p1));

assign p_Val2_18_2_4_fu_622_p1 = OP1_V_2_cast_fu_4697_p1;

assign p_Val2_18_2_4_fu_622_p2 = ($signed(12'd4067) * $signed(p_Val2_18_2_4_fu_622_p1));

assign p_Val2_18_2_fu_4720_p2 = ($signed(p_shl37_fu_4702_p3) - $signed(p_shl38_cast_fu_4716_p1));

assign p_Val2_18_3_1_fu_4784_p2 = ($signed(p_neg_fu_4767_p2) - $signed(p_shl36_cast_fu_4780_p1));

assign p_Val2_18_3_3_fu_639_p1 = tmp_V_13_reg_5669;

assign p_Val2_18_3_3_fu_639_p2 = ($signed({{1'b0}, {12'd38}}) * $signed(p_Val2_18_3_3_fu_639_p1));

assign p_Val2_18_3_4_fu_4820_p2 = ($signed(p_shl33_fu_4813_p3) + $signed(p_shl36_cast_fu_4780_p1));

assign p_Val2_18_4_1_fu_4865_p2 = ($signed(11'd0) - $signed(p_shl32_cast_fu_4861_p1));

assign p_Val2_18_4_2_fu_633_p1 = OP1_V_4_cast_fu_4836_p1;

assign p_Val2_18_4_2_fu_633_p2 = ($signed({{1'b0}, {12'd38}}) * $signed(p_Val2_18_4_2_fu_633_p1));

assign p_Val2_18_4_3_fu_4895_p2 = ($signed(9'd0) - $signed(OP1_V_4_cast8_fu_4841_p1));

assign p_Val2_18_4_fu_628_p1 = OP1_V_4_cast_fu_4836_p1;

assign p_Val2_18_4_fu_628_p2 = ($signed(12'd4077) * $signed(p_Val2_18_4_fu_628_p1));

assign p_Val2_18_5_1_fu_612_p1 = OP1_V_5_cast_fu_4915_p1;

assign p_Val2_18_5_1_fu_612_p2 = ($signed({{1'b0}, {12'd26}}) * $signed(p_Val2_18_5_1_fu_612_p1));

assign p_Val2_18_5_2_fu_4956_p2 = ($signed(p_shl31_cast_fu_4952_p1) - $signed(OP1_V_5_cast6_fu_4922_p1));

assign p_Val2_18_5_3_fu_602_p1 = OP1_V_5_cast_fu_4915_p1;

assign p_Val2_18_5_3_fu_602_p2 = ($signed({{1'b0}, {12'd27}}) * $signed(p_Val2_18_5_3_fu_602_p1));

assign p_Val2_18_5_4_fu_604_p1 = OP1_V_5_cast_fu_4915_p1;

assign p_Val2_18_5_4_fu_604_p2 = ($signed(12'd4059) * $signed(p_Val2_18_5_4_fu_604_p1));

assign p_Val2_18_5_fu_624_p1 = OP1_V_5_cast_fu_4915_p1;

assign p_Val2_18_5_fu_624_p2 = ($signed({{1'b0}, {12'd21}}) * $signed(p_Val2_18_5_fu_624_p1));

assign p_Val2_18_6_1_fu_605_p1 = OP1_V_6_cast6_fu_4996_p1;

assign p_Val2_18_6_1_fu_605_p2 = ($signed({{1'b0}, {12'd11}}) * $signed(p_Val2_18_6_1_fu_605_p1));

assign p_Val2_18_6_2_fu_5048_p2 = ($signed(p_shl30_cast_fu_5007_p1) - $signed(p_shl29_cast_fu_5044_p1));

assign p_Val2_18_6_3_fu_5071_p2 = ($signed(p_shl27_fu_5064_p3) - $signed(OP1_V_6_cast6_fu_4996_p1));

assign p_Val2_18_6_4_fu_5094_p2 = ($signed(p_shl25_fu_5087_p3) - $signed(p_shl30_cast_fu_5007_p1));

assign p_Val2_18_6_fu_5011_p2 = ($signed(p_shl30_cast_fu_5007_p1) - $signed(OP1_V_6_cast6_fu_4996_p1));

assign p_Val2_18_7_1_fu_637_p1 = OP1_V_7_cast_fu_5110_p1;

assign p_Val2_18_7_1_fu_637_p2 = ($signed(12'd4067) * $signed(p_Val2_18_7_1_fu_637_p1));

assign p_Val2_18_7_2_fu_5170_p2 = ($signed(p_shl22_cast_fu_5166_p1) - $signed(OP1_V_7_cast_fu_5110_p1));

assign p_Val2_18_7_3_fu_5204_p2 = ($signed(p_shl20_fu_5186_p3) - $signed(p_shl21_cast_fu_5200_p1));

assign p_Val2_18_7_4_fu_611_p1 = OP1_V_7_cast_fu_5110_p1;

assign p_Val2_18_7_4_fu_611_p2 = ($signed({{1'b0}, {12'd21}}) * $signed(p_Val2_18_7_4_fu_611_p1));

assign p_Val2_18_7_fu_5133_p2 = ($signed(p_shl23_fu_5115_p3) + $signed(p_shl24_cast_fu_5129_p1));

assign p_Val2_18_8_1_fu_629_p1 = OP1_V_8_cast8_fu_5230_p1;

assign p_Val2_18_8_1_fu_629_p2 = ($signed({{1'b0}, {12'd19}}) * $signed(p_Val2_18_8_1_fu_629_p1));

assign p_Val2_18_8_3_fu_5266_p2 = ($signed(p_shl19_cast_fu_5262_p1) + $signed(OP1_V_8_cast8_fu_5230_p1));

assign p_Val2_18_8_4_fu_5300_p2 = ($signed(p_shl_fu_5282_p3) - $signed(p_shl18_cast_fu_5296_p1));

assign p_Val2_18_8_fu_597_p1 = OP1_V_8_cast8_fu_5230_p1;

assign p_Val2_18_8_fu_597_p2 = ($signed({{1'b0}, {12'd25}}) * $signed(p_Val2_18_8_fu_597_p1));

assign p_Val2_18_fu_623_p1 = OP1_V_0_cast_fu_4529_p1;

assign p_Val2_18_fu_623_p2 = ($signed({{1'b0}, {12'd11}}) * $signed(p_Val2_18_fu_623_p1));

assign p_Val2_s_fu_4325_p17 = (p_0_i_i_cast_fu_4315_p1 + phitmp_mid2_fu_4304_p3);

assign p_neg_fu_4767_p2 = (12'd0 - p_shl35_fu_4760_p3);

assign p_shl18_cast_fu_5296_p1 = $signed(p_shl18_fu_5289_p3);

assign p_shl18_fu_5289_p3 = {{tmp_V_18_reg_5708}, {2'd0}};

assign p_shl19_cast_fu_5262_p1 = $signed(p_shl19_fu_5255_p3);

assign p_shl19_fu_5255_p3 = {{tmp_V_18_reg_5708}, {3'd0}};

assign p_shl20_fu_5186_p3 = {{tmp_654_reg_5741}, {5'd0}};

assign p_shl21_cast_fu_5200_p1 = $signed(p_shl21_fu_5193_p3);

assign p_shl21_fu_5193_p3 = {{tmp_V_17_reg_5699}, {1'd0}};

assign p_shl22_cast_fu_5166_p1 = $signed(p_shl22_fu_5159_p3);

assign p_shl22_fu_5159_p3 = {{tmp_V_17_reg_5699}, {3'd0}};

assign p_shl23_fu_5115_p3 = {{tmp_V_17_reg_5699}, {4'd0}};

assign p_shl24_cast_fu_5129_p1 = $signed(p_shl24_fu_5122_p3);

assign p_shl24_fu_5122_p3 = {{tmp_V_17_reg_5699}, {2'd0}};

assign p_shl25_fu_5087_p3 = {{tmp_653_reg_5736}, {5'd0}};

assign p_shl27_fu_5064_p3 = {{tmp_V_16_reg_5691}, {4'd0}};

assign p_shl29_cast_fu_5044_p1 = $signed(p_shl29_fu_5037_p3);

assign p_shl29_fu_5037_p3 = {{tmp_V_16_reg_5691}, {1'd0}};

assign p_shl30_cast_fu_5007_p1 = $signed(p_shl30_fu_5000_p3);

assign p_shl30_fu_5000_p3 = {{tmp_V_16_reg_5691}, {3'd0}};

assign p_shl31_cast_fu_4952_p1 = $signed(p_shl31_fu_4945_p3);

assign p_shl31_fu_4945_p3 = {{tmp_V_15_reg_5684}, {2'd0}};

assign p_shl32_cast_fu_4861_p1 = $signed(p_shl32_fu_4854_p3);

assign p_shl32_fu_4854_p3 = {{tmp_V_14_reg_5677}, {2'd0}};

assign p_shl33_fu_4813_p3 = {{tmp_V_13_reg_5669}, {4'd0}};

assign p_shl35_fu_4760_p3 = {{tmp_652_reg_5726}, {5'd0}};

assign p_shl36_cast_fu_4780_p1 = $signed(p_shl36_fu_4773_p3);

assign p_shl36_fu_4773_p3 = {{tmp_V_13_reg_5669}, {2'd0}};

assign p_shl37_fu_4702_p3 = {{tmp_651_reg_5721}, {5'd0}};

assign p_shl38_cast_fu_4716_p1 = $signed(p_shl38_fu_4709_p3);

assign p_shl38_fu_4709_p3 = {{tmp_V_12_reg_5662}, {3'd0}};

assign p_shl39_fu_4664_p3 = {{tmp_650_reg_5716}, {5'd0}};

assign p_shl40_cast_fu_4640_p1 = $signed(p_shl40_fu_4633_p3);

assign p_shl40_fu_4633_p3 = {{tmp_V_11_reg_5655}, {2'd0}};

assign p_shl42_cast_fu_4584_p1 = $signed(p_shl42_fu_4577_p3);

assign p_shl42_fu_4577_p3 = {{tmp_V_10_reg_5648}, {2'd0}};

assign p_shl43_fu_4544_p3 = {{tmp_V_10_reg_5648}, {4'd0}};

assign p_shl_fu_5282_p3 = {{tmp_V_18_reg_5708}, {4'd0}};

assign p_shl_i_fu_4268_p3 = {{tmp_637_fu_4264_p1}, {2'd0}};

assign p_shl_i_mid1_fu_4290_p3 = {{tmp_639_fu_4286_p1}, {2'd0}};

assign phitmp_fu_4276_p2 = (p_shl_i_fu_4268_p3 - tmp_636_fu_4260_p1);

assign phitmp_mid1_fu_4298_p2 = (p_shl_i_mid1_fu_4290_p3 - tmp_638_fu_4282_p1);

assign phitmp_mid2_fu_4304_p3 = ((tmp_106_reg_5587_pp0_iter7_reg[0:0] === 1'b1) ? phitmp_mid1_fu_4298_p2 : phitmp_fu_4276_p2);

assign res_V_data_0_V1_status = (res_V_data_4_V_full_n & res_V_data_3_V_full_n & res_V_data_2_V_full_n & res_V_data_1_V_full_n & res_V_data_0_V_full_n);

assign res_V_data_0_V_din = tmp_data_0_V_reg_5856;

assign res_V_data_0_V_write = res_V_data_0_V1_update;

assign res_V_data_1_V_din = acc_1_V_2_reg_5861;

assign res_V_data_1_V_write = res_V_data_0_V1_update;

assign res_V_data_2_V_din = acc_2_V_3_reg_5866;

assign res_V_data_2_V_write = res_V_data_0_V1_update;

assign res_V_data_3_V_din = acc_3_V_3_reg_5871;

assign res_V_data_3_V_write = res_V_data_0_V1_update;

assign res_V_data_4_V_din = acc_4_V_2_reg_5876;

assign res_V_data_4_V_write = res_V_data_0_V1_update;

assign start_out = real_start;

assign tmp10_fu_5476_p2 = (tmp12_reg_5806 + tmp11_fu_5472_p2);

assign tmp11_fu_5472_p2 = (tmp_142_5_1_reg_5761 + tmp_142_6_1_reg_5771);

assign tmp12_fu_5357_p2 = (tmp13_fu_5351_p2 + tmp_142_7_1_fu_5149_p4);

assign tmp13_fu_5351_p2 = ($signed(tmp_142_8_1_fu_5245_p4) + $signed(tmp_213_fu_4881_p1));

assign tmp14_fu_5487_p2 = (tmp16_reg_5816 + tmp15_reg_5811);

assign tmp15_fu_5363_p2 = (tmp_142_4_2_fu_4885_p4 + tmp_142_6_2_fu_5054_p4);

assign tmp16_fu_5369_p2 = ($signed(tmp_142_7_2_fu_5176_p4) + $signed(tmp_209_fu_4660_p1));

assign tmp17_fu_5384_p2 = ($signed(tmp19_cast_fu_5381_p1) + $signed(tmp18_fu_5375_p2));

assign tmp18_fu_5375_p2 = ($signed(tmp_142_3_2_fu_4800_p1) + $signed(tmp_217_fu_4972_p1));

assign tmp19_cast_fu_5381_p1 = $signed(tmp19_reg_5746);

assign tmp19_fu_4523_p2 = ($signed(tmp20_cast_fu_4519_p1) + $signed(acc_2_V_cast_cast_fu_4509_p1));

assign tmp1_fu_5316_p2 = ($signed(tmp_V_13_reg_5669) + $signed(tmp_142_1_fu_4613_p4));

assign tmp20_cast_fu_4519_p1 = $signed(tmp20_fu_4513_p2);

assign tmp20_fu_4513_p2 = ($signed(tmp_142_2_2_cast_fu_4463_p1) + $signed(tmp_142_8_2_cast_fu_4499_p1));

assign tmp21_fu_5496_p2 = (tmp23_reg_5831 + tmp22_reg_5826);

assign tmp22_fu_5390_p2 = ($signed(tmp_V_12_reg_5662) + $signed(tmp_142_1_3_fu_4677_p4));

assign tmp23_fu_5395_p2 = (acc_3_V_fu_4567_p4 + tmp_142_3_3_fu_4803_p4);

assign tmp24_fu_5419_p2 = (tmp26_fu_5413_p2 + tmp25_fu_5401_p2);

assign tmp25_fu_5401_p2 = (tmp_142_5_3_fu_4976_p4 + tmp_142_6_3_fu_5077_p4);

assign tmp26_fu_5413_p2 = (tmp27_fu_5407_p2 + tmp_142_7_3_fu_5210_p4);

assign tmp27_fu_5407_p2 = ($signed(tmp_142_8_3_fu_5272_p4) + $signed(tmp_215_fu_4911_p1));

assign tmp28_fu_5505_p2 = (tmp30_reg_5846 + tmp29_reg_5841);

assign tmp29_fu_5425_p2 = (tmp_142_1_4_fu_4687_p4 + acc_4_V_fu_4594_p4);

assign tmp2_fu_5321_p2 = (tmp_142_fu_4534_p4 + tmp_142_2_fu_4726_p4);

assign tmp30_fu_5431_p2 = (tmp_142_2_4_fu_4746_p4 + tmp_142_3_4_fu_4826_p4);

assign tmp31_fu_5513_p2 = (tmp33_reg_5851 + tmp32_fu_5509_p2);

assign tmp32_fu_5509_p2 = (tmp_142_5_4_reg_5766 + tmp_142_6_4_reg_5776);

assign tmp33_fu_5443_p2 = (tmp34_fu_5437_p2 + tmp_142_7_4_fu_5220_p4);

assign tmp34_fu_5437_p2 = ($signed(tmp_142_8_4_fu_5306_p4) + $signed(tmp_213_fu_4881_p1));

assign tmp3_fu_5457_p2 = (tmp5_reg_5791 + tmp4_fu_5453_p2);

assign tmp4_fu_5453_p2 = (tmp_142_4_reg_5751 + tmp_142_5_reg_5756);

assign tmp5_fu_5333_p2 = (tmp6_fu_5327_p2 + tmp_142_6_fu_5017_p4);

assign tmp6_fu_5327_p2 = (tmp_142_7_fu_5139_p4 + tmp_142_8_fu_5235_p4);

assign tmp7_fu_5468_p2 = (tmp9_reg_5801 + tmp8_reg_5796);

assign tmp8_fu_5339_p2 = (tmp_142_1_1_fu_4623_p4 + acc_1_V_fu_4557_p4);

assign tmp9_fu_5345_p2 = (tmp_142_2_1_fu_4736_p4 + tmp_142_3_1_fu_4790_p4);

assign tmp_106_fu_4214_p2 = ((wp_idx_reg_586 == 5'd27) ? 1'b1 : 1'b0);

assign tmp_142_0_2_cast_fu_4441_p1 = $signed(tmp_207_fu_4431_p4);

assign tmp_142_1_1_fu_4623_p4 = {{p_Val2_18_1_1_fu_610_p2[11:4]}};

assign tmp_142_1_3_fu_4677_p4 = {{p_Val2_18_1_3_fu_4671_p2[11:4]}};

assign tmp_142_1_4_fu_4687_p4 = {{p_Val2_18_1_4_fu_606_p2[11:4]}};

assign tmp_142_1_fu_4613_p4 = {{p_Val2_18_1_fu_620_p2[11:4]}};

assign tmp_142_2_1_fu_4736_p4 = {{p_Val2_18_2_1_fu_630_p2[11:4]}};

assign tmp_142_2_2_cast_fu_4463_p1 = $signed(tmp_210_fu_4453_p4);

assign tmp_142_2_4_fu_4746_p4 = {{p_Val2_18_2_4_fu_622_p2[11:4]}};

assign tmp_142_2_fu_4726_p4 = {{p_Val2_18_2_fu_4720_p2[11:4]}};

assign tmp_142_3_1_fu_4790_p4 = {{p_Val2_18_3_1_fu_4784_p2[11:4]}};

assign tmp_142_3_2_fu_4800_p1 = $signed(tmp_211_reg_5731);

assign tmp_142_3_3_fu_4803_p4 = {{p_Val2_18_3_3_fu_639_p2[11:4]}};

assign tmp_142_3_4_fu_4826_p4 = {{p_Val2_18_3_4_fu_4820_p2[11:4]}};

assign tmp_142_4_2_fu_4885_p4 = {{p_Val2_18_4_2_fu_633_p2[11:4]}};

assign tmp_142_5_3_fu_4976_p4 = {{p_Val2_18_5_3_fu_602_p2[11:4]}};

assign tmp_142_6_2_fu_5054_p4 = {{p_Val2_18_6_2_fu_5048_p2[11:4]}};

assign tmp_142_6_3_fu_5077_p4 = {{p_Val2_18_6_3_fu_5071_p2[11:4]}};

assign tmp_142_6_fu_5017_p4 = {{p_Val2_18_6_fu_5011_p2[11:4]}};

assign tmp_142_7_1_fu_5149_p4 = {{p_Val2_18_7_1_fu_637_p2[11:4]}};

assign tmp_142_7_2_fu_5176_p4 = {{p_Val2_18_7_2_fu_5170_p2[11:4]}};

assign tmp_142_7_3_fu_5210_p4 = {{p_Val2_18_7_3_fu_5204_p2[11:4]}};

assign tmp_142_7_4_fu_5220_p4 = {{p_Val2_18_7_4_fu_611_p2[11:4]}};

assign tmp_142_7_fu_5139_p4 = {{p_Val2_18_7_fu_5133_p2[11:4]}};

assign tmp_142_8_1_fu_5245_p4 = {{p_Val2_18_8_1_fu_629_p2[11:4]}};

assign tmp_142_8_2_cast_fu_4499_p1 = $signed(tmp_218_fu_4489_p4);

assign tmp_142_8_3_fu_5272_p4 = {{p_Val2_18_8_3_fu_5266_p2[11:4]}};

assign tmp_142_8_4_fu_5306_p4 = {{p_Val2_18_8_4_fu_5300_p2[11:4]}};

assign tmp_142_8_fu_5235_p4 = {{p_Val2_18_8_fu_597_p2[11:4]}};

assign tmp_142_fu_4534_p4 = {{p_Val2_18_fu_623_p2[11:4]}};

assign tmp_207_fu_4431_p1 = data_window_0_V_V_dout;

assign tmp_207_fu_4431_p4 = {{tmp_207_fu_4431_p1[7:4]}};

assign tmp_208_fu_4650_p4 = {{p_Val2_18_1_2_fu_4644_p2[10:4]}};

assign tmp_209_fu_4660_p1 = $signed(tmp_208_fu_4650_p4);

assign tmp_210_fu_4453_p1 = data_window_2_V_V_dout;

assign tmp_210_fu_4453_p4 = {{tmp_210_fu_4453_p1[7:4]}};

assign tmp_211_fu_4471_p1 = data_window_3_V_V_dout;

assign tmp_212_fu_4871_p4 = {{p_Val2_18_4_1_fu_4865_p2[10:4]}};

assign tmp_213_fu_4881_p1 = $signed(tmp_212_fu_4871_p4);

assign tmp_214_fu_4901_p4 = {{p_Val2_18_4_3_fu_4895_p2[8:4]}};

assign tmp_215_fu_4911_p1 = $signed(tmp_214_fu_4901_p4);

assign tmp_216_fu_4962_p4 = {{p_Val2_18_5_2_fu_4956_p2[10:4]}};

assign tmp_217_fu_4972_p1 = $signed(tmp_216_fu_4962_p4);

assign tmp_218_fu_4489_p1 = data_window_8_V_V_dout;

assign tmp_218_fu_4489_p4 = {{tmp_218_fu_4489_p1[7:4]}};

assign tmp_636_fu_4260_p1 = grp_fu_4196_p2[3:0];

assign tmp_637_fu_4264_p1 = grp_fu_4196_p2[1:0];

assign tmp_638_fu_4282_p1 = grp_fu_4234_p2[3:0];

assign tmp_639_fu_4286_p1 = grp_fu_4234_p2[1:0];

assign tmp_640_fu_4311_p1 = grp_fu_4248_p2[1:0];

assign tmp_641_fu_4363_p1 = p_Val2_s_fu_4325_p18[0:0];

assign tmp_650_fu_4445_p0 = data_window_1_V_V_dout;

assign tmp_650_fu_4445_p1 = tmp_650_fu_4445_p0[6:0];

assign tmp_651_fu_4449_p0 = data_window_2_V_V_dout;

assign tmp_651_fu_4449_p1 = tmp_651_fu_4449_p0[6:0];

assign tmp_652_fu_4467_p0 = data_window_3_V_V_dout;

assign tmp_652_fu_4467_p1 = tmp_652_fu_4467_p0[6:0];

assign tmp_653_fu_4481_p0 = data_window_6_V_V_dout;

assign tmp_653_fu_4481_p1 = tmp_653_fu_4481_p0[6:0];

assign tmp_654_fu_4485_p0 = data_window_7_V_V_dout;

assign tmp_654_fu_4485_p1 = tmp_654_fu_4485_p0[6:0];

assign tmp_data_0_V_fu_5462_p2 = (tmp3_fu_5457_p2 + tmp_fu_5449_p2);

assign tmp_fu_5449_p2 = (tmp2_reg_5786 + tmp1_reg_5781);

assign w_idx_assign_mid2_fu_4220_p3 = ((tmp_106_fu_4214_p2[0:0] === 1'b1) ? 5'd0 : wp_idx_reg_586);

endmodule //conv_2d_cl_array_array_ap_fixed_5u_config2_s
