// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module softmax (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        ap_ce,
        data_0_V_read,
        data_1_V_read,
        data_2_V_read,
        data_3_V_read,
        data_4_V_read,
        ap_return_0,
        ap_return_1,
        ap_return_2,
        ap_return_3,
        ap_return_4
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input   ap_ce;
input  [7:0] data_0_V_read;
input  [7:0] data_1_V_read;
input  [7:0] data_2_V_read;
input  [7:0] data_3_V_read;
input  [7:0] data_4_V_read;
output  [7:0] ap_return_0;
output  [7:0] ap_return_1;
output  [7:0] ap_return_2;
output  [7:0] ap_return_3;
output  [7:0] ap_return_4;

reg ap_done;
reg ap_idle;
reg ap_ready;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
wire    ap_block_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_idle_pp0;
reg    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
wire    ap_block_state6_pp0_stage0_iter5;
reg    ap_block_pp0_stage0_11001;
wire   [9:0] exp_table1_address0;
reg    exp_table1_ce0;
wire   [17:0] exp_table1_q0;
wire   [9:0] exp_table1_address1;
reg    exp_table1_ce1;
wire   [17:0] exp_table1_q1;
wire   [9:0] exp_table1_address2;
reg    exp_table1_ce2;
wire   [17:0] exp_table1_q2;
wire   [9:0] exp_table1_address3;
reg    exp_table1_ce3;
wire   [17:0] exp_table1_q3;
wire   [9:0] exp_table1_address4;
reg    exp_table1_ce4;
wire   [17:0] exp_table1_q4;
wire   [9:0] exp_table1_address5;
reg    exp_table1_ce5;
wire   [17:0] exp_table1_q5;
wire   [9:0] exp_table1_address6;
reg    exp_table1_ce6;
wire   [17:0] exp_table1_q6;
wire   [9:0] exp_table1_address7;
reg    exp_table1_ce7;
wire   [17:0] exp_table1_q7;
wire   [9:0] exp_table1_address8;
reg    exp_table1_ce8;
wire   [17:0] exp_table1_q8;
wire   [9:0] exp_table1_address9;
reg    exp_table1_ce9;
wire   [17:0] exp_table1_q9;
wire   [9:0] exp_table1_address10;
reg    exp_table1_ce10;
wire   [17:0] exp_table1_q10;
wire   [9:0] exp_table1_address11;
reg    exp_table1_ce11;
wire   [17:0] exp_table1_q11;
wire   [9:0] exp_table1_address12;
reg    exp_table1_ce12;
wire   [17:0] exp_table1_q12;
wire   [9:0] exp_table1_address13;
reg    exp_table1_ce13;
wire   [17:0] exp_table1_q13;
wire   [9:0] exp_table1_address14;
reg    exp_table1_ce14;
wire   [17:0] exp_table1_q14;
wire   [9:0] exp_table1_address15;
reg    exp_table1_ce15;
wire   [17:0] exp_table1_q15;
wire   [9:0] exp_table1_address16;
reg    exp_table1_ce16;
wire   [17:0] exp_table1_q16;
wire   [9:0] exp_table1_address17;
reg    exp_table1_ce17;
wire   [17:0] exp_table1_q17;
wire   [9:0] exp_table1_address18;
reg    exp_table1_ce18;
wire   [17:0] exp_table1_q18;
wire   [9:0] exp_table1_address19;
reg    exp_table1_ce19;
wire   [17:0] exp_table1_q19;
wire   [9:0] invert_table2_address0;
reg    invert_table2_ce0;
wire   [14:0] invert_table2_q0;
wire   [9:0] invert_table2_address1;
reg    invert_table2_ce1;
wire   [14:0] invert_table2_q1;
wire   [9:0] invert_table2_address2;
reg    invert_table2_ce2;
wire   [14:0] invert_table2_q2;
wire   [9:0] invert_table2_address3;
reg    invert_table2_ce3;
wire   [14:0] invert_table2_q3;
wire   [9:0] invert_table2_address4;
reg    invert_table2_ce4;
wire   [14:0] invert_table2_q4;
wire   [9:0] index_1_0_1_fu_484_p3;
reg   [9:0] index_1_0_1_reg_2588;
wire   [9:0] index_1_0_2_fu_554_p3;
reg   [9:0] index_1_0_2_reg_2593;
wire   [9:0] index_1_0_3_fu_624_p3;
reg   [9:0] index_1_0_3_reg_2598;
wire   [9:0] index_1_0_4_fu_694_p3;
reg   [9:0] index_1_0_4_reg_2603;
wire   [9:0] index_1_1_fu_760_p3;
reg   [9:0] index_1_1_reg_2608;
wire   [9:0] index_1_1_2_fu_826_p3;
reg   [9:0] index_1_1_2_reg_2613;
wire   [9:0] index_1_1_3_fu_892_p3;
reg   [9:0] index_1_1_3_reg_2618;
wire   [9:0] index_1_1_4_fu_958_p3;
reg   [9:0] index_1_1_4_reg_2623;
wire   [9:0] index_1_2_fu_1024_p3;
reg   [9:0] index_1_2_reg_2628;
wire   [9:0] index_1_2_1_fu_1090_p3;
reg   [9:0] index_1_2_1_reg_2633;
wire   [9:0] index_1_2_3_fu_1156_p3;
reg   [9:0] index_1_2_3_reg_2638;
wire   [9:0] index_1_2_4_fu_1222_p3;
reg   [9:0] index_1_2_4_reg_2643;
wire   [9:0] index_1_3_fu_1288_p3;
reg   [9:0] index_1_3_reg_2648;
wire   [9:0] index_1_3_1_fu_1354_p3;
reg   [9:0] index_1_3_1_reg_2653;
wire   [9:0] index_1_3_2_fu_1420_p3;
reg   [9:0] index_1_3_2_reg_2658;
wire   [9:0] index_1_3_4_fu_1486_p3;
reg   [9:0] index_1_3_4_reg_2663;
wire   [9:0] index_1_4_fu_1552_p3;
reg   [9:0] index_1_4_reg_2668;
wire   [9:0] index_1_4_1_fu_1618_p3;
reg   [9:0] index_1_4_1_reg_2673;
wire   [9:0] index_1_4_2_fu_1684_p3;
reg   [9:0] index_1_4_2_reg_2678;
wire   [9:0] index_1_4_3_fu_1750_p3;
reg   [9:0] index_1_4_3_reg_2683;
reg   [17:0] exp_table1_load_1_reg_2788;
reg   [17:0] exp_table1_load_2_reg_2793;
wire   [17:0] tmp4_fu_1844_p2;
reg   [17:0] tmp4_reg_2798;
reg   [17:0] exp_table1_load_5_reg_2803;
reg   [17:0] exp_table1_load_6_reg_2808;
wire   [17:0] tmp9_fu_1856_p2;
reg   [17:0] tmp9_reg_2813;
reg   [17:0] exp_table1_load_9_reg_2818;
reg   [17:0] exp_table1_load_10_reg_2823;
wire   [17:0] tmp7_fu_1868_p2;
reg   [17:0] tmp7_reg_2828;
reg   [17:0] exp_table1_load_13_reg_2833;
reg   [17:0] exp_table1_load_14_reg_2838;
wire   [17:0] tmp12_fu_1880_p2;
reg   [17:0] tmp12_reg_2843;
reg   [17:0] exp_table1_load_18_reg_2848;
reg   [17:0] exp_table1_load_19_reg_2853;
wire   [17:0] tmp15_fu_1892_p2;
reg   [17:0] tmp15_reg_2858;
wire   [11:0] tmp_89_fu_2005_p1;
reg   [11:0] tmp_89_reg_2863;
reg   [0:0] tmp_90_reg_2868;
wire   [11:0] tmp_95_fu_2079_p1;
reg   [11:0] tmp_95_reg_2873;
reg   [0:0] tmp_96_reg_2878;
wire   [11:0] tmp_101_fu_2153_p1;
reg   [11:0] tmp_101_reg_2883;
reg   [0:0] tmp_102_reg_2888;
wire   [11:0] tmp_107_fu_2227_p1;
reg   [11:0] tmp_107_reg_2893;
reg   [0:0] tmp_108_reg_2898;
wire   [11:0] tmp_113_fu_2301_p1;
reg   [11:0] tmp_113_reg_2903;
reg   [0:0] tmp_114_reg_2908;
reg    ap_block_pp0_stage0_subdone;
wire   [63:0] tmp_25_0_1_fu_1758_p1;
wire   [63:0] tmp_25_0_2_fu_1762_p1;
wire   [63:0] tmp_25_0_3_fu_1766_p1;
wire   [63:0] tmp_25_0_4_fu_1770_p1;
wire   [63:0] tmp_25_1_fu_1774_p1;
wire   [63:0] tmp_25_1_2_fu_1778_p1;
wire   [63:0] tmp_25_1_3_fu_1782_p1;
wire   [63:0] tmp_25_1_4_fu_1786_p1;
wire   [63:0] tmp_25_2_fu_1790_p1;
wire   [63:0] tmp_25_2_1_fu_1794_p1;
wire   [63:0] tmp_25_2_3_fu_1798_p1;
wire   [63:0] tmp_25_2_4_fu_1802_p1;
wire   [63:0] tmp_25_3_fu_1806_p1;
wire   [63:0] tmp_25_3_1_fu_1810_p1;
wire   [63:0] tmp_25_3_2_fu_1814_p1;
wire   [63:0] tmp_25_3_4_fu_1818_p1;
wire   [63:0] tmp_25_4_fu_1822_p1;
wire   [63:0] tmp_25_4_1_fu_1826_p1;
wire   [63:0] tmp_25_4_2_fu_1830_p1;
wire   [63:0] tmp_25_4_3_fu_1834_p1;
wire   [63:0] tmp_33_fu_2347_p1;
wire   [63:0] tmp_19_1_fu_2386_p1;
wire   [63:0] tmp_19_2_fu_2425_p1;
wire   [63:0] tmp_19_3_fu_2464_p1;
wire   [63:0] tmp_19_4_fu_2503_p1;
wire  signed [8:0] tmp_12_0_1_fu_418_p1;
wire  signed [8:0] tmp_13_0_1_fu_422_p1;
wire   [8:0] r_V_0_1_fu_426_p2;
wire  signed [10:0] tmp_1_fu_432_p3;
wire  signed [11:0] data_round_0_1_cast_fu_440_p1;
wire   [11:0] index_0_1_fu_444_p2;
wire   [0:0] tmp_21_fu_456_p3;
wire   [10:0] index_0_1_cast_fu_450_p2;
wire   [10:0] p_3_0_1_fu_464_p3;
wire   [0:0] tmp_26_fu_476_p3;
wire   [9:0] tmp_24_fu_472_p1;
wire  signed [8:0] tmp_12_0_2_fu_492_p1;
wire   [8:0] r_V_0_2_fu_496_p2;
wire  signed [10:0] tmp_2_fu_502_p3;
wire  signed [11:0] data_round_0_2_cast_fu_510_p1;
wire   [11:0] index_0_2_fu_514_p2;
wire   [0:0] tmp_28_fu_526_p3;
wire   [10:0] index_0_2_cast_fu_520_p2;
wire   [10:0] p_3_0_2_fu_534_p3;
wire   [0:0] tmp_31_fu_546_p3;
wire   [9:0] tmp_30_fu_542_p1;
wire  signed [8:0] tmp_12_0_3_fu_562_p1;
wire   [8:0] r_V_0_3_fu_566_p2;
wire  signed [10:0] tmp_3_fu_572_p3;
wire  signed [11:0] data_round_0_3_cast_fu_580_p1;
wire   [11:0] index_0_3_fu_584_p2;
wire   [0:0] tmp_32_fu_596_p3;
wire   [10:0] index_0_3_cast_fu_590_p2;
wire   [10:0] p_3_0_3_fu_604_p3;
wire   [0:0] tmp_35_fu_616_p3;
wire   [9:0] tmp_34_fu_612_p1;
wire  signed [8:0] tmp_12_0_4_fu_632_p1;
wire   [8:0] r_V_0_4_fu_636_p2;
wire  signed [10:0] tmp_4_fu_642_p3;
wire  signed [11:0] data_round_0_4_cast_fu_650_p1;
wire   [11:0] index_0_4_fu_654_p2;
wire   [0:0] tmp_36_fu_666_p3;
wire   [10:0] index_0_4_cast_fu_660_p2;
wire   [10:0] p_3_0_4_fu_674_p3;
wire   [0:0] tmp_38_fu_686_p3;
wire   [9:0] tmp_37_fu_682_p1;
wire   [8:0] r_V_1_fu_702_p2;
wire  signed [10:0] tmp_5_fu_708_p3;
wire  signed [11:0] data_round_1_cast_fu_716_p1;
wire   [11:0] index_s_fu_720_p2;
wire   [0:0] tmp_39_fu_732_p3;
wire   [10:0] index_cast_fu_726_p2;
wire   [10:0] p_3_1_fu_740_p3;
wire   [0:0] tmp_41_fu_752_p3;
wire   [9:0] tmp_40_fu_748_p1;
wire   [8:0] r_V_1_2_fu_768_p2;
wire  signed [10:0] tmp_6_fu_774_p3;
wire  signed [11:0] data_round_1_2_cast_fu_782_p1;
wire   [11:0] index_121_2_fu_786_p2;
wire   [0:0] tmp_42_fu_798_p3;
wire   [10:0] index_121_2_cast_fu_792_p2;
wire   [10:0] p_3_1_2_fu_806_p3;
wire   [0:0] tmp_44_fu_818_p3;
wire   [9:0] tmp_43_fu_814_p1;
wire   [8:0] r_V_1_3_fu_834_p2;
wire  signed [10:0] tmp_7_fu_840_p3;
wire  signed [11:0] data_round_1_3_cast_fu_848_p1;
wire   [11:0] index_121_3_fu_852_p2;
wire   [0:0] tmp_45_fu_864_p3;
wire   [10:0] index_121_3_cast_fu_858_p2;
wire   [10:0] p_3_1_3_fu_872_p3;
wire   [0:0] tmp_47_fu_884_p3;
wire   [9:0] tmp_46_fu_880_p1;
wire   [8:0] r_V_1_4_fu_900_p2;
wire  signed [10:0] tmp_8_fu_906_p3;
wire  signed [11:0] data_round_1_4_cast_fu_914_p1;
wire   [11:0] index_121_4_fu_918_p2;
wire   [0:0] tmp_48_fu_930_p3;
wire   [10:0] index_121_4_cast_fu_924_p2;
wire   [10:0] p_3_1_4_fu_938_p3;
wire   [0:0] tmp_50_fu_950_p3;
wire   [9:0] tmp_49_fu_946_p1;
wire   [8:0] r_V_2_fu_966_p2;
wire  signed [10:0] tmp_9_fu_972_p3;
wire  signed [11:0] data_round_2_cast_fu_980_p1;
wire   [11:0] index_2_fu_984_p2;
wire   [0:0] tmp_51_fu_996_p3;
wire   [10:0] index_2_cast_fu_990_p2;
wire   [10:0] p_3_2_fu_1004_p3;
wire   [0:0] tmp_53_fu_1016_p3;
wire   [9:0] tmp_52_fu_1012_p1;
wire   [8:0] r_V_2_1_fu_1032_p2;
wire  signed [10:0] tmp_s_fu_1038_p3;
wire  signed [11:0] data_round_2_1_cast_fu_1046_p1;
wire   [11:0] index_2_1_fu_1050_p2;
wire   [0:0] tmp_54_fu_1062_p3;
wire   [10:0] index_2_1_cast_fu_1056_p2;
wire   [10:0] p_3_2_1_fu_1070_p3;
wire   [0:0] tmp_56_fu_1082_p3;
wire   [9:0] tmp_55_fu_1078_p1;
wire   [8:0] r_V_2_3_fu_1098_p2;
wire  signed [10:0] tmp_10_fu_1104_p3;
wire  signed [11:0] data_round_2_3_cast_fu_1112_p1;
wire   [11:0] index_2_3_fu_1116_p2;
wire   [0:0] tmp_57_fu_1128_p3;
wire   [10:0] index_2_3_cast_fu_1122_p2;
wire   [10:0] p_3_2_3_fu_1136_p3;
wire   [0:0] tmp_59_fu_1148_p3;
wire   [9:0] tmp_58_fu_1144_p1;
wire   [8:0] r_V_2_4_fu_1164_p2;
wire  signed [10:0] tmp_11_fu_1170_p3;
wire  signed [11:0] data_round_2_4_cast_fu_1178_p1;
wire   [11:0] index_2_4_fu_1182_p2;
wire   [0:0] tmp_60_fu_1194_p3;
wire   [10:0] index_2_4_cast_fu_1188_p2;
wire   [10:0] p_3_2_4_fu_1202_p3;
wire   [0:0] tmp_62_fu_1214_p3;
wire   [9:0] tmp_61_fu_1210_p1;
wire   [8:0] r_V_3_fu_1230_p2;
wire  signed [10:0] tmp_12_fu_1236_p3;
wire  signed [11:0] data_round_3_cast_fu_1244_p1;
wire   [11:0] index_3_fu_1248_p2;
wire   [0:0] tmp_63_fu_1260_p3;
wire   [10:0] index_3_cast_fu_1254_p2;
wire   [10:0] p_3_3_fu_1268_p3;
wire   [0:0] tmp_65_fu_1280_p3;
wire   [9:0] tmp_64_fu_1276_p1;
wire   [8:0] r_V_3_1_fu_1296_p2;
wire  signed [10:0] tmp_13_fu_1302_p3;
wire  signed [11:0] data_round_3_1_cast_fu_1310_p1;
wire   [11:0] index_3_1_fu_1314_p2;
wire   [0:0] tmp_66_fu_1326_p3;
wire   [10:0] index_3_1_cast_fu_1320_p2;
wire   [10:0] p_3_3_1_fu_1334_p3;
wire   [0:0] tmp_68_fu_1346_p3;
wire   [9:0] tmp_67_fu_1342_p1;
wire   [8:0] r_V_3_2_fu_1362_p2;
wire  signed [10:0] tmp_14_fu_1368_p3;
wire  signed [11:0] data_round_3_2_cast_fu_1376_p1;
wire   [11:0] index_3_2_fu_1380_p2;
wire   [0:0] tmp_69_fu_1392_p3;
wire   [10:0] index_3_2_cast_fu_1386_p2;
wire   [10:0] p_3_3_2_fu_1400_p3;
wire   [0:0] tmp_71_fu_1412_p3;
wire   [9:0] tmp_70_fu_1408_p1;
wire   [8:0] r_V_3_4_fu_1428_p2;
wire  signed [10:0] tmp_15_fu_1434_p3;
wire  signed [11:0] data_round_3_4_cast_fu_1442_p1;
wire   [11:0] index_3_4_fu_1446_p2;
wire   [0:0] tmp_72_fu_1458_p3;
wire   [10:0] index_3_4_cast_fu_1452_p2;
wire   [10:0] p_3_3_4_fu_1466_p3;
wire   [0:0] tmp_74_fu_1478_p3;
wire   [9:0] tmp_73_fu_1474_p1;
wire   [8:0] r_V_4_fu_1494_p2;
wire  signed [10:0] tmp_16_fu_1500_p3;
wire  signed [11:0] data_round_4_cast_fu_1508_p1;
wire   [11:0] index_4_fu_1512_p2;
wire   [0:0] tmp_75_fu_1524_p3;
wire   [10:0] index_4_cast_fu_1518_p2;
wire   [10:0] p_3_4_fu_1532_p3;
wire   [0:0] tmp_77_fu_1544_p3;
wire   [9:0] tmp_76_fu_1540_p1;
wire   [8:0] r_V_4_1_fu_1560_p2;
wire  signed [10:0] tmp_17_fu_1566_p3;
wire  signed [11:0] data_round_4_1_cast_fu_1574_p1;
wire   [11:0] index_4_1_fu_1578_p2;
wire   [0:0] tmp_78_fu_1590_p3;
wire   [10:0] index_4_1_cast_fu_1584_p2;
wire   [10:0] p_3_4_1_fu_1598_p3;
wire   [0:0] tmp_80_fu_1610_p3;
wire   [9:0] tmp_79_fu_1606_p1;
wire   [8:0] r_V_4_2_fu_1626_p2;
wire  signed [10:0] tmp_18_fu_1632_p3;
wire  signed [11:0] data_round_4_2_cast_fu_1640_p1;
wire   [11:0] index_4_2_fu_1644_p2;
wire   [0:0] tmp_81_fu_1656_p3;
wire   [10:0] index_4_2_cast_fu_1650_p2;
wire   [10:0] p_3_4_2_fu_1664_p3;
wire   [0:0] tmp_83_fu_1676_p3;
wire   [9:0] tmp_82_fu_1672_p1;
wire   [8:0] r_V_4_3_fu_1692_p2;
wire  signed [10:0] tmp_19_fu_1698_p3;
wire  signed [11:0] data_round_4_3_cast_fu_1706_p1;
wire   [11:0] index_4_3_fu_1710_p2;
wire   [0:0] tmp_84_fu_1722_p3;
wire   [10:0] index_4_3_cast_fu_1716_p2;
wire   [10:0] p_3_4_3_fu_1730_p3;
wire   [0:0] tmp_86_fu_1742_p3;
wire   [9:0] tmp_85_fu_1738_p1;
wire   [17:0] tmp5_fu_1838_p2;
wire   [17:0] tmp1_fu_1850_p2;
wire   [17:0] tmp6_fu_1862_p2;
wire   [17:0] tmp11_fu_1874_p2;
wire   [17:0] tmp14_fu_1886_p2;
wire   [17:0] tmp3_fu_1898_p2;
wire   [17:0] tmp8_fu_1907_p2;
wire   [17:0] tmp2_fu_1916_p2;
wire   [17:0] tmp10_fu_1925_p2;
wire   [17:0] tmp13_fu_1934_p2;
wire   [17:0] p_Val2_7_0_4_fu_1902_p2;
wire   [11:0] tmp_20_fu_1943_p4;
wire   [5:0] tmp_88_fu_1965_p1;
wire   [9:0] p_Result_2_fu_1969_p3;
wire  signed [12:0] p_Result_cast_fu_1953_p1;
wire   [0:0] tmp_22_fu_1977_p2;
wire   [12:0] ret_V_1_fu_1983_p2;
wire   [0:0] tmp_87_fu_1957_p3;
wire   [12:0] p_1_fu_1989_p3;
wire   [12:0] p_4_fu_1997_p3;
wire   [17:0] p_Val2_7_1_4_fu_1911_p2;
wire   [11:0] tmp_23_fu_2017_p4;
wire   [5:0] tmp_94_fu_2039_p1;
wire   [9:0] p_Result_2_1_fu_2043_p3;
wire  signed [12:0] p_Result_cast_12_fu_2027_p1;
wire   [0:0] tmp_10_1_fu_2051_p2;
wire   [12:0] ret_V_1_1_fu_2057_p2;
wire   [0:0] tmp_93_fu_2031_p3;
wire   [12:0] p_1_1_fu_2063_p3;
wire   [12:0] p_4_1_fu_2071_p3;
wire   [17:0] p_Val2_7_2_4_fu_1920_p2;
wire   [11:0] tmp_25_fu_2091_p4;
wire   [5:0] tmp_100_fu_2113_p1;
wire   [9:0] p_Result_2_2_fu_2117_p3;
wire  signed [12:0] p_Result_5_cast_fu_2101_p1;
wire   [0:0] tmp_10_2_fu_2125_p2;
wire   [12:0] ret_V_1_2_fu_2131_p2;
wire   [0:0] tmp_99_fu_2105_p3;
wire   [12:0] p_1_2_fu_2137_p3;
wire   [12:0] p_4_2_fu_2145_p3;
wire   [17:0] p_Val2_7_3_4_fu_1929_p2;
wire   [11:0] tmp_27_fu_2165_p4;
wire   [5:0] tmp_106_fu_2187_p1;
wire   [9:0] p_Result_2_3_fu_2191_p3;
wire  signed [12:0] p_Result_3_cast_fu_2175_p1;
wire   [0:0] tmp_10_3_fu_2199_p2;
wire   [12:0] ret_V_1_3_fu_2205_p2;
wire   [0:0] tmp_105_fu_2179_p3;
wire   [12:0] p_1_3_fu_2211_p3;
wire   [12:0] p_4_3_fu_2219_p3;
wire   [17:0] p_Val2_7_4_4_fu_1938_p2;
wire   [11:0] tmp_29_fu_2239_p4;
wire   [5:0] tmp_112_fu_2261_p1;
wire   [9:0] p_Result_2_4_fu_2265_p3;
wire  signed [12:0] p_Result_4_cast_fu_2249_p1;
wire   [0:0] tmp_10_4_fu_2273_p2;
wire   [12:0] ret_V_1_4_fu_2279_p2;
wire   [0:0] tmp_111_fu_2253_p3;
wire   [12:0] p_1_4_fu_2285_p3;
wire   [12:0] p_4_4_fu_2293_p3;
wire   [11:0] p_2_fu_2313_p3;
wire   [1:0] tmp_92_fu_2323_p4;
wire   [0:0] icmp_fu_2333_p2;
wire   [9:0] tmp_91_fu_2319_p1;
wire   [9:0] exp_res_index_1_fu_2339_p3;
wire   [11:0] p_2_1_fu_2352_p3;
wire   [1:0] tmp_98_fu_2362_p4;
wire   [0:0] icmp1_fu_2372_p2;
wire   [9:0] tmp_97_fu_2358_p1;
wire   [9:0] exp_res_index_1_1_fu_2378_p3;
wire   [11:0] p_2_2_fu_2391_p3;
wire   [1:0] tmp_104_fu_2401_p4;
wire   [0:0] icmp2_fu_2411_p2;
wire   [9:0] tmp_103_fu_2397_p1;
wire   [9:0] exp_res_index_1_2_fu_2417_p3;
wire   [11:0] p_2_3_fu_2430_p3;
wire   [1:0] tmp_110_fu_2440_p4;
wire   [0:0] icmp3_fu_2450_p2;
wire   [9:0] tmp_109_fu_2436_p1;
wire   [9:0] exp_res_index_1_3_fu_2456_p3;
wire   [11:0] p_2_4_fu_2469_p3;
wire   [1:0] tmp_116_fu_2479_p4;
wire   [0:0] icmp4_fu_2489_p2;
wire   [9:0] tmp_115_fu_2475_p1;
wire   [9:0] exp_res_index_1_4_fu_2495_p3;
reg   [0:0] ap_NS_fsm;
reg    ap_idle_pp0_0to4;
reg    ap_reset_idle_pp0;
wire    ap_enable_pp0;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
end

softmax_exp_table1 #(
    .DataWidth( 18 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
exp_table1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(exp_table1_address0),
    .ce0(exp_table1_ce0),
    .q0(exp_table1_q0),
    .address1(exp_table1_address1),
    .ce1(exp_table1_ce1),
    .q1(exp_table1_q1),
    .address2(exp_table1_address2),
    .ce2(exp_table1_ce2),
    .q2(exp_table1_q2),
    .address3(exp_table1_address3),
    .ce3(exp_table1_ce3),
    .q3(exp_table1_q3),
    .address4(exp_table1_address4),
    .ce4(exp_table1_ce4),
    .q4(exp_table1_q4),
    .address5(exp_table1_address5),
    .ce5(exp_table1_ce5),
    .q5(exp_table1_q5),
    .address6(exp_table1_address6),
    .ce6(exp_table1_ce6),
    .q6(exp_table1_q6),
    .address7(exp_table1_address7),
    .ce7(exp_table1_ce7),
    .q7(exp_table1_q7),
    .address8(exp_table1_address8),
    .ce8(exp_table1_ce8),
    .q8(exp_table1_q8),
    .address9(exp_table1_address9),
    .ce9(exp_table1_ce9),
    .q9(exp_table1_q9),
    .address10(exp_table1_address10),
    .ce10(exp_table1_ce10),
    .q10(exp_table1_q10),
    .address11(exp_table1_address11),
    .ce11(exp_table1_ce11),
    .q11(exp_table1_q11),
    .address12(exp_table1_address12),
    .ce12(exp_table1_ce12),
    .q12(exp_table1_q12),
    .address13(exp_table1_address13),
    .ce13(exp_table1_ce13),
    .q13(exp_table1_q13),
    .address14(exp_table1_address14),
    .ce14(exp_table1_ce14),
    .q14(exp_table1_q14),
    .address15(exp_table1_address15),
    .ce15(exp_table1_ce15),
    .q15(exp_table1_q15),
    .address16(exp_table1_address16),
    .ce16(exp_table1_ce16),
    .q16(exp_table1_q16),
    .address17(exp_table1_address17),
    .ce17(exp_table1_ce17),
    .q17(exp_table1_q17),
    .address18(exp_table1_address18),
    .ce18(exp_table1_ce18),
    .q18(exp_table1_q18),
    .address19(exp_table1_address19),
    .ce19(exp_table1_ce19),
    .q19(exp_table1_q19)
);

softmax_invert_tadEe #(
    .DataWidth( 15 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
invert_table2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(invert_table2_address0),
    .ce0(invert_table2_ce0),
    .q0(invert_table2_q0),
    .address1(invert_table2_address1),
    .ce1(invert_table2_ce1),
    .q1(invert_table2_q1),
    .address2(invert_table2_address2),
    .ce2(invert_table2_ce2),
    .q2(invert_table2_q2),
    .address3(invert_table2_address3),
    .ce3(invert_table2_ce3),
    .q3(invert_table2_q3),
    .address4(invert_table2_address4),
    .ce4(invert_table2_ce4),
    .q4(invert_table2_q4)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        exp_table1_load_10_reg_2823 <= exp_table1_q10;
        exp_table1_load_13_reg_2833 <= exp_table1_q13;
        exp_table1_load_14_reg_2838 <= exp_table1_q14;
        exp_table1_load_18_reg_2848 <= exp_table1_q18;
        exp_table1_load_19_reg_2853 <= exp_table1_q19;
        exp_table1_load_1_reg_2788 <= exp_table1_q1;
        exp_table1_load_2_reg_2793 <= exp_table1_q2;
        exp_table1_load_5_reg_2803 <= exp_table1_q5;
        exp_table1_load_6_reg_2808 <= exp_table1_q6;
        exp_table1_load_9_reg_2818 <= exp_table1_q9;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        index_1_0_1_reg_2588 <= index_1_0_1_fu_484_p3;
        index_1_0_2_reg_2593 <= index_1_0_2_fu_554_p3;
        index_1_0_3_reg_2598 <= index_1_0_3_fu_624_p3;
        index_1_0_4_reg_2603 <= index_1_0_4_fu_694_p3;
        index_1_1_2_reg_2613 <= index_1_1_2_fu_826_p3;
        index_1_1_3_reg_2618 <= index_1_1_3_fu_892_p3;
        index_1_1_4_reg_2623 <= index_1_1_4_fu_958_p3;
        index_1_1_reg_2608 <= index_1_1_fu_760_p3;
        index_1_2_1_reg_2633 <= index_1_2_1_fu_1090_p3;
        index_1_2_3_reg_2638 <= index_1_2_3_fu_1156_p3;
        index_1_2_4_reg_2643 <= index_1_2_4_fu_1222_p3;
        index_1_2_reg_2628 <= index_1_2_fu_1024_p3;
        index_1_3_1_reg_2653 <= index_1_3_1_fu_1354_p3;
        index_1_3_2_reg_2658 <= index_1_3_2_fu_1420_p3;
        index_1_3_4_reg_2663 <= index_1_3_4_fu_1486_p3;
        index_1_3_reg_2648 <= index_1_3_fu_1288_p3;
        index_1_4_1_reg_2673 <= index_1_4_1_fu_1618_p3;
        index_1_4_2_reg_2678 <= index_1_4_2_fu_1684_p3;
        index_1_4_3_reg_2683 <= index_1_4_3_fu_1750_p3;
        index_1_4_reg_2668 <= index_1_4_fu_1552_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp12_reg_2843 <= tmp12_fu_1880_p2;
        tmp15_reg_2858 <= tmp15_fu_1892_p2;
        tmp4_reg_2798 <= tmp4_fu_1844_p2;
        tmp7_reg_2828 <= tmp7_fu_1868_p2;
        tmp9_reg_2813 <= tmp9_fu_1856_p2;
        tmp_101_reg_2883 <= tmp_101_fu_2153_p1;
        tmp_102_reg_2888 <= p_4_2_fu_2145_p3[32'd12];
        tmp_107_reg_2893 <= tmp_107_fu_2227_p1;
        tmp_108_reg_2898 <= p_4_3_fu_2219_p3[32'd12];
        tmp_113_reg_2903 <= tmp_113_fu_2301_p1;
        tmp_114_reg_2908 <= p_4_4_fu_2293_p3[32'd12];
        tmp_89_reg_2863 <= tmp_89_fu_2005_p1;
        tmp_90_reg_2868 <= p_4_fu_1997_p3[32'd12];
        tmp_95_reg_2873 <= tmp_95_fu_2079_p1;
        tmp_96_reg_2878 <= p_4_1_fu_2071_p3[32'd12];
    end
end

always @ (*) begin
    if ((((ap_start == 1'b0) & (1'b0 == ap_block_pp0_stage0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0_0to4 = 1'b1;
    end else begin
        ap_idle_pp0_0to4 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0_0to4 == 1'b1))) begin
        ap_reset_idle_pp0 = 1'b1;
    end else begin
        ap_reset_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        exp_table1_ce0 = 1'b1;
    end else begin
        exp_table1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        exp_table1_ce1 = 1'b1;
    end else begin
        exp_table1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        exp_table1_ce10 = 1'b1;
    end else begin
        exp_table1_ce10 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        exp_table1_ce11 = 1'b1;
    end else begin
        exp_table1_ce11 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        exp_table1_ce12 = 1'b1;
    end else begin
        exp_table1_ce12 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        exp_table1_ce13 = 1'b1;
    end else begin
        exp_table1_ce13 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        exp_table1_ce14 = 1'b1;
    end else begin
        exp_table1_ce14 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        exp_table1_ce15 = 1'b1;
    end else begin
        exp_table1_ce15 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        exp_table1_ce16 = 1'b1;
    end else begin
        exp_table1_ce16 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        exp_table1_ce17 = 1'b1;
    end else begin
        exp_table1_ce17 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        exp_table1_ce18 = 1'b1;
    end else begin
        exp_table1_ce18 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        exp_table1_ce19 = 1'b1;
    end else begin
        exp_table1_ce19 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        exp_table1_ce2 = 1'b1;
    end else begin
        exp_table1_ce2 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        exp_table1_ce3 = 1'b1;
    end else begin
        exp_table1_ce3 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        exp_table1_ce4 = 1'b1;
    end else begin
        exp_table1_ce4 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        exp_table1_ce5 = 1'b1;
    end else begin
        exp_table1_ce5 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        exp_table1_ce6 = 1'b1;
    end else begin
        exp_table1_ce6 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        exp_table1_ce7 = 1'b1;
    end else begin
        exp_table1_ce7 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        exp_table1_ce8 = 1'b1;
    end else begin
        exp_table1_ce8 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        exp_table1_ce9 = 1'b1;
    end else begin
        exp_table1_ce9 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        invert_table2_ce0 = 1'b1;
    end else begin
        invert_table2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        invert_table2_ce1 = 1'b1;
    end else begin
        invert_table2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        invert_table2_ce2 = 1'b1;
    end else begin
        invert_table2_ce2 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        invert_table2_ce3 = 1'b1;
    end else begin
        invert_table2_ce3 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        invert_table2_ce4 = 1'b1;
    end else begin
        invert_table2_ce4 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_start == 1'b0) & (ap_start == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((1'b0 == ap_ce) | ((ap_start == 1'b0) & (ap_start == 1'b1)));
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = (ap_start == 1'b0);
end

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start;

assign ap_return_0 = {{invert_table2_q0[13:6]}};

assign ap_return_1 = {{invert_table2_q1[13:6]}};

assign ap_return_2 = {{invert_table2_q2[13:6]}};

assign ap_return_3 = {{invert_table2_q3[13:6]}};

assign ap_return_4 = {{invert_table2_q4[13:6]}};

assign data_round_0_1_cast_fu_440_p1 = tmp_1_fu_432_p3;

assign data_round_0_2_cast_fu_510_p1 = tmp_2_fu_502_p3;

assign data_round_0_3_cast_fu_580_p1 = tmp_3_fu_572_p3;

assign data_round_0_4_cast_fu_650_p1 = tmp_4_fu_642_p3;

assign data_round_1_2_cast_fu_782_p1 = tmp_6_fu_774_p3;

assign data_round_1_3_cast_fu_848_p1 = tmp_7_fu_840_p3;

assign data_round_1_4_cast_fu_914_p1 = tmp_8_fu_906_p3;

assign data_round_1_cast_fu_716_p1 = tmp_5_fu_708_p3;

assign data_round_2_1_cast_fu_1046_p1 = tmp_s_fu_1038_p3;

assign data_round_2_3_cast_fu_1112_p1 = tmp_10_fu_1104_p3;

assign data_round_2_4_cast_fu_1178_p1 = tmp_11_fu_1170_p3;

assign data_round_2_cast_fu_980_p1 = tmp_9_fu_972_p3;

assign data_round_3_1_cast_fu_1310_p1 = tmp_13_fu_1302_p3;

assign data_round_3_2_cast_fu_1376_p1 = tmp_14_fu_1368_p3;

assign data_round_3_4_cast_fu_1442_p1 = tmp_15_fu_1434_p3;

assign data_round_3_cast_fu_1244_p1 = tmp_12_fu_1236_p3;

assign data_round_4_1_cast_fu_1574_p1 = tmp_17_fu_1566_p3;

assign data_round_4_2_cast_fu_1640_p1 = tmp_18_fu_1632_p3;

assign data_round_4_3_cast_fu_1706_p1 = tmp_19_fu_1698_p3;

assign data_round_4_cast_fu_1508_p1 = tmp_16_fu_1500_p3;

assign exp_res_index_1_1_fu_2378_p3 = ((icmp1_fu_2372_p2[0:0] === 1'b1) ? 10'd1023 : tmp_97_fu_2358_p1);

assign exp_res_index_1_2_fu_2417_p3 = ((icmp2_fu_2411_p2[0:0] === 1'b1) ? 10'd1023 : tmp_103_fu_2397_p1);

assign exp_res_index_1_3_fu_2456_p3 = ((icmp3_fu_2450_p2[0:0] === 1'b1) ? 10'd1023 : tmp_109_fu_2436_p1);

assign exp_res_index_1_4_fu_2495_p3 = ((icmp4_fu_2489_p2[0:0] === 1'b1) ? 10'd1023 : tmp_115_fu_2475_p1);

assign exp_res_index_1_fu_2339_p3 = ((icmp_fu_2333_p2[0:0] === 1'b1) ? 10'd1023 : tmp_91_fu_2319_p1);

assign exp_table1_address0 = tmp_25_0_1_fu_1758_p1;

assign exp_table1_address1 = tmp_25_0_2_fu_1762_p1;

assign exp_table1_address10 = tmp_25_2_3_fu_1798_p1;

assign exp_table1_address11 = tmp_25_2_4_fu_1802_p1;

assign exp_table1_address12 = tmp_25_3_fu_1806_p1;

assign exp_table1_address13 = tmp_25_3_1_fu_1810_p1;

assign exp_table1_address14 = tmp_25_3_2_fu_1814_p1;

assign exp_table1_address15 = tmp_25_3_4_fu_1818_p1;

assign exp_table1_address16 = tmp_25_4_fu_1822_p1;

assign exp_table1_address17 = tmp_25_4_1_fu_1826_p1;

assign exp_table1_address18 = tmp_25_4_2_fu_1830_p1;

assign exp_table1_address19 = tmp_25_4_3_fu_1834_p1;

assign exp_table1_address2 = tmp_25_0_3_fu_1766_p1;

assign exp_table1_address3 = tmp_25_0_4_fu_1770_p1;

assign exp_table1_address4 = tmp_25_1_fu_1774_p1;

assign exp_table1_address5 = tmp_25_1_2_fu_1778_p1;

assign exp_table1_address6 = tmp_25_1_3_fu_1782_p1;

assign exp_table1_address7 = tmp_25_1_4_fu_1786_p1;

assign exp_table1_address8 = tmp_25_2_fu_1790_p1;

assign exp_table1_address9 = tmp_25_2_1_fu_1794_p1;

assign icmp1_fu_2372_p2 = ((tmp_98_fu_2362_p4 != 2'd0) ? 1'b1 : 1'b0);

assign icmp2_fu_2411_p2 = ((tmp_104_fu_2401_p4 != 2'd0) ? 1'b1 : 1'b0);

assign icmp3_fu_2450_p2 = ((tmp_110_fu_2440_p4 != 2'd0) ? 1'b1 : 1'b0);

assign icmp4_fu_2489_p2 = ((tmp_116_fu_2479_p4 != 2'd0) ? 1'b1 : 1'b0);

assign icmp_fu_2333_p2 = ((tmp_92_fu_2323_p4 != 2'd0) ? 1'b1 : 1'b0);

assign index_0_1_cast_fu_450_p2 = ($signed(11'd512) + $signed(tmp_1_fu_432_p3));

assign index_0_1_fu_444_p2 = ($signed(12'd512) + $signed(data_round_0_1_cast_fu_440_p1));

assign index_0_2_cast_fu_520_p2 = ($signed(11'd512) + $signed(tmp_2_fu_502_p3));

assign index_0_2_fu_514_p2 = ($signed(12'd512) + $signed(data_round_0_2_cast_fu_510_p1));

assign index_0_3_cast_fu_590_p2 = ($signed(11'd512) + $signed(tmp_3_fu_572_p3));

assign index_0_3_fu_584_p2 = ($signed(12'd512) + $signed(data_round_0_3_cast_fu_580_p1));

assign index_0_4_cast_fu_660_p2 = ($signed(11'd512) + $signed(tmp_4_fu_642_p3));

assign index_0_4_fu_654_p2 = ($signed(12'd512) + $signed(data_round_0_4_cast_fu_650_p1));

assign index_121_2_cast_fu_792_p2 = ($signed(11'd512) + $signed(tmp_6_fu_774_p3));

assign index_121_2_fu_786_p2 = ($signed(12'd512) + $signed(data_round_1_2_cast_fu_782_p1));

assign index_121_3_cast_fu_858_p2 = ($signed(11'd512) + $signed(tmp_7_fu_840_p3));

assign index_121_3_fu_852_p2 = ($signed(12'd512) + $signed(data_round_1_3_cast_fu_848_p1));

assign index_121_4_cast_fu_924_p2 = ($signed(11'd512) + $signed(tmp_8_fu_906_p3));

assign index_121_4_fu_918_p2 = ($signed(12'd512) + $signed(data_round_1_4_cast_fu_914_p1));

assign index_1_0_1_fu_484_p3 = ((tmp_26_fu_476_p3[0:0] === 1'b1) ? 10'd1023 : tmp_24_fu_472_p1);

assign index_1_0_2_fu_554_p3 = ((tmp_31_fu_546_p3[0:0] === 1'b1) ? 10'd1023 : tmp_30_fu_542_p1);

assign index_1_0_3_fu_624_p3 = ((tmp_35_fu_616_p3[0:0] === 1'b1) ? 10'd1023 : tmp_34_fu_612_p1);

assign index_1_0_4_fu_694_p3 = ((tmp_38_fu_686_p3[0:0] === 1'b1) ? 10'd1023 : tmp_37_fu_682_p1);

assign index_1_1_2_fu_826_p3 = ((tmp_44_fu_818_p3[0:0] === 1'b1) ? 10'd1023 : tmp_43_fu_814_p1);

assign index_1_1_3_fu_892_p3 = ((tmp_47_fu_884_p3[0:0] === 1'b1) ? 10'd1023 : tmp_46_fu_880_p1);

assign index_1_1_4_fu_958_p3 = ((tmp_50_fu_950_p3[0:0] === 1'b1) ? 10'd1023 : tmp_49_fu_946_p1);

assign index_1_1_fu_760_p3 = ((tmp_41_fu_752_p3[0:0] === 1'b1) ? 10'd1023 : tmp_40_fu_748_p1);

assign index_1_2_1_fu_1090_p3 = ((tmp_56_fu_1082_p3[0:0] === 1'b1) ? 10'd1023 : tmp_55_fu_1078_p1);

assign index_1_2_3_fu_1156_p3 = ((tmp_59_fu_1148_p3[0:0] === 1'b1) ? 10'd1023 : tmp_58_fu_1144_p1);

assign index_1_2_4_fu_1222_p3 = ((tmp_62_fu_1214_p3[0:0] === 1'b1) ? 10'd1023 : tmp_61_fu_1210_p1);

assign index_1_2_fu_1024_p3 = ((tmp_53_fu_1016_p3[0:0] === 1'b1) ? 10'd1023 : tmp_52_fu_1012_p1);

assign index_1_3_1_fu_1354_p3 = ((tmp_68_fu_1346_p3[0:0] === 1'b1) ? 10'd1023 : tmp_67_fu_1342_p1);

assign index_1_3_2_fu_1420_p3 = ((tmp_71_fu_1412_p3[0:0] === 1'b1) ? 10'd1023 : tmp_70_fu_1408_p1);

assign index_1_3_4_fu_1486_p3 = ((tmp_74_fu_1478_p3[0:0] === 1'b1) ? 10'd1023 : tmp_73_fu_1474_p1);

assign index_1_3_fu_1288_p3 = ((tmp_65_fu_1280_p3[0:0] === 1'b1) ? 10'd1023 : tmp_64_fu_1276_p1);

assign index_1_4_1_fu_1618_p3 = ((tmp_80_fu_1610_p3[0:0] === 1'b1) ? 10'd1023 : tmp_79_fu_1606_p1);

assign index_1_4_2_fu_1684_p3 = ((tmp_83_fu_1676_p3[0:0] === 1'b1) ? 10'd1023 : tmp_82_fu_1672_p1);

assign index_1_4_3_fu_1750_p3 = ((tmp_86_fu_1742_p3[0:0] === 1'b1) ? 10'd1023 : tmp_85_fu_1738_p1);

assign index_1_4_fu_1552_p3 = ((tmp_77_fu_1544_p3[0:0] === 1'b1) ? 10'd1023 : tmp_76_fu_1540_p1);

assign index_2_1_cast_fu_1056_p2 = ($signed(11'd512) + $signed(tmp_s_fu_1038_p3));

assign index_2_1_fu_1050_p2 = ($signed(12'd512) + $signed(data_round_2_1_cast_fu_1046_p1));

assign index_2_3_cast_fu_1122_p2 = ($signed(11'd512) + $signed(tmp_10_fu_1104_p3));

assign index_2_3_fu_1116_p2 = ($signed(12'd512) + $signed(data_round_2_3_cast_fu_1112_p1));

assign index_2_4_cast_fu_1188_p2 = ($signed(11'd512) + $signed(tmp_11_fu_1170_p3));

assign index_2_4_fu_1182_p2 = ($signed(12'd512) + $signed(data_round_2_4_cast_fu_1178_p1));

assign index_2_cast_fu_990_p2 = ($signed(11'd512) + $signed(tmp_9_fu_972_p3));

assign index_2_fu_984_p2 = ($signed(12'd512) + $signed(data_round_2_cast_fu_980_p1));

assign index_3_1_cast_fu_1320_p2 = ($signed(11'd512) + $signed(tmp_13_fu_1302_p3));

assign index_3_1_fu_1314_p2 = ($signed(12'd512) + $signed(data_round_3_1_cast_fu_1310_p1));

assign index_3_2_cast_fu_1386_p2 = ($signed(11'd512) + $signed(tmp_14_fu_1368_p3));

assign index_3_2_fu_1380_p2 = ($signed(12'd512) + $signed(data_round_3_2_cast_fu_1376_p1));

assign index_3_4_cast_fu_1452_p2 = ($signed(11'd512) + $signed(tmp_15_fu_1434_p3));

assign index_3_4_fu_1446_p2 = ($signed(12'd512) + $signed(data_round_3_4_cast_fu_1442_p1));

assign index_3_cast_fu_1254_p2 = ($signed(11'd512) + $signed(tmp_12_fu_1236_p3));

assign index_3_fu_1248_p2 = ($signed(12'd512) + $signed(data_round_3_cast_fu_1244_p1));

assign index_4_1_cast_fu_1584_p2 = ($signed(11'd512) + $signed(tmp_17_fu_1566_p3));

assign index_4_1_fu_1578_p2 = ($signed(12'd512) + $signed(data_round_4_1_cast_fu_1574_p1));

assign index_4_2_cast_fu_1650_p2 = ($signed(11'd512) + $signed(tmp_18_fu_1632_p3));

assign index_4_2_fu_1644_p2 = ($signed(12'd512) + $signed(data_round_4_2_cast_fu_1640_p1));

assign index_4_3_cast_fu_1716_p2 = ($signed(11'd512) + $signed(tmp_19_fu_1698_p3));

assign index_4_3_fu_1710_p2 = ($signed(12'd512) + $signed(data_round_4_3_cast_fu_1706_p1));

assign index_4_cast_fu_1518_p2 = ($signed(11'd512) + $signed(tmp_16_fu_1500_p3));

assign index_4_fu_1512_p2 = ($signed(12'd512) + $signed(data_round_4_cast_fu_1508_p1));

assign index_cast_fu_726_p2 = ($signed(11'd512) + $signed(tmp_5_fu_708_p3));

assign index_s_fu_720_p2 = ($signed(12'd512) + $signed(data_round_1_cast_fu_716_p1));

assign invert_table2_address0 = tmp_33_fu_2347_p1;

assign invert_table2_address1 = tmp_19_1_fu_2386_p1;

assign invert_table2_address2 = tmp_19_2_fu_2425_p1;

assign invert_table2_address3 = tmp_19_3_fu_2464_p1;

assign invert_table2_address4 = tmp_19_4_fu_2503_p1;

assign p_1_1_fu_2063_p3 = ((tmp_10_1_fu_2051_p2[0:0] === 1'b1) ? p_Result_cast_12_fu_2027_p1 : ret_V_1_1_fu_2057_p2);

assign p_1_2_fu_2137_p3 = ((tmp_10_2_fu_2125_p2[0:0] === 1'b1) ? p_Result_5_cast_fu_2101_p1 : ret_V_1_2_fu_2131_p2);

assign p_1_3_fu_2211_p3 = ((tmp_10_3_fu_2199_p2[0:0] === 1'b1) ? p_Result_3_cast_fu_2175_p1 : ret_V_1_3_fu_2205_p2);

assign p_1_4_fu_2285_p3 = ((tmp_10_4_fu_2273_p2[0:0] === 1'b1) ? p_Result_4_cast_fu_2249_p1 : ret_V_1_4_fu_2279_p2);

assign p_1_fu_1989_p3 = ((tmp_22_fu_1977_p2[0:0] === 1'b1) ? p_Result_cast_fu_1953_p1 : ret_V_1_fu_1983_p2);

assign p_2_1_fu_2352_p3 = ((tmp_96_reg_2878[0:0] === 1'b1) ? 12'd0 : tmp_95_reg_2873);

assign p_2_2_fu_2391_p3 = ((tmp_102_reg_2888[0:0] === 1'b1) ? 12'd0 : tmp_101_reg_2883);

assign p_2_3_fu_2430_p3 = ((tmp_108_reg_2898[0:0] === 1'b1) ? 12'd0 : tmp_107_reg_2893);

assign p_2_4_fu_2469_p3 = ((tmp_114_reg_2908[0:0] === 1'b1) ? 12'd0 : tmp_113_reg_2903);

assign p_2_fu_2313_p3 = ((tmp_90_reg_2868[0:0] === 1'b1) ? 12'd0 : tmp_89_reg_2863);

assign p_3_0_1_fu_464_p3 = ((tmp_21_fu_456_p3[0:0] === 1'b1) ? 11'd0 : index_0_1_cast_fu_450_p2);

assign p_3_0_2_fu_534_p3 = ((tmp_28_fu_526_p3[0:0] === 1'b1) ? 11'd0 : index_0_2_cast_fu_520_p2);

assign p_3_0_3_fu_604_p3 = ((tmp_32_fu_596_p3[0:0] === 1'b1) ? 11'd0 : index_0_3_cast_fu_590_p2);

assign p_3_0_4_fu_674_p3 = ((tmp_36_fu_666_p3[0:0] === 1'b1) ? 11'd0 : index_0_4_cast_fu_660_p2);

assign p_3_1_2_fu_806_p3 = ((tmp_42_fu_798_p3[0:0] === 1'b1) ? 11'd0 : index_121_2_cast_fu_792_p2);

assign p_3_1_3_fu_872_p3 = ((tmp_45_fu_864_p3[0:0] === 1'b1) ? 11'd0 : index_121_3_cast_fu_858_p2);

assign p_3_1_4_fu_938_p3 = ((tmp_48_fu_930_p3[0:0] === 1'b1) ? 11'd0 : index_121_4_cast_fu_924_p2);

assign p_3_1_fu_740_p3 = ((tmp_39_fu_732_p3[0:0] === 1'b1) ? 11'd0 : index_cast_fu_726_p2);

assign p_3_2_1_fu_1070_p3 = ((tmp_54_fu_1062_p3[0:0] === 1'b1) ? 11'd0 : index_2_1_cast_fu_1056_p2);

assign p_3_2_3_fu_1136_p3 = ((tmp_57_fu_1128_p3[0:0] === 1'b1) ? 11'd0 : index_2_3_cast_fu_1122_p2);

assign p_3_2_4_fu_1202_p3 = ((tmp_60_fu_1194_p3[0:0] === 1'b1) ? 11'd0 : index_2_4_cast_fu_1188_p2);

assign p_3_2_fu_1004_p3 = ((tmp_51_fu_996_p3[0:0] === 1'b1) ? 11'd0 : index_2_cast_fu_990_p2);

assign p_3_3_1_fu_1334_p3 = ((tmp_66_fu_1326_p3[0:0] === 1'b1) ? 11'd0 : index_3_1_cast_fu_1320_p2);

assign p_3_3_2_fu_1400_p3 = ((tmp_69_fu_1392_p3[0:0] === 1'b1) ? 11'd0 : index_3_2_cast_fu_1386_p2);

assign p_3_3_4_fu_1466_p3 = ((tmp_72_fu_1458_p3[0:0] === 1'b1) ? 11'd0 : index_3_4_cast_fu_1452_p2);

assign p_3_3_fu_1268_p3 = ((tmp_63_fu_1260_p3[0:0] === 1'b1) ? 11'd0 : index_3_cast_fu_1254_p2);

assign p_3_4_1_fu_1598_p3 = ((tmp_78_fu_1590_p3[0:0] === 1'b1) ? 11'd0 : index_4_1_cast_fu_1584_p2);

assign p_3_4_2_fu_1664_p3 = ((tmp_81_fu_1656_p3[0:0] === 1'b1) ? 11'd0 : index_4_2_cast_fu_1650_p2);

assign p_3_4_3_fu_1730_p3 = ((tmp_84_fu_1722_p3[0:0] === 1'b1) ? 11'd0 : index_4_3_cast_fu_1716_p2);

assign p_3_4_fu_1532_p3 = ((tmp_75_fu_1524_p3[0:0] === 1'b1) ? 11'd0 : index_4_cast_fu_1518_p2);

assign p_4_1_fu_2071_p3 = ((tmp_93_fu_2031_p3[0:0] === 1'b1) ? p_1_1_fu_2063_p3 : p_Result_cast_12_fu_2027_p1);

assign p_4_2_fu_2145_p3 = ((tmp_99_fu_2105_p3[0:0] === 1'b1) ? p_1_2_fu_2137_p3 : p_Result_5_cast_fu_2101_p1);

assign p_4_3_fu_2219_p3 = ((tmp_105_fu_2179_p3[0:0] === 1'b1) ? p_1_3_fu_2211_p3 : p_Result_3_cast_fu_2175_p1);

assign p_4_4_fu_2293_p3 = ((tmp_111_fu_2253_p3[0:0] === 1'b1) ? p_1_4_fu_2285_p3 : p_Result_4_cast_fu_2249_p1);

assign p_4_fu_1997_p3 = ((tmp_87_fu_1957_p3[0:0] === 1'b1) ? p_1_fu_1989_p3 : p_Result_cast_fu_1953_p1);

assign p_Result_2_1_fu_2043_p3 = {{tmp_94_fu_2039_p1}, {4'd0}};

assign p_Result_2_2_fu_2117_p3 = {{tmp_100_fu_2113_p1}, {4'd0}};

assign p_Result_2_3_fu_2191_p3 = {{tmp_106_fu_2187_p1}, {4'd0}};

assign p_Result_2_4_fu_2265_p3 = {{tmp_112_fu_2261_p1}, {4'd0}};

assign p_Result_2_fu_1969_p3 = {{tmp_88_fu_1965_p1}, {4'd0}};

assign p_Result_3_cast_fu_2175_p1 = $signed(tmp_27_fu_2165_p4);

assign p_Result_4_cast_fu_2249_p1 = $signed(tmp_29_fu_2239_p4);

assign p_Result_5_cast_fu_2101_p1 = $signed(tmp_25_fu_2091_p4);

assign p_Result_cast_12_fu_2027_p1 = $signed(tmp_23_fu_2017_p4);

assign p_Result_cast_fu_1953_p1 = $signed(tmp_20_fu_1943_p4);

assign p_Val2_7_0_4_fu_1902_p2 = (tmp4_reg_2798 + tmp3_fu_1898_p2);

assign p_Val2_7_1_4_fu_1911_p2 = (tmp9_reg_2813 + tmp8_fu_1907_p2);

assign p_Val2_7_2_4_fu_1920_p2 = (tmp7_reg_2828 + tmp2_fu_1916_p2);

assign p_Val2_7_3_4_fu_1929_p2 = (tmp12_reg_2843 + tmp10_fu_1925_p2);

assign p_Val2_7_4_4_fu_1938_p2 = (tmp15_reg_2858 + tmp13_fu_1934_p2);

assign r_V_0_1_fu_426_p2 = ($signed(tmp_12_0_1_fu_418_p1) - $signed(tmp_13_0_1_fu_422_p1));

assign r_V_0_2_fu_496_p2 = ($signed(tmp_12_0_2_fu_492_p1) - $signed(tmp_13_0_1_fu_422_p1));

assign r_V_0_3_fu_566_p2 = ($signed(tmp_12_0_3_fu_562_p1) - $signed(tmp_13_0_1_fu_422_p1));

assign r_V_0_4_fu_636_p2 = ($signed(tmp_12_0_4_fu_632_p1) - $signed(tmp_13_0_1_fu_422_p1));

assign r_V_1_2_fu_768_p2 = ($signed(tmp_12_0_2_fu_492_p1) - $signed(tmp_12_0_1_fu_418_p1));

assign r_V_1_3_fu_834_p2 = ($signed(tmp_12_0_3_fu_562_p1) - $signed(tmp_12_0_1_fu_418_p1));

assign r_V_1_4_fu_900_p2 = ($signed(tmp_12_0_4_fu_632_p1) - $signed(tmp_12_0_1_fu_418_p1));

assign r_V_1_fu_702_p2 = ($signed(tmp_13_0_1_fu_422_p1) - $signed(tmp_12_0_1_fu_418_p1));

assign r_V_2_1_fu_1032_p2 = ($signed(tmp_12_0_1_fu_418_p1) - $signed(tmp_12_0_2_fu_492_p1));

assign r_V_2_3_fu_1098_p2 = ($signed(tmp_12_0_3_fu_562_p1) - $signed(tmp_12_0_2_fu_492_p1));

assign r_V_2_4_fu_1164_p2 = ($signed(tmp_12_0_4_fu_632_p1) - $signed(tmp_12_0_2_fu_492_p1));

assign r_V_2_fu_966_p2 = ($signed(tmp_13_0_1_fu_422_p1) - $signed(tmp_12_0_2_fu_492_p1));

assign r_V_3_1_fu_1296_p2 = ($signed(tmp_12_0_1_fu_418_p1) - $signed(tmp_12_0_3_fu_562_p1));

assign r_V_3_2_fu_1362_p2 = ($signed(tmp_12_0_2_fu_492_p1) - $signed(tmp_12_0_3_fu_562_p1));

assign r_V_3_4_fu_1428_p2 = ($signed(tmp_12_0_4_fu_632_p1) - $signed(tmp_12_0_3_fu_562_p1));

assign r_V_3_fu_1230_p2 = ($signed(tmp_13_0_1_fu_422_p1) - $signed(tmp_12_0_3_fu_562_p1));

assign r_V_4_1_fu_1560_p2 = ($signed(tmp_12_0_1_fu_418_p1) - $signed(tmp_12_0_4_fu_632_p1));

assign r_V_4_2_fu_1626_p2 = ($signed(tmp_12_0_2_fu_492_p1) - $signed(tmp_12_0_4_fu_632_p1));

assign r_V_4_3_fu_1692_p2 = ($signed(tmp_12_0_3_fu_562_p1) - $signed(tmp_12_0_4_fu_632_p1));

assign r_V_4_fu_1494_p2 = ($signed(tmp_13_0_1_fu_422_p1) - $signed(tmp_12_0_4_fu_632_p1));

assign ret_V_1_1_fu_2057_p2 = ($signed(13'd1) + $signed(p_Result_cast_12_fu_2027_p1));

assign ret_V_1_2_fu_2131_p2 = ($signed(13'd1) + $signed(p_Result_5_cast_fu_2101_p1));

assign ret_V_1_3_fu_2205_p2 = ($signed(13'd1) + $signed(p_Result_3_cast_fu_2175_p1));

assign ret_V_1_4_fu_2279_p2 = ($signed(13'd1) + $signed(p_Result_4_cast_fu_2249_p1));

assign ret_V_1_fu_1983_p2 = ($signed(13'd1) + $signed(p_Result_cast_fu_1953_p1));

assign tmp10_fu_1925_p2 = (exp_table1_load_14_reg_2838 + exp_table1_load_13_reg_2833);

assign tmp11_fu_1874_p2 = (18'd1024 + exp_table1_q15);

assign tmp12_fu_1880_p2 = (tmp11_fu_1874_p2 + exp_table1_q12);

assign tmp13_fu_1934_p2 = (exp_table1_load_18_reg_2848 + exp_table1_load_19_reg_2853);

assign tmp14_fu_1886_p2 = (18'd1024 + exp_table1_q16);

assign tmp15_fu_1892_p2 = (tmp14_fu_1886_p2 + exp_table1_q17);

assign tmp1_fu_1850_p2 = (18'd1024 + exp_table1_q7);

assign tmp2_fu_1916_p2 = (exp_table1_load_10_reg_2823 + exp_table1_load_9_reg_2818);

assign tmp3_fu_1898_p2 = (exp_table1_load_2_reg_2793 + exp_table1_load_1_reg_2788);

assign tmp4_fu_1844_p2 = (tmp5_fu_1838_p2 + exp_table1_q0);

assign tmp5_fu_1838_p2 = (18'd1024 + exp_table1_q3);

assign tmp6_fu_1862_p2 = (18'd1024 + exp_table1_q11);

assign tmp7_fu_1868_p2 = (tmp6_fu_1862_p2 + exp_table1_q8);

assign tmp8_fu_1907_p2 = (exp_table1_load_6_reg_2808 + exp_table1_load_5_reg_2803);

assign tmp9_fu_1856_p2 = (tmp1_fu_1850_p2 + exp_table1_q4);

assign tmp_100_fu_2113_p1 = p_Val2_7_2_4_fu_1920_p2[5:0];

assign tmp_101_fu_2153_p1 = p_4_2_fu_2145_p3[11:0];

assign tmp_103_fu_2397_p1 = p_2_2_fu_2391_p3[9:0];

assign tmp_104_fu_2401_p4 = {{p_2_2_fu_2391_p3[11:10]}};

assign tmp_105_fu_2179_p3 = p_Val2_7_3_4_fu_1929_p2[32'd17];

assign tmp_106_fu_2187_p1 = p_Val2_7_3_4_fu_1929_p2[5:0];

assign tmp_107_fu_2227_p1 = p_4_3_fu_2219_p3[11:0];

assign tmp_109_fu_2436_p1 = p_2_3_fu_2430_p3[9:0];

assign tmp_10_1_fu_2051_p2 = ((p_Result_2_1_fu_2043_p3 == 10'd0) ? 1'b1 : 1'b0);

assign tmp_10_2_fu_2125_p2 = ((p_Result_2_2_fu_2117_p3 == 10'd0) ? 1'b1 : 1'b0);

assign tmp_10_3_fu_2199_p2 = ((p_Result_2_3_fu_2191_p3 == 10'd0) ? 1'b1 : 1'b0);

assign tmp_10_4_fu_2273_p2 = ((p_Result_2_4_fu_2265_p3 == 10'd0) ? 1'b1 : 1'b0);

assign tmp_10_fu_1104_p3 = {{r_V_2_3_fu_1098_p2}, {2'd0}};

assign tmp_110_fu_2440_p4 = {{p_2_3_fu_2430_p3[11:10]}};

assign tmp_111_fu_2253_p3 = p_Val2_7_4_4_fu_1938_p2[32'd17];

assign tmp_112_fu_2261_p1 = p_Val2_7_4_4_fu_1938_p2[5:0];

assign tmp_113_fu_2301_p1 = p_4_4_fu_2293_p3[11:0];

assign tmp_115_fu_2475_p1 = p_2_4_fu_2469_p3[9:0];

assign tmp_116_fu_2479_p4 = {{p_2_4_fu_2469_p3[11:10]}};

assign tmp_11_fu_1170_p3 = {{r_V_2_4_fu_1164_p2}, {2'd0}};

assign tmp_12_0_1_fu_418_p1 = $signed(data_1_V_read);

assign tmp_12_0_2_fu_492_p1 = $signed(data_2_V_read);

assign tmp_12_0_3_fu_562_p1 = $signed(data_3_V_read);

assign tmp_12_0_4_fu_632_p1 = $signed(data_4_V_read);

assign tmp_12_fu_1236_p3 = {{r_V_3_fu_1230_p2}, {2'd0}};

assign tmp_13_0_1_fu_422_p1 = $signed(data_0_V_read);

assign tmp_13_fu_1302_p3 = {{r_V_3_1_fu_1296_p2}, {2'd0}};

assign tmp_14_fu_1368_p3 = {{r_V_3_2_fu_1362_p2}, {2'd0}};

assign tmp_15_fu_1434_p3 = {{r_V_3_4_fu_1428_p2}, {2'd0}};

assign tmp_16_fu_1500_p3 = {{r_V_4_fu_1494_p2}, {2'd0}};

assign tmp_17_fu_1566_p3 = {{r_V_4_1_fu_1560_p2}, {2'd0}};

assign tmp_18_fu_1632_p3 = {{r_V_4_2_fu_1626_p2}, {2'd0}};

assign tmp_19_1_fu_2386_p1 = exp_res_index_1_1_fu_2378_p3;

assign tmp_19_2_fu_2425_p1 = exp_res_index_1_2_fu_2417_p3;

assign tmp_19_3_fu_2464_p1 = exp_res_index_1_3_fu_2456_p3;

assign tmp_19_4_fu_2503_p1 = exp_res_index_1_4_fu_2495_p3;

assign tmp_19_fu_1698_p3 = {{r_V_4_3_fu_1692_p2}, {2'd0}};

assign tmp_1_fu_432_p3 = {{r_V_0_1_fu_426_p2}, {2'd0}};

assign tmp_20_fu_1943_p4 = {{p_Val2_7_0_4_fu_1902_p2[17:6]}};

assign tmp_21_fu_456_p3 = index_0_1_fu_444_p2[32'd11];

assign tmp_22_fu_1977_p2 = ((p_Result_2_fu_1969_p3 == 10'd0) ? 1'b1 : 1'b0);

assign tmp_23_fu_2017_p4 = {{p_Val2_7_1_4_fu_1911_p2[17:6]}};

assign tmp_24_fu_472_p1 = p_3_0_1_fu_464_p3[9:0];

assign tmp_25_0_1_fu_1758_p1 = index_1_0_1_reg_2588;

assign tmp_25_0_2_fu_1762_p1 = index_1_0_2_reg_2593;

assign tmp_25_0_3_fu_1766_p1 = index_1_0_3_reg_2598;

assign tmp_25_0_4_fu_1770_p1 = index_1_0_4_reg_2603;

assign tmp_25_1_2_fu_1778_p1 = index_1_1_2_reg_2613;

assign tmp_25_1_3_fu_1782_p1 = index_1_1_3_reg_2618;

assign tmp_25_1_4_fu_1786_p1 = index_1_1_4_reg_2623;

assign tmp_25_1_fu_1774_p1 = index_1_1_reg_2608;

assign tmp_25_2_1_fu_1794_p1 = index_1_2_1_reg_2633;

assign tmp_25_2_3_fu_1798_p1 = index_1_2_3_reg_2638;

assign tmp_25_2_4_fu_1802_p1 = index_1_2_4_reg_2643;

assign tmp_25_2_fu_1790_p1 = index_1_2_reg_2628;

assign tmp_25_3_1_fu_1810_p1 = index_1_3_1_reg_2653;

assign tmp_25_3_2_fu_1814_p1 = index_1_3_2_reg_2658;

assign tmp_25_3_4_fu_1818_p1 = index_1_3_4_reg_2663;

assign tmp_25_3_fu_1806_p1 = index_1_3_reg_2648;

assign tmp_25_4_1_fu_1826_p1 = index_1_4_1_reg_2673;

assign tmp_25_4_2_fu_1830_p1 = index_1_4_2_reg_2678;

assign tmp_25_4_3_fu_1834_p1 = index_1_4_3_reg_2683;

assign tmp_25_4_fu_1822_p1 = index_1_4_reg_2668;

assign tmp_25_fu_2091_p4 = {{p_Val2_7_2_4_fu_1920_p2[17:6]}};

assign tmp_26_fu_476_p3 = p_3_0_1_fu_464_p3[32'd10];

assign tmp_27_fu_2165_p4 = {{p_Val2_7_3_4_fu_1929_p2[17:6]}};

assign tmp_28_fu_526_p3 = index_0_2_fu_514_p2[32'd11];

assign tmp_29_fu_2239_p4 = {{p_Val2_7_4_4_fu_1938_p2[17:6]}};

assign tmp_2_fu_502_p3 = {{r_V_0_2_fu_496_p2}, {2'd0}};

assign tmp_30_fu_542_p1 = p_3_0_2_fu_534_p3[9:0];

assign tmp_31_fu_546_p3 = p_3_0_2_fu_534_p3[32'd10];

assign tmp_32_fu_596_p3 = index_0_3_fu_584_p2[32'd11];

assign tmp_33_fu_2347_p1 = exp_res_index_1_fu_2339_p3;

assign tmp_34_fu_612_p1 = p_3_0_3_fu_604_p3[9:0];

assign tmp_35_fu_616_p3 = p_3_0_3_fu_604_p3[32'd10];

assign tmp_36_fu_666_p3 = index_0_4_fu_654_p2[32'd11];

assign tmp_37_fu_682_p1 = p_3_0_4_fu_674_p3[9:0];

assign tmp_38_fu_686_p3 = p_3_0_4_fu_674_p3[32'd10];

assign tmp_39_fu_732_p3 = index_s_fu_720_p2[32'd11];

assign tmp_3_fu_572_p3 = {{r_V_0_3_fu_566_p2}, {2'd0}};

assign tmp_40_fu_748_p1 = p_3_1_fu_740_p3[9:0];

assign tmp_41_fu_752_p3 = p_3_1_fu_740_p3[32'd10];

assign tmp_42_fu_798_p3 = index_121_2_fu_786_p2[32'd11];

assign tmp_43_fu_814_p1 = p_3_1_2_fu_806_p3[9:0];

assign tmp_44_fu_818_p3 = p_3_1_2_fu_806_p3[32'd10];

assign tmp_45_fu_864_p3 = index_121_3_fu_852_p2[32'd11];

assign tmp_46_fu_880_p1 = p_3_1_3_fu_872_p3[9:0];

assign tmp_47_fu_884_p3 = p_3_1_3_fu_872_p3[32'd10];

assign tmp_48_fu_930_p3 = index_121_4_fu_918_p2[32'd11];

assign tmp_49_fu_946_p1 = p_3_1_4_fu_938_p3[9:0];

assign tmp_4_fu_642_p3 = {{r_V_0_4_fu_636_p2}, {2'd0}};

assign tmp_50_fu_950_p3 = p_3_1_4_fu_938_p3[32'd10];

assign tmp_51_fu_996_p3 = index_2_fu_984_p2[32'd11];

assign tmp_52_fu_1012_p1 = p_3_2_fu_1004_p3[9:0];

assign tmp_53_fu_1016_p3 = p_3_2_fu_1004_p3[32'd10];

assign tmp_54_fu_1062_p3 = index_2_1_fu_1050_p2[32'd11];

assign tmp_55_fu_1078_p1 = p_3_2_1_fu_1070_p3[9:0];

assign tmp_56_fu_1082_p3 = p_3_2_1_fu_1070_p3[32'd10];

assign tmp_57_fu_1128_p3 = index_2_3_fu_1116_p2[32'd11];

assign tmp_58_fu_1144_p1 = p_3_2_3_fu_1136_p3[9:0];

assign tmp_59_fu_1148_p3 = p_3_2_3_fu_1136_p3[32'd10];

assign tmp_5_fu_708_p3 = {{r_V_1_fu_702_p2}, {2'd0}};

assign tmp_60_fu_1194_p3 = index_2_4_fu_1182_p2[32'd11];

assign tmp_61_fu_1210_p1 = p_3_2_4_fu_1202_p3[9:0];

assign tmp_62_fu_1214_p3 = p_3_2_4_fu_1202_p3[32'd10];

assign tmp_63_fu_1260_p3 = index_3_fu_1248_p2[32'd11];

assign tmp_64_fu_1276_p1 = p_3_3_fu_1268_p3[9:0];

assign tmp_65_fu_1280_p3 = p_3_3_fu_1268_p3[32'd10];

assign tmp_66_fu_1326_p3 = index_3_1_fu_1314_p2[32'd11];

assign tmp_67_fu_1342_p1 = p_3_3_1_fu_1334_p3[9:0];

assign tmp_68_fu_1346_p3 = p_3_3_1_fu_1334_p3[32'd10];

assign tmp_69_fu_1392_p3 = index_3_2_fu_1380_p2[32'd11];

assign tmp_6_fu_774_p3 = {{r_V_1_2_fu_768_p2}, {2'd0}};

assign tmp_70_fu_1408_p1 = p_3_3_2_fu_1400_p3[9:0];

assign tmp_71_fu_1412_p3 = p_3_3_2_fu_1400_p3[32'd10];

assign tmp_72_fu_1458_p3 = index_3_4_fu_1446_p2[32'd11];

assign tmp_73_fu_1474_p1 = p_3_3_4_fu_1466_p3[9:0];

assign tmp_74_fu_1478_p3 = p_3_3_4_fu_1466_p3[32'd10];

assign tmp_75_fu_1524_p3 = index_4_fu_1512_p2[32'd11];

assign tmp_76_fu_1540_p1 = p_3_4_fu_1532_p3[9:0];

assign tmp_77_fu_1544_p3 = p_3_4_fu_1532_p3[32'd10];

assign tmp_78_fu_1590_p3 = index_4_1_fu_1578_p2[32'd11];

assign tmp_79_fu_1606_p1 = p_3_4_1_fu_1598_p3[9:0];

assign tmp_7_fu_840_p3 = {{r_V_1_3_fu_834_p2}, {2'd0}};

assign tmp_80_fu_1610_p3 = p_3_4_1_fu_1598_p3[32'd10];

assign tmp_81_fu_1656_p3 = index_4_2_fu_1644_p2[32'd11];

assign tmp_82_fu_1672_p1 = p_3_4_2_fu_1664_p3[9:0];

assign tmp_83_fu_1676_p3 = p_3_4_2_fu_1664_p3[32'd10];

assign tmp_84_fu_1722_p3 = index_4_3_fu_1710_p2[32'd11];

assign tmp_85_fu_1738_p1 = p_3_4_3_fu_1730_p3[9:0];

assign tmp_86_fu_1742_p3 = p_3_4_3_fu_1730_p3[32'd10];

assign tmp_87_fu_1957_p3 = p_Val2_7_0_4_fu_1902_p2[32'd17];

assign tmp_88_fu_1965_p1 = p_Val2_7_0_4_fu_1902_p2[5:0];

assign tmp_89_fu_2005_p1 = p_4_fu_1997_p3[11:0];

assign tmp_8_fu_906_p3 = {{r_V_1_4_fu_900_p2}, {2'd0}};

assign tmp_91_fu_2319_p1 = p_2_fu_2313_p3[9:0];

assign tmp_92_fu_2323_p4 = {{p_2_fu_2313_p3[11:10]}};

assign tmp_93_fu_2031_p3 = p_Val2_7_1_4_fu_1911_p2[32'd17];

assign tmp_94_fu_2039_p1 = p_Val2_7_1_4_fu_1911_p2[5:0];

assign tmp_95_fu_2079_p1 = p_4_1_fu_2071_p3[11:0];

assign tmp_97_fu_2358_p1 = p_2_1_fu_2352_p3[9:0];

assign tmp_98_fu_2362_p4 = {{p_2_1_fu_2352_p3[11:10]}};

assign tmp_99_fu_2105_p3 = p_Val2_7_2_4_fu_1920_p2[32'd17];

assign tmp_9_fu_972_p3 = {{r_V_2_fu_966_p2}, {2'd0}};

assign tmp_s_fu_1038_p3 = {{r_V_2_1_fu_1032_p2}, {2'd0}};

endmodule //softmax
